(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    246101,       5428]
NotebookOptionsPosition[    177128,       3955]
NotebookOutlinePosition[    243185,       5343]
CellTagsIndexPosition[    243142,       5340]
WindowFrame->Normal
ContainsDynamic->False*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
PHAS2443: Practical Mathematics II
Exercises 4: Time-Dependent Problems      Model Solutions\
\>", "Title"],

Cell[TextData[{
 StyleBox["1.",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" We saw in Lecture 3 that the forward Euler method is not very \
good at preserving the energy in a simulation of a Simple Harmonic Oscillator \
problem. This exercise compares the behaviour of that algorithm with two \
algorithms of the kind introduced by Verlet. There are three commonly-used \
forms of Verlet algorithm: we consider a particle of unit mass moving in one \
dimension under the influence of a force ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["F",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["(",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["x",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["), and integrate with a constant time-step \[CapitalDelta]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[":\n  a) Simple Verlet\n         ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["x",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["(",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["+\[CapitalDelta]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[") = 2 ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["x",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["(",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[") - x(",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["-\[CapitalDelta]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[") + ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     StyleBox[
      RowBox[{"\[CapitalDelta]", 
       StyleBox["t",
        FontSlant->"Italic"]}]], "2"], " ", 
    RowBox[{"F", "(", 
     RowBox[{"x", "(", "t", ")"}], ")"}]}], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",\n         with the velocity at time ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" calculated as\n         ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{"v", "(", "t", ")"}],
     FontSize->18], 
    StyleBox["=",
     FontSize->18], 
    FractionBox[
     RowBox[{
      RowBox[{"x", "(", 
       RowBox[{"t", "+", 
        StyleBox[
         RowBox[{"\[CapitalDelta]", 
          StyleBox["t",
           FontSlant->"Italic"]}]]}], ")"}], " ", "-", " ", 
      RowBox[{"x", "(", 
       RowBox[{"t", "-", 
        StyleBox[
         RowBox[{"\[CapitalDelta]", 
          StyleBox["t",
           FontSlant->"Italic"]}]]}], ")"}]}], 
     RowBox[{"2", " ", 
      StyleBox[
       RowBox[{"\[CapitalDelta]", 
        StyleBox["t",
         FontSlant->"Italic"]}]]}]]}], TraditionalForm]],
  FontSize->24,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".\n    b) Leap-Frog Verlet\n        This introduces the velocities \
at half-time-steps\n        ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"v", "(", 
     RowBox[{"t", "+", 
      RowBox[{"\[CapitalDelta]", " ", 
       RowBox[{"t", "/", "2"}]}]}], ")"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"v", "(", 
      RowBox[{"t", "-", 
       RowBox[{"\[CapitalDelta]", " ", 
        RowBox[{"t", "/", "2"}]}]}], ")"}], " ", "+", " ", 
     RowBox[{"\[CapitalDelta]", " ", "t", " ", 
      RowBox[{"F", "(", 
       RowBox[{"x", "(", "t", ")"}], ")"}]}]}]}], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",\n        ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "(", 
     RowBox[{"t", "+", 
      RowBox[{"\[CapitalDelta]", " ", "t"}]}], ")"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"x", "(", "t", ")"}], " ", "+", " ", 
     RowBox[{"\[CapitalDelta]", " ", "t", "  ", 
      RowBox[{"v", "(", 
       RowBox[{"t", "+", 
        RowBox[{"\[CapitalDelta]", " ", 
         RowBox[{"t", "/", "2"}]}]}], ")"}]}]}]}], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1]],
 ",\n      ",
 StyleBox["  and then if the velocity at ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" is needed it is estimated from\n        ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{"v", "(", "t", ")"}],
     FontSize->18], 
    StyleBox["=",
     FontSize->18], 
    FractionBox[
     RowBox[{
      RowBox[{"v", "(", 
       RowBox[{"t", "+", 
        RowBox[{"\[CapitalDelta]t", "/", "2"}]}], ")"}], " ", "+", " ", 
      RowBox[{"v", "(", 
       RowBox[{"t", "-", 
        RowBox[{"\[CapitalDelta]t", "/", "2"}]}], ")"}]}], "2"]}], 
   TraditionalForm]],
  FontSize->24,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".\n     c) velocity-Verlet\n        uses the definition\n        ",
  
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{"v", "(", "t", ")"}],
     FontSize->18], 
    StyleBox["=",
     FontSize->18], 
    FractionBox[
     RowBox[{
      RowBox[{"x", "(", 
       RowBox[{"t", "+", 
        StyleBox[
         RowBox[{"\[CapitalDelta]", 
          StyleBox["t",
           FontSlant->"Italic"]}]]}], ")"}], " ", "-", " ", 
      RowBox[{"x", "(", 
       RowBox[{"t", "-", 
        StyleBox[
         RowBox[{"\[CapitalDelta]", 
          StyleBox["t",
           FontSlant->"Italic"]}]]}], ")"}]}], 
     RowBox[{"2", " ", 
      StyleBox[
       RowBox[{"\[CapitalDelta]", 
        StyleBox["t",
         FontSlant->"Italic"]}]]}]]}], TraditionalForm]],
  FontSize->24,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\n        to evaluate velocities and positions at the same times:\n\
        ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{"   ", 
    RowBox[{
     RowBox[{"x", "(", 
      RowBox[{"t", "+", 
       RowBox[{"\[CapitalDelta]", " ", "t"}]}], ")"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"x", "(", "t", ")"}], " ", "+", " ", 
      RowBox[{"\[CapitalDelta]", " ", "t", "  ", 
       RowBox[{"v", "(", "t", ")"}]}], " ", "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[CapitalDelta]", " ", "t"}], ")"}], "2"], " ", 
       RowBox[{"F", "(", 
        RowBox[{"x", "(", "t", ")"}], ")"}]}]}]}]}], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["/2,",
  FontColor->RGBColor[0, 0, 1]],
 "\n          ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"v", "(", 
     RowBox[{"t", "+", 
      RowBox[{"\[CapitalDelta]", " ", "t"}]}], ")"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"v", "(", "t", ")"}], " ", "+", " ", 
     RowBox[{"\[CapitalDelta]", " ", 
      RowBox[{
       RowBox[{"t", " ", "[", 
        RowBox[{
         RowBox[{"F", "(", 
          RowBox[{"x", "(", 
           RowBox[{"t", "+", 
            RowBox[{"\[CapitalDelta]", " ", "t"}]}], ")"}], ")"}], "+", 
         RowBox[{"F", "(", 
          RowBox[{"x", "(", "t", ")"}], ")"}]}], "]"}], "/", "2"}]}]}]}], 
   TraditionalForm]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".\n       Write code to implement algorithms a), b) and c), and \
apply them to solve the simple harmonic oscillator problem for a unit mass on \
the end of a spring with spring constant unity, starting at rest with a \
displacement of 1. In each case plot i) the phase diagram, with position \
along the x-axis and velocity up the y-axis, with the unit circle drawn to \
illustrate the ideal result, ii) the difference between the total energy ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["v", "2"], " ", "+", " ", 
        SuperscriptBox["x", "2"]}], ")"}], "/", "2"}], " ", "and", " ", "the",
      " ", "exact", " ", "energy"}], ",", " ", 
    RowBox[{"0.5", "."}]}], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1]],
 " ",
 StyleBox["In each case integrate up to a time of 100, with a timestep of 1 \
and with a timestep of 0.1.",
  FontColor->RGBColor[0, 0, 1]],
 "\n     ",
 StyleBox["  You may find it useful to keep, at each step, a list of values \
such as ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["{x, xlast,vel}",
  FontFamily->"Courier New",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" and to write the update in a form such as ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["update[{x,xlast,vel}]:={(function of x, xlast, vel), x, (function \
of x, xlast, vel)}",
  FontFamily->"Courier New",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" -- if you think back to our functions for the Fibonacci numbers \
in PHAS1449, or Newton's method in lecture 1 of this course, you will find \
similar expressions. If you are at all confused about the order in which \
things will get evaluated, you might find it easier to write a ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Module",
  FontFamily->"Courier New",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".",
  FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell[CellGroupData[{

Cell["Comment", "Section",
 CellChangeTimes->{{3.442730646144*^9, 3.442730648309*^9}}],

Cell["\<\
In this section, I' m going to try to explain how one would go about setting \
up the code that is needed. If the full - blown function in the Solution \
section looks daunting, read this first.\
\>", "Text",
 CellChangeTimes->{{3.442730663262*^9, 3.4427307403450003`*^9}}],

Cell[TextData[{
 StyleBox["The basic algorithm is \n ",
  FontColor->GrayLevel[0]],
 StyleBox["x",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox["(",
  FontColor->GrayLevel[0]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox["+\[CapitalDelta]",
  FontColor->GrayLevel[0]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox[") = 2 ",
  FontColor->GrayLevel[0]],
 StyleBox["x",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox["(",
  FontColor->GrayLevel[0]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox[") - x(",
  FontColor->GrayLevel[0]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox["-\[CapitalDelta]",
  FontColor->GrayLevel[0]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox[") + ",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     StyleBox[
      RowBox[{"\[CapitalDelta]", 
       StyleBox["t",
        FontSlant->"Italic"]}]], "2"], " ", 
    RowBox[{"F", "(", 
     RowBox[{"x", "(", "t", ")"}], ")"}]}], TraditionalForm]],
  FontColor->GrayLevel[0]],
 StyleBox[",\nso we need to keep two successive values of ",
  FontColor->GrayLevel[0]],
 StyleBox["x",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox[". If we call these ",
  FontColor->GrayLevel[0]],
 StyleBox["xnext",
  FontFamily->"Courier New",
  FontColor->GrayLevel[0]],
 StyleBox[" and ",
  FontColor->GrayLevel[0]],
 StyleBox["x",
  FontFamily->"Courier New",
  FontColor->GrayLevel[0]],
 StyleBox[", then at the start of the step ",
  FontColor->GrayLevel[0]],
 StyleBox["xnext",
  FontFamily->"Courier New",
  FontColor->GrayLevel[0]],
 StyleBox["=",
  FontColor->GrayLevel[0]],
 StyleBox["x",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox["(",
  FontColor->GrayLevel[0]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox[") and ",
  FontColor->GrayLevel[0]],
 StyleBox["x",
  FontFamily->"Courier New",
  FontColor->GrayLevel[0]],
 StyleBox["=x(",
  FontColor->GrayLevel[0]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox["-\[CapitalDelta]",
  FontColor->GrayLevel[0]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox["), but at the end of the step ",
  FontColor->GrayLevel[0]],
 StyleBox["xnext",
  FontFamily->"Courier New",
  FontColor->GrayLevel[0]],
 StyleBox[" = ",
  FontColor->GrayLevel[0]],
 StyleBox["x",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox["(",
  FontColor->GrayLevel[0]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox["+\[CapitalDelta]",
  FontColor->GrayLevel[0]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox[") and ",
  FontColor->GrayLevel[0]],
 StyleBox["x",
  FontFamily->"Courier New",
  FontColor->GrayLevel[0]],
 StyleBox["=",
  FontColor->GrayLevel[0]],
 StyleBox["x",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox["(",
  FontColor->GrayLevel[0]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox["). For the spring with unit spring constant, ",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"F", "(", 
      RowBox[{"x", "(", "t", ")"}], ")"}], "=", 
     RowBox[{"-", 
      RowBox[{"x", "(", "t", ")"}]}]}], ","}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontColor->GrayLevel[0]],
 StyleBox[" so we ca",
  FontColor->GrayLevel[0]],
 "n write an initial update function as "
}], "Text",
 CellChangeTimes->{{3.442730836587*^9, 3.442731000737*^9}, {3.442731081637*^9,
   3.442731190448*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"upd", "[", 
   RowBox[{"{", 
    RowBox[{"xnext_", ",", "x_"}], "}"}], "]"}], ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", "xnext"}], "-", "x", "-", 
     RowBox[{
      SuperscriptBox["\[CapitalDelta]t", "2"], " ", "xnext"}]}], ",", 
    "xnext"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.442731194343*^9, 3.442731231218*^9}}],

Cell[TextData[{
 "Note that the old ",
 StyleBox["xnext",
  FontFamily->"Courier New"],
 " becomes the new ",
 StyleBox["x",
  FontFamily->"Courier New"],
 ". The function has been defined to take a list as its argument and to \
return a list of the same form so that when we use it repeatedly we can use \
",
 StyleBox["NestList",
  FontFamily->"Courier New"],
 ", feeding the output of one update in as the input of the next.\n\nNow \
think about the initial conditions: the mass starts at rest at ",
 StyleBox["x",
  FontSlant->"Italic"],
 "=1. If it's at rest, ",
 StyleBox["x",
  FontFamily->"Courier New"],
 " and ",
 StyleBox["xnext",
  FontFamily->"Courier New"],
 " must be the same, so set both to 1."
}], "Text",
 CellChangeTimes->{{3.442731245987*^9, 3.442731347184*^9}, {
  3.4427314011400003`*^9, 3.442731453598*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"init", "=", 
  RowBox[{"{", 
   RowBox[{"1.", ",", "1."}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4427315047469997`*^9, 3.442731510606*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "1.`"}], "}"}]], "Output",
 CellChangeTimes->{3.442731512116*^9}]
}, Open  ]],

Cell["Now test the function", "Text",
 CellChangeTimes->{{3.4427315203780003`*^9, 3.442731528699*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[CapitalDelta]t", "=", "0.1"}], "\[IndentingNewLine]", 
 RowBox[{"upd", "[", "init", "]"}]}], "Input",
 CellChangeTimes->{{3.44273153606*^9, 3.442731557855*^9}}],

Cell[BoxData["0.1`"], "Output",
 CellChangeTimes->{3.4427315587320004`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.99`", ",", "1.`"}], "}"}]], "Output",
 CellChangeTimes->{3.4427315587349997`*^9}]
}, Open  ]],

Cell["That looks reasonable. Now run the update 100 times.", "Text",
 CellChangeTimes->{{3.4427315624049997`*^9, 3.442731584883*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"NestList", "[", 
    RowBox[{"upd", ",", "init", ",", "100"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.442731592885*^9, 3.4427316067939997`*^9}}],

Cell[TextData[{
 "The result is a list of 100 pairs of values, {",
 StyleBox["xnext,x",
  FontFamily->"Courier New",
  FontColor->GrayLevel[0]],
 "}. If we just want the list of x's we can transpose the output to get two \
list of 100 values, and take the second part. Let's do that and plot it."
}], "Text",
 CellChangeTimes->{{3.442731615392*^9, 3.44273163274*^9}, {3.442731667933*^9, 
  3.442731730441*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Transpose", "[", "sol", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4427317333269997`*^9, 3.442731758924*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxVlHlMk2ccxymHOpYwx1DUDFbEMYHKDQqIfG3LDYUelMPMbCCLRxFUBIRs
1iOZZwRs5ggxoxuoCHQZh+NYsLACY2YM0CHKXY5VWoGNIwxlzoXf+4dv0rz5
5Pt+n6dP+/u8dklpohRjIyOjlNef/++r12zgm3cjvMnroAoZzbFSzRCvh8G1
8aN33mbYCgczB/flb5om3gSH+vShtU8MxO9DdTiouiRaT8xG1vVag1T+jHgr
uoWXCtVpfxJvg795pc7JfoLYAYN+LGV2sZZ4O7piN7JdBoaJnWB1xeDc/+FT
Yg5e3vD8+wbnEbELXIyn6va/ekDshox2pXNLYxOxO3ZtXfgp5Y6C2APRZ1xH
2jNq7q+yJ7gruedKZ9qIvTA4HdlrXdtN7A119bzHutbHxD4QXTYbtf16kHgn
sr+XxtdfGyXeBe2tXI+jDuPEvsiWl2RdvThJ7IdwfqdquUpH7A+BcZTljptT
xLth+k1jQwDPQByAzd9ddJ4vfk68B+VTa+y6q6aJA3GBzT9vnTlDDMx1DaQ+
1BHLgc+8BwpmTGcp3wuFyaLlZB+T78X+uc8VKVKmz4XTkIW6/BytL+di4MEL
80dJzP48CDXbJ5oX9ZTzcEiyQbKZx3x/PhQL2mLvSDqfnI8T6Z7uttbM+YOQ
8rHs9qmyMcqDoOmTHDn9FvP7BcPCkSP/PXeA8mAsyerYtUW9lIeguY/r23Cm
i/IQ8NPtp5ZzNJSHYimYcyhqSUV5KLJLToYXhpfQ/x+GvvmMjOTe5lWWh8GL
M6PMlHVSHo5ce9MKceIflIejZmyLf0tIP+URWF9k7lqZNUJ5BNhl7bZCuzHK
I7EjYNrwopDmWx6JT4LvLSX0M/MfhXvHSz1Kh8kPeRTMxg6MVysZfwTgnpfq
zGyeUy5Al5WVa1cU4180zNkJJ9e4k5/yaKS+yn03WcP4GoOnnD1JPibkN2LQ
YP/z6ZxF5vkY7O7Wb6hVEKtjMN7G7dmoZdYXou4r06WDI7Q/hPgtsc01sIB8
lwtxZ6JxenZ5ivqvWd+ky7NlfBfh0qmVb7UsOi9EKOKwuIK749QXYa0spKrH
hnxXi9BztvqmoXWI+mL0uiQnylhPqC+GQCY5rnvZQ30xfvlxp3/+tQ7qi+H2
kPWepr2e+hIYzV3/YptnCPUlGD6WHnb0SD3NgwTWZSy9dVLHKqsl6OYe6Gia
7KH5iYXLLddUC0PfKiMWoarAD/J/GKJ+LEqq7H1hpaV+LGxaHPPSlIzvUogf
y1I7/6F5hxR/VVgO7bN+Rn0p3PK4ZyvnyRe1FFdreIdXrjC+xyHoRKnAZ4B8
QxxyPnU0/XeI8TEO6omK9U0F5Ks6Dl96bYm4u8D4Gw/l5dqGJBPyHfGw7VjQ
jLUyvsfDi3dBVO7J9ONhsexxrEDIvE8S0Kkwme23Y/ZPgN+v/Jj82/r7/wEh
dv/U
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, Automatic},
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.442731759564*^9}]
}, Open  ]],

Cell[TextData[{
 "That certainly looks like simple harmonic motion.\n  \n  ",
 StyleBox["The question asks us to plot velocity against position, so we need \
to compute the velocities. We know how to do this :\n  ",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{"v", "(", "t", ")"}],
     FontSize->18], 
    StyleBox["=",
     FontSize->18], 
    FractionBox[
     RowBox[{
      RowBox[{"x", "(", 
       RowBox[{"t", "+", 
        StyleBox[
         RowBox[{"\[CapitalDelta]", 
          StyleBox["t",
           FontSlant->"Italic"]}]]}], ")"}], " ", "-", " ", 
      RowBox[{"x", "(", 
       RowBox[{"t", "-", 
        StyleBox[
         RowBox[{"\[CapitalDelta]", 
          StyleBox["t",
           FontSlant->"Italic"]}]]}], ")"}]}], 
     RowBox[{"2", " ", 
      StyleBox[
       RowBox[{"\[CapitalDelta]", 
        StyleBox["t",
         FontSlant->"Italic"]}]]}]]}], TraditionalForm]],
  FontSize->24,
  FontColor->GrayLevel[0]],
 StyleBox[",\n  a centred difference formula. We could just use the results \
already calculated, and post-process them to get the velocities, put the \
positions and velocities together, and plot them:",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.442731764573*^9, 3.442731922693*^9}, {3.442732010111*^9,
   3.442732028782*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pos", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", "sol", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vel", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"RotateLeft", "[", "pos", "]"}], "-", 
      RowBox[{"RotateRight", "[", "pos", "]"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "\[CapitalDelta]t"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"pos", ",", "vel"}], "}"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.442731953377*^9, 3.442732082175*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
    "]]},
  Axes->True,
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.442732061766*^9, 3.44273208379*^9}}]
}, Open  ]],

Cell[TextData[{
 "Of course, the reason why this looks bad is that the",
 StyleBox[" Rotate",
  FontFamily->"Courier New"],
 " functions have wrapped around, so we need to ignore the first and last \
entries :"
}], "Text",
 CellChangeTimes->{{3.4427320997019997`*^9, 3.442732144334*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Rest", "[", 
    RowBox[{"Most", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"pos", ",", "vel"}], "}"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.442732165191*^9, 3.442732195906*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwllH841AccxxGFTFvRTc+YH6XlDkWasvrUUYf5MWX6ISpq/XC3TEhsDbW2
YoVumsrCrh/IFZLzI5+Tu2R7yMn8PMfduXPuvndfFiZFs2fv53k/7+f95/t5
Xs/bLurkziMGenp60fP+L//XGBTk/adi5DKkyRZcErK2HVS02zch4Vq3esli
EpL2BjC3cF/gscSB8OwPdVD/u0rsO/EXOtbEShb1EuCTMPbLlt5+5J7YXskJ
1kBM/V1efN0Qnr5aRYSljkLIt3dT4w/IURRyKY9/cgRoXCcLsUiBXqZlKicH
BQjiyvqOmqlwYJN+YVKBDG7tX+MVbaLG9i+X27qIB+Hj5xs+rW7SoEUmQe1f
1Qc5fY/j/tmgxbfX3P++RuuEpP6SC6wDOnQxUPMi3/0JQYNe6fabSIxvLqQ+
rWuAQx6/pSkFJHraT9YfuceG5NYoRtgcicFprkPN8Y9Q4ydtkShIpM+mnLtN
PsMwTlFpQwqJA7qALkqVCNsExjeMGnXIr5xwMxZ248ofW69nV2txZ4aR1ObX
AZwuDdxkGkVg0oOwPTVXpGj9lbilt0mNsjspbl87DqOe5Q83V0pVmJTKOf3z
RSUaL8tnNTQo0d+njTtToUKXi/5GNlHDGGQQuNQ5X41FwiKvYJEUDW/V1W72
JlDHiHz7bJUErX6/SJ0o0OKFibG5xvAeLFUvtBNV6DBM6Xv60K4O/MnW5zwl
kcSC2So9F8/n+KpdzHqpmu/XqZvWUarxKw9xDmk4hvzHqQXlqnPAXjC1VNlD
4tpi+/I503qIfPUd+0gYib6EefLle3+Ak8ScX3pOhxYZlgcenHsJ4j/fmHZG
aTHZYDbTPq0XQgSfKBqnNHi2RG/V55sH4XioZaiVtxrLTSK+fBIqA/akrMAj
QIVtp45zR/qH4VSs+zobihI1018MljqPwJEI5t0zxXKMmdozYOUzCoKe0Jjv
TaQYxnxwvtdKA+ZraKkvUsR4jNq/w7OEgGkmz7bqRhfyfRnrPMa10NhD31ib
1o4Uga1zhkYHPrEO6plkAVYx/CJrckmY3kE7HjjNxdol4xkm4/MccxL88/w5
8JlxbDr7NQk9E/Hx0V2NIHZ3jPZ5SMJ6GlmYyGyDO45J4k5LElIcDO/v2vcX
6NP3+ImoOngkX+H1lNEPN7lOT7ImCHj/hqlr2ekhiLRwWLj2lAZsi5ttQuzk
kO0UV3WxdBScN+uIN3kK2Lq0eButaAQO7ng8vbd/BMoWs/cH7VfA47jbbrcH
R2HjkuPXGwdlYCQ/PFxZqIH63QmZcrchoJ8PUxlZa0E33q1eUdMH7RYWru2B
Omi3XJFu9LwTTG33JixcR4JPqM3DM96twHqX8kG0gATfNL7LXCkf+mhbojYs
GAPbh4kEJ+gW1Do0fZ88RQJ/5y87KgXl+JlIY1nFJoG3ddHllmtCHH5G71gu
08EnfsbU16Yi5OUaTh8b0oLSU7yHadONrfueuUIOAQXqrv0Pp8R4T1GnG5tR
Qw11VfRRuhTvaRpUWTajkPsRL5kxIMdLZ2aLZPojsK3u0bbA7Uq8QdOnB5UM
wxXvy5XB8SpcxGRUdFjLYIYixOrDauxIr8wnhBIwW83Ku/wBgV0u0fuY+r3g
z2MxLyVqMYgZGqd62wERwX/vtsrS4fPqT72yr7SAUD2efSJ8nuOX+ssEzTXw
B/PozYQuEvVeXT270p0BTjHNZ969I3Hwm1i/r2NqMCDg4Mv8bhIpxfoaSlQL
Sg6wTXgRJIroh1salB243MyDeuHq/J/ccWWZEz1Yksnpei9Fi75c+Di7XIKN
EXVm1hQCORUOG7dayHAgt9zAO0aN1k/XZJ0sHMaYapZRc4oKd3UzWW2vlbgy
N/OH/EAljt9fKgmnjGLITdqxcKUc12bR08sm1GjmOFm/OkCKPz/yPjGbSWCH
RPxm9+IB3H7qdtAGsRbpjdMGC9d3Y/KhNYZzEh22JfmzA+1EyFfcf78hh0TD
79ovJQiF+OP6FZ+XTJL4RX31k9V2FViYUVUbtWAMC+yaupaJ88GmZVIgF5L4
YTavxvQsH9Z7/7Sz1J3Erc6eGfuWt4L5jNs3OSE6fPvCpdeqohPa2AvG+u3m
d0sC/RZz+uBfmqVeZQ==
    "]]},
  Axes->True,
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.442732197283*^9}]
}, Open  ]],

Cell["\<\
Alternatively, we could add the velocity to the list of items calculated at \
each step (and, of course, to the initial values).\
\>", "Text",
 CellChangeTimes->{{3.4427322261940002`*^9, 3.442732268894*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"upd2", "[", 
   RowBox[{"{", 
    RowBox[{"xnext_", ",", "x_", ",", "v_"}], "}"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", "xnext"}], "-", "x", "-", 
     RowBox[{
      SuperscriptBox["\[CapitalDelta]t", "2"], " ", "xnext"}]}], ",", "xnext",
     ",", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "xnext"}], "-", "x", "-", 
        RowBox[{
         SuperscriptBox["\[CapitalDelta]t", "2"], " ", "xnext"}]}], ")"}], 
      "-", "x"}], 
     RowBox[{"2", " ", "\[CapitalDelta]t"}]]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"init", "=", 
  RowBox[{"{", 
   RowBox[{"1.", ",", "1.", ",", "0."}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"upd2", "[", "init", "]"}]}], "Input",
 CellChangeTimes->{{3.442732303898*^9, 3.442732339903*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "1.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.442732342466*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.99`", ",", "1.`", ",", 
   RowBox[{"-", "0.050000000000000044`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.442732342469*^9}]
}, Open  ]],

Cell["\<\
Now the last two items in the list for each time step are the position and \
velocity at the same time (note that if we took the first and last we would \
have a time lag of \[CapitalDelta]t between the position and the speed).\
\>", "Text",
 CellChangeTimes->{{3.4427323573129997`*^9, 3.442732451523*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sol", " ", "=", " ", 
    RowBox[{"NestList", "[", 
     RowBox[{"upd2", ",", " ", "init", ",", " ", "100"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"  ", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"Rest", ",", " ", "sol"}], "]"}], ",", " ", 
    RowBox[{"Joined", " ", "->", " ", "True"}], ",", " ", "\n", "   ", 
    RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.44273258305*^9, 3.442732590146*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
    "]]},
  Axes->True,
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.442732518541*^9, 3.442732591833*^9}]
}, Open  ]],

Cell[TextData[{
 "What has been done in the solution below is to take this scheme, and \n  1. \
modify the update function so that the time step is also an argument\n  2. \
draw the unit circle and show it together with the phase plot\n  3. add some \
titles to the graphs\n  4. calculate the energy error from the results\n  5. \
put all the statements together into a module (just to make it easy to repeat \
the calculation for different time steps).\n",
 StyleBox["  But there is nothing at all wrong with leaving the calculation \
as a set of individual commands and executing them more than once: the module \
is not essential.",
  FontColor->RGBColor[1, 0, 0]]
}], "Text",
 CellChangeTimes->{{3.442732615567*^9, 3.442732845343*^9}, {
  3.4427328864969997`*^9, 3.442732922475*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Section",
 CellChangeTimes->{{3.44273074924*^9, 3.4427307516029997`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"V", "[", 
   RowBox[{"h_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"updV", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xnext_", ",", "x_", ",", "v_"}], "}"}], ",", 
        "\[CapitalDelta]t_"}], "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"2", " ", "xnext"}], "-", "x", "-", 
         RowBox[{
          SuperscriptBox["\[CapitalDelta]t", "2"], " ", "xnext"}]}], ",", 
        "xnext", ",", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "xnext"}], "-", "x", "-", 
            RowBox[{
             SuperscriptBox["\[CapitalDelta]t", "2"], " ", "xnext"}]}], ")"}],
           "-", "x"}], 
         RowBox[{"2", " ", "\[CapitalDelta]t"}]]}], "}"}]}], ";", 
     RowBox[{"sol", "=", 
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"updV", "[", 
          RowBox[{"#1", ",", "h"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.`", ",", "1.`", ",", "0.`"}], "}"}], ",", 
        RowBox[{"Floor", "[", 
         FractionBox["t", "h"], "]"}]}], "]"}]}], ";", 
     RowBox[{"phasplot", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{"Rest", ",", "sol"}], "]"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<Simple Verlet, \[CapitalDelta]t=``\>\"", ",", "h"}], 
          "]"}]}]}], "]"}]}], ";", 
     RowBox[{"phasideal", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.`", ",", "0.`"}], "}"}], ",", "1.`"}], "]"}]}], "}"}], 
       "]"}]}], ";", 
     RowBox[{"Print", "[", 
      RowBox[{"Show", "[", 
       RowBox[{"phasplot", ",", "phasideal", ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}], ";", 
     
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"0.5`", "\[InvisibleSpace]", "-", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{
             RowBox[{"Rest", "[", "#1", "]"}], ".", 
             RowBox[{"Rest", "[", "#1", "]"}]}]}]}], "&"}], ")"}], "/@", 
        "sol"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<Simple Verlet, \[CapitalDelta]t=``\>\"", ",", "h"}], 
         "]"}]}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.442650723842*^9, 3.44265079109*^9}, {3.442671540684*^9, 
  3.4426715774309998`*^9}, {3.4426716137200003`*^9, 3.442671658991*^9}, {
  3.4426717045690002`*^9, 3.442671708769*^9}, {3.442671786816*^9, 
  3.442671801708*^9}, {3.442671852329*^9, 3.442671854992*^9}, {
  3.442727274609*^9, 3.442727278928*^9}, {3.442727316587*^9, 
  3.442727323946*^9}, {3.442727398483*^9, 3.4427274690950003`*^9}, {
  3.4427275261470003`*^9, 3.4427275309630003`*^9}, {3.442730523068*^9, 
  3.442730540111*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lfV", "[", 
   RowBox[{"h_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"updlfV", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"vhnext_", ",", "xnext_", ",", "v_"}], "}"}], ",", 
        "\[CapitalDelta]t_"}], "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"vhnext", "-", 
         RowBox[{"\[CapitalDelta]t", " ", "xnext"}]}], ",", 
        RowBox[{"xnext", "+", 
         RowBox[{"\[CapitalDelta]t", " ", 
          RowBox[{"(", 
           RowBox[{"vhnext", "-", 
            RowBox[{"\[CapitalDelta]t", " ", "xnext"}]}], ")"}]}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"vhnext", "+", 
           RowBox[{"(", 
            RowBox[{"vhnext", "-", 
             RowBox[{"\[CapitalDelta]t", " ", "xnext"}]}], ")"}]}], ")"}]}]}],
        "}"}]}], ";", 
     RowBox[{"sol", "=", 
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"updlfV", "[", 
          RowBox[{"#1", ",", "h"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.`", ",", "1.`", ",", "0.`"}], "}"}], ",", 
        RowBox[{"Floor", "[", 
         FractionBox["t", "h"], "]"}]}], "]"}]}], ";", 
     RowBox[{"sol", "=", 
      RowBox[{"Transpose", "[", "sol", "]"}]}], ";", 
     RowBox[{"sol", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{
           RowBox[{
           "sol", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",",
            
           RowBox[{"-", "1"}]}], "]"}], ",", 
         RowBox[{"Rest", "[", 
          RowBox[{
          "sol", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
          "]"}]}], "}"}], "]"}]}], ";", 
     RowBox[{"phasplot", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"sol", ",", 
        RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";", 
     RowBox[{"phasideal", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.`", ",", "0.`"}], "}"}], ",", "1.`"}], "]"}]}], "}"}], 
       "]"}]}], ";", 
     RowBox[{"Print", "[", 
      RowBox[{"Show", "[", 
       RowBox[{"phasplot", ",", "phasideal", ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<Leapfrog Verlet, \[CapitalDelta]t=``\>\"", ",", "h"}], 
          "]"}]}]}], "]"}], "]"}], ";", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"0.5`", "\[InvisibleSpace]", "-", 
           FractionBox[
            RowBox[{"#1", ".", "#1"}], "2"]}], "&"}], ")"}], "/@", "sol"}], 
       ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<Leapfrog Verlet, \[CapitalDelta]t=``\>\"", ",", "h"}], 
         "]"}]}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.442727387771*^9, {3.442730236403*^9, 3.4427302660880003`*^9}, {
   3.442730457046*^9, 3.4427304872980003`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"vV", "[", 
   RowBox[{"h_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"updvV", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xnext_", ",", "vnext_"}], "}"}], ",", "\[CapitalDelta]t_"}],
        "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xnext", "+", 
         RowBox[{"\[CapitalDelta]t", " ", "vnext"}], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[CapitalDelta]t", "2"], " ", "xnext"}], "2"]}], 
        ",", 
        RowBox[{"vnext", "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[CapitalDelta]t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"xnext", "+", 
              RowBox[{"\[CapitalDelta]t", " ", "vnext"}], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["\[CapitalDelta]t", "2"], " ", "xnext"}], 
               "2"]}], ")"}], "+", "xnext"}], ")"}]}]}]}], "}"}]}], ";", 
     RowBox[{"sol", "=", 
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"updvV", "[", 
          RowBox[{"#1", ",", "h"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.`", ",", "0.`"}], "}"}], ",", 
        RowBox[{"Floor", "[", 
         FractionBox["t", "h"], "]"}]}], "]"}]}], ";", 
     RowBox[{"phasplot", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"sol", ",", 
        RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";", 
     RowBox[{"phasideal", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.`", ",", "0.`"}], "}"}], ",", "1.`"}], "]"}]}], "}"}], 
       "]"}]}], ";", 
     RowBox[{"Print", "[", 
      RowBox[{"Show", "[", 
       RowBox[{"phasplot", ",", "phasideal", ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<Velocity Verlet, \[CapitalDelta]t=``\>\"", ",", "h"}], 
          "]"}]}]}], "]"}], "]"}], ";", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"0.5`", "\[InvisibleSpace]", "-", 
           FractionBox[
            RowBox[{"#1", ".", "#1"}], "2"]}], "&"}], ")"}], "/@", "sol"}], 
       ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<Velocity Verlet, \[CapitalDelta]t=``\>\"", ",", "h"}], 
         "]"}]}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.442671761072*^9, 3.442671767104*^9}, {3.442727183441*^9,
   3.4427271861219997`*^9}, {3.4427302766940002`*^9, 3.442730295498*^9}, {
  3.4427304159969997`*^9, 3.442730443833*^9}, {3.4427305985880003`*^9, 
  3.442730600666*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"V", "[", 
  RowBox[{"1.", ",", "100."}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"lfV", "[", 
  RowBox[{"1.", ",", "100."}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"vV", "[", 
  RowBox[{"1.", ",", "100."}], "]"}]}], "Input",
 CellChangeTimes->{{3.442671876792*^9, 3.442671879152*^9}, 
   3.4427273398929996`*^9, 3.442730575028*^9}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGBIBWIQDQEf7BlQAIz/YD+a+H5U+gE6H4c5cPPQ+aPmj5o/
av6o+aPmDxPzAfZP7zs=
     "]]}, 
   {RGBColor[1, 0, 0], CircleBox[{0., 0.}]}},
  AspectRatio->Automatic,
  Axes->True,
  PlotLabel->FormBox[
    InterpretationBox[
    "\"Simple Verlet, \[CapitalDelta]t=\\!\\(TraditionalForm\\`1.`\\)\"", 
     StringForm["Simple Verlet, \[CapitalDelta]t=``", 1.], Editable -> False],
     TraditionalForm],
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Print",
 CellChangeTimes->{
  3.442650813718*^9, 3.442671671799*^9, 3.4426717220030003`*^9, {
   3.442671861915*^9, 3.442671882514*^9}, 3.442727288259*^9, {
   3.442727331916*^9, 3.4427273405559998`*^9}, 3.4427274431359997`*^9, 
   3.4427274762539997`*^9, 3.4427275385880003`*^9, 3.442730561594*^9, 
   3.442730607078*^9}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxdjrtKQ0EURTdWliksLCyMiIiI+H5FzZiYmJiYx83TVkjtL5w/cz7JT4hy
C9nrwmVYrHXOTPXzq1htSFr9/n9n+f3U5V8qj/xdnpvJdQV+C7yNfgd+F7yH
fh/+AHyI/gj+GHyC/hT+DHyO/gL+EnyF/hr+BnyL/g7+HlxD/wD/CH5CX4dP
zpHQP8OD1fA+GvBNzDe91ws8WC3sb8G3Md/2Xq/wYHWwvwPfxXzXe73Bg9XD
/h58H/N97/UOD9YA+wfwQ8wPvdfIfQLHyPsMrzHmx94HfAar8D4V7gOc0WuC
+8Ex8T7Da4r5qfcBn8Ga4f0z9wHO6DXH/eCYe5/htcD8wvuAz2At8f6l+wBn
9PrA/f+8Btq3sME=
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, Automatic},
  PlotLabel->FormBox[
    InterpretationBox[
    "\"Simple Verlet, \[CapitalDelta]t=\\!\\(TraditionalForm\\`1.`\\)\"", 
     StringForm["Simple Verlet, \[CapitalDelta]t=``", 1.], Editable -> False],
     TraditionalForm],
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{
  3.442569721481*^9, 3.442650813924*^9, 3.442671671856*^9, 3.44267172204*^9, {
   3.442671861968*^9, 3.4426718827139997`*^9}, 3.442727288446*^9, {
   3.44272733198*^9, 3.442727340601*^9}, 3.442727443244*^9, 3.442727476321*^9,
    3.442727538644*^9, 3.442730561638*^9, 3.442730607131*^9}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGBIAWIQDQEf7CH0g/0MKODDflT6ATrfHk29PZp56PxR80fN
HzV/1PxR84eJ+QBdF+4L
     "]]}, 
   {RGBColor[1, 0, 0], CircleBox[{0., 0.}]}},
  AspectRatio->Automatic,
  Axes->True,
  PlotLabel->FormBox[
    InterpretationBox[
    "\"Leapfrog Verlet, \[CapitalDelta]t=\\!\\(TraditionalForm\\`1.`\\)\"", 
     StringForm["Leapfrog Verlet, \[CapitalDelta]t=``", 1.], Editable -> 
     False], TraditionalForm],
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Print",
 CellChangeTimes->{
  3.442650813718*^9, 3.442671671799*^9, 3.4426717220030003`*^9, {
   3.442671861915*^9, 3.442671882514*^9}, 3.442727288259*^9, {
   3.442727331916*^9, 3.4427273405559998`*^9}, 3.4427274431359997`*^9, 
   3.4427274762539997`*^9, 3.4427275385880003`*^9, 3.442730561594*^9, 
   3.4427306071800003`*^9}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxdjktOAlEUBU8cOXTgwIEDNMYYYwz+//IQBEEQaL5OjYzdwt0Zb0kuQQ3E
5NRLOp3qqntf73x8FfM1SZ+/z997eb4ry3derD4k2VlP7jfAm+i34LfBJfS7
8HvgffQH8IfgI/TH8GXwCfpT+DPwOfoL+EvwFfpr+BvwLfo7+HvwA/pH+Ao4
eR8JvuocVe/1BA9WDftr8HXM173XMzxYDexvwDcx3/ReL/BgtbC/Bd/GfNt7
vcKD1cH+DnwX813v9QYPVg/7e/B959RHD5/BGnifBu4DnNGrwP3gKLzP8Bpi
fuh9wGewRvj/kfsAZ/Qa435wjL3P8JpgfuJ9wGewpvj/qfsAZ/Sa4X5wzLzP
8Hr/5x8RCa/n
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, Automatic},
  PlotLabel->FormBox[
    InterpretationBox[
    "\"Leapfrog Verlet, \[CapitalDelta]t=\\!\\(TraditionalForm\\`1.`\\)\"", 
     StringForm["Leapfrog Verlet, \[CapitalDelta]t=``", 1.], Editable -> 
     False], TraditionalForm],
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{
  3.442569721481*^9, 3.442650813924*^9, 3.442671671856*^9, 3.44267172204*^9, {
   3.442671861968*^9, 3.4426718827139997`*^9}, 3.442727288446*^9, {
   3.44272733198*^9, 3.442727340601*^9}, 3.442727443244*^9, 3.442727476321*^9,
    3.442727538644*^9, 3.442730561638*^9, 3.4427306072130003`*^9}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGBIBWIQDQEf7BlQwAMo/8V+KH8/Kv/DfjT1MHl7NP32o+aP
mj9q/qj5o+aPDPMBomntIw==
     "]]}, 
   {RGBColor[1, 0, 0], CircleBox[{0., 0.}]}},
  AspectRatio->Automatic,
  Axes->True,
  PlotLabel->FormBox[
    InterpretationBox[
    "\"Velocity Verlet, \[CapitalDelta]t=\\!\\(TraditionalForm\\`1.`\\)\"", 
     StringForm["Velocity Verlet, \[CapitalDelta]t=``", 1.], Editable -> 
     False], TraditionalForm],
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Print",
 CellChangeTimes->{
  3.442650813718*^9, 3.442671671799*^9, 3.4426717220030003`*^9, {
   3.442671861915*^9, 3.442671882514*^9}, 3.442727288259*^9, {
   3.442727331916*^9, 3.4427273405559998`*^9}, 3.4427274431359997`*^9, 
   3.4427274762539997`*^9, 3.4427275385880003`*^9, 3.442730561594*^9, 
   3.44273060726*^9}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxdjrtKQ0EURTdWlhYWFhYqIiIiPqKJz0xiYl4mJjfvVkjtL5zPspxP8hNU
IsJeA5dh3bXOzOy/fxSrDUmrn+93X6+vqnyl9fb5938TvJU834bfAe+i34M/
AB+iP4I/Bp+gP4U/A5+jv4C/BF+hL8Ffg2/Ql+Er4Fv0d/D34Af0j/BP4Cr6
5D7AqnkfNfg65uve6xkerAbOb8A3Md/0Xi/wYLVwfgu+jfm29+rAg9XF+V34
HuZ73usVHqw+zu/DDzA/8F5v8GANvU9D9OCMXiP3CRwj7zO8CswX3gd8BmuM
94/dBzij1wT3g2PifYbXFPNT7wM+gzXD+2fuA5zRa477wTH3PsNrgfmF9wGf
wVri/ct//w0aMo0p
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, Automatic},
  PlotLabel->FormBox[
    InterpretationBox[
    "\"Velocity Verlet, \[CapitalDelta]t=\\!\\(TraditionalForm\\`1.`\\)\"", 
     StringForm["Velocity Verlet, \[CapitalDelta]t=``", 1.], Editable -> 
     False], TraditionalForm],
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{
  3.442569721481*^9, 3.442650813924*^9, 3.442671671856*^9, 3.44267172204*^9, {
   3.442671861968*^9, 3.4426718827139997`*^9}, 3.442727288446*^9, {
   3.44272733198*^9, 3.442727340601*^9}, 3.442727443244*^9, 3.442727476321*^9,
    3.442727538644*^9, 3.442730561638*^9, 3.442730607291*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"V", "[", 
  RowBox[{".1", ",", "100."}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"lfV", "[", 
  RowBox[{".1", ",", "100."}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"vV", "[", 
  RowBox[{".1", ",", "100."}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Nu4qW3Klwn8EiciFIVcdmJhz6siJy39G8XBW/+DTI3Q0y9J3GdRgYPfWRVf+
zlFxaNristsmFrpH5Uon+lDwu+vfD3PDbCxLrX25LGQYS3u3Zuw4ykWT7irl
xV29aO7rSVy8ycMlrha1w/3tGHyotS/KnMB7+za7on0DngvxepjZTqDCv5YV
5+9+Q62bV8QS/vd8Tkrp4FHfUOySOGBH5vDz3VQxRkrIg2jxnmWlvgT27HQ5
LfGoBk7lBitNIQ//3hOb95tqBfl5mz/3s7nIW8Zz+cXvVUtpvy9On+KgJywf
H20fhO+3O//S8ll4Q3nSrDSVDJsPVI5daWHgpvO2jpZ7qfCt4W+mZyoNXUxn
Kpd+oMFnvYmt7oeouMFx+v1oJQOOstUmbuaT8ep9pWMnU1kQ8dFkiSVrEDuc
XSKfmHNA5uA/qhy/R8b/6BzZl8iFYkvlLzrL2jBaSWvD6lwe+O2dN1VNrEHN
T0XPra4TsCfWeW0eLQ9Dh6JDxSj8uRah7kj/+gIqeEoVSvy81wy25cof/gZb
uuw/HefPvemTmZXKhxqAFfrDeYMxAXrKCheudLSDcpRpJNWDB+Z+TStFW3th
5+LnSeVmXPArV0oMCBqG86/lvOP72NBu3+4R70OBXtZgm74yC54MdEvrCYyC
dcgiWbIaA1YfXJQofJQOtrazf1J/jUK9dbfURie+12/xumPkPwLr8wuUD+xg
g/uEWtgIhQQmT+/MFVRxoIPRIvdafQAEXaJUny3iQS6radTwcBec2rEs02ue
BzduKMv3a7XAdTh2a0ESAUeF3eaF+yrhjHFsQDC/x0j0U7REfdNB5lqYhozg
GBhKrLP6m5uIm6jzS0dyCdi0MiTlxuUK/FzT++SSNAE9Lk81/KeaUO3leq8z
m3igMLapTjGmE4coAXvXcDkgtDU26fOTfhz89Weq3oUNXbtH6iivSOjnaWd2
PJoJqUfotPu7RrD40Hnnw6F0uPIt6+pw5iheWq3v/OvAKCg1r9Mo4dIx91l5
5cZqCnzJal10ksfEjBc3nEylSaD6VrQ0NJ2NP/Vzrtz26YP9a0T+EUpcXGK8
RjvSvwMaPnlW5h/lYXKxV9LZ3B+wuNhRgbKVn2eUWS0pXQZbTMJRj885B0tV
8fobUbAqYTjnwCyBUc9dSjOFcjD4Zs46TyaB625MfPqlX43xx1KqGY8JvOmW
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
G533ue3wZYMQ1ndlXiHB/wFUoe/v
     "]]}, 
   {RGBColor[1, 0, 0], CircleBox[{0., 0.}]}},
  AspectRatio->Automatic,
  Axes->True,
  PlotLabel->FormBox[
    InterpretationBox[
    "\"Simple Verlet, \[CapitalDelta]t=\\!\\(TraditionalForm\\`0.1`\\)\"", 
     StringForm["Simple Verlet, \[CapitalDelta]t=``", 0.1], Editable -> 
     False], TraditionalForm],
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Print",
 CellChangeTimes->{3.442730618666*^9}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
VlH+zBeD1VMtlD873nxEUZ/qORNsiErt0oDqOTNrb/Oyy3Kq56xwRUCeYR9/
f7gI61PdLYb3vej5Yc2WiCal/H0E3MLxbMEvmu9yOPFptbsNqX9E2LK207zP
NN9VcOWl/ov783oZ3rXwtu1N6n8NXF4Uf6UWr99gN91m62ueP/w0Yl30DJ4/
HH3HUR3N84eDoibGuPH8YdPbb22X8PzZ/SzeqZ1B48vM7j+wyfLqPH9YH/Wi
01H+/jgc63Xe9LgyGr9SWLqqZIqVxrcMNrWfnH6fj384Q5u2YAfNDxFOnJy/
RviDnh+WX/l6ZATVc2pYqDsi4RDVc5pwtr6fqXCxpedn7c0tmmrff+epZz5R
K6VrNuXPfKlo9GYT5Q/rxqVeuP2L8oeN73qVNad6zsSun1ty9Udben5Y8+iI
8mVXen5YcXFziIXuV4jAeGixreUWqueksLrHqCn+tL7J4IIB8oC5fP2Df/xd
sXYmrY8iLDVWndCG1k8VXN1x6mc3/nkZnt0/32895aGBjxk6FG/j+cM5B8cK
AylPPezpcK0ylucPOyW3cv2b5w+7Pcq0yefvY+HCR859XtD5TXB28gGvXXR9
M6wIeaeoS+PRCmsbTu+5mH9/FIn172DTlPW0f0lhw+qDt6JovMsi2fjWT5jG
9z9YLrGzqeTv52CrzjYij/ZPFSxOTqneuD09P6wreuyXT/Wchjl3rKR2TXp+
WFic2mjtU8qf2Tyojtcmyp85JNF1cxnlDxsnLOjbmeo5Izuf76Hh51rT88Mm
b/ub+R3p+WFl3OrxAtUfVjjDRblgFv/+MAqfR8s2vT5G65kU1u1YIcml9U4G
Kyc9VhTQfJfDMzuta3uYv5+DVQ0XDN9A/auCA6u+aNyAf16HvV3yB7hTXhq4
fGqL4jr8/TpsPFJrrZbnD/uW+VWL4vnDNgej6zbl+cN9D+9PVfH8Ydms9Lud
eP6wtdW2fqfofsxR7P3EoZSfdL9WOPljcpcu/P3DYozfmPdVnWm+S+HnUZfG
1aH5LoONTfzcm/Sh54cl6dO9tvH3c7CsS1dDCdVzKlie8u3JMf6+FDZsWl08
mOo5DazTTTrtUU7fr8CCJnpGtf2UP/PGFltrlFD+7PrPG4c1onoug50vq6VP
ANVzRvb3b6b1bE31nAlWx3f2c6fxaGa2u6gNpPFqZfcrkTo34t+3LsF+m+Kz
04nGu3QJ+z65rK47zQcZfP7Hn8c78c8/cOKCKT63+Ps5OOfl06eLab6pYJk1
4nIuzx++sdJRe5nnD68PeeYSwPNnrvNPEa/n9PDMuPRTw3n+sLrnTskh/vkP
fnvlrvtBOr8R1r8Zv3Y0Xd+0hK1v5qBZdH9meMet8FFGWq+ssCE2K+46rWeC
ThRy4ztEHqX1TgJLkgt/DqB6TgobpYmNV1I958Da679wW8o/H8OqO4X+Fqrn
XGDz7viOS6iek8OiU2DbdKrnFLAwc9nIr1TPiczyFdmeZ39byZx7Y6/162+r
2PEPwoofN/x9vD+7n+6Lx+ZRPadmrvyY5071XAgsHd60/ySq5zSwv+nr+jIa
v1rYtd/oB1H8+1a4otm7s1to/MfBpjeD9TtofuhhdS+t9yTaLxPhqqER6U9p
fhngp49u2qoojzR415BLQ2bwvOA/jsYLHSjPTDgr1i9lKd+/4bixyUfnknPg
RndDr/zH93N44quTB1qRC+Acy8zWpXx9h0vmh0RNofuxwMovcu1gPt/hbKHd
vhBavyrgyMB2QgD//mGpKPj5x1fvT+ufBDa2P1hjE9Vz0qUsr95v3Kmec4B1
Dzrrl1M9J2N+EWe3l+o5F2Yba4M+dSh/dvwQv2dFVM8pmIXnRyLUlD9zu+hu
R19R/syn/pxxXELzCRZr37yf25zyh61H3Yv9qZ5Tw6Yz7hcSqJ4LgdXZy4S7
VM9p2PPsGxxWSPNdC1fMvP7dSvNdB8cluvhWo/6Jg2VD45+8ovmuhw+vHj3f
nfo3EY5cX7X6Vep/A6zouvp5NconDfYvkEy18PzZ8xSHTJ/O82fH+yRd5PWc
EXbyTA76g+cP+75vOXEZzx82T1r2bQ6NrwLWv7nHmtnw/Fl+k0faZdH4tMAO
LTqn/KLxa4VzH+e4/KLxXQFrXY5EvqDxLyyDpwytdYbqOcky9j4vq7QZ1UdS
2Nqt7HEk1XMOrP1GStBdqudksOHfZcVqqudcYN3RLIdVVM/JYaG8rceyK5Q/
s5jlsOJfyp/ZdohMpHpOyc4v+3bpiR3lz86fMfvzParn/Fn7Ms2Q01TPqeHE
eY0v5dH9hsDSitnqcKrnNLDRo+uaIbS+aeHcR7ZJE/nvTeDkmD6rg2h9jIOf
Z1822NH6qYcn19y2qCv1dyLcOzyofDV/PwdnVvknewvPH243aNtIT75fw9P7
frrK67lMOGvzvDkTef5wuDDi/H06PgdOWaEVS/l+Ds9uezxsL12/AN5of3ls
I76/s3wSRr9aRePVAiunTlQk0f5lhYeVRhxMoPFeAasi65Yt5PvfcvS/LGd6
U5ovEljpVFLlJX8fAhs3jpvWl+o5B9j85cNiu2aUP6w79qUyiOo5F3a+6+ez
uj6j/JnFEzv3r6P8mf+7u7gD1XMiLIYkfrle7/fxSna+v4e5hlE9p4I1Yx4+
SaN6zh82NH5T9JJ/vmTHj5LN9qF6LgRWTSntlkzrmQaucE3qdoHWOy1sSfB9
dJ3/vgJ2eNn0joHWyzjY1ebG7NXUv3rYM8LDw4bySITXpB/d8yd/PwOPWLYu
sTblmQZXV/bNWsjzh5ulJR3m9Vwm3CWnYefmPH9Y/vZ8ez+eP/v798vXynn+
cN0dxTXP0/0UsL+vrLxnQ/PdzJ73ka22D813C7v/yIT8HjTfrXD2z26tm9F8
r4ATRZ/Q7rQfCtGofxv2sztB9ZwEFk+F+dZxpfxhw3vf5/epnnOAhfcX94RT
PSeDdSX1Vh2nes6FtVu/ev9Kp/yZn/6aV1pE+TPXKXlprPb7eJFd722uc3Oq
55Sw5lKH9C/OlD87/6S8tm1pPPqz++nv5teP6jk1PPmN795qNJ5DYMu8ocbG
NN417HqdQme60nzQwhunpj9vSfNFB0ffNz25SPM9Dl5jtN+2iL+Ph13f7d+d
w/OHrfYb9hp5/vDV8CXGv3j+8J68V+95PZcBSxeneo7k+cMFht2VR3j9Du+y
2RWVQefPgVtEhpYF8noOdrlx6PMiur8CWHZF1ecWrVdmOHnnyp4FtJ5ZWH8F
Vf/LSOudFZZXVZjVVM9VwBXOG3/u5b+fi0E9oUhvsJXqOQls7L+/rpT6XwrL
/LZOOkf1nAMs9LGdXkH1nIw5cvmSD/cpf2aJ3e0emZQ/rCu7XHse1XMK1h4W
3+AA1XMi872d89OonlMy+8uC6lM9p4KlTwZ2HkL1nD9rf76p8z0av2o44cyz
unNofIfA/oP+/RBH41/DnufFlrFraH5o4cTVvh5j+O+T4HE9Rn8vovkVB996
0il0KH8fC+due1oaTHklwur+z6q25/U5PMbZvTWv59Lg0J+RKfN4/vDg5eGu
P+j4THiXPmiGI88f9vs5yfY95Z0Dl8xrMm8G3Y8JLg8ZWTqK1qcCZusZu4X8
+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

    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, Automatic},
  PlotLabel->FormBox[
    InterpretationBox[
    "\"Simple Verlet, \[CapitalDelta]t=\\!\\(TraditionalForm\\`0.1`\\)\"", 
     StringForm["Simple Verlet, \[CapitalDelta]t=``", 0.1], Editable -> 
     False], TraditionalForm],
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.442569721682*^9, 3.442730618771*^9}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
XTYVEfA4be3k5/+qUIPnX/1vNQFU//iXEe9aMODkezMNXR4U7juaH3C1G180
e39aPMmBEGl3gXb7QUzcdf5p/TU2jIblVy8OJKFbgMIJozQmKDmSr/9UH8PL
0fEW82/oEOz/WbztzTiGXIjhmZ4Yh7Tu4sBjI3T032wSy+2jgILGmQdlJCaO
b5B1t9YgQb1HmSHtHRu9RY3McxMHYK/wN8vjclw0D8ksuZ/TBfVmvg/3WvAw
S+yQSv3SZuh4quWcqsH3zicGj9Z4VYCmuzJtH3/nOF9s1RgnX0Ow1909iXyu
da2OffTUIhcbEwty1rAJ3P9WU/nR8Fd88n3b4vEHBGaZWKir67Sjr3rbyR+d
POz6Gs8I29uLgvpbzaTauSj1c8rHUX4Y6693BpODOOjrt++63XEyPtugq5PP
ZOFHy+JlyhNjyBUx2vJ+MROXUoJlSSdomFNoSnMnaKh3rQ4u32eg6EHX0nvP
qShZfjFJy4eFZ2Ir/CniFNwX/WCdnjIH9cLim9a+G0Gdf5ELN93notr5ZpLM
UB825G8h4t7wMGJrJ9m1rwO/BIctSHAhsDn2YO20eQMqPSpevodC4NL1Mqzm
3cW4PPnOOSWRCdx95EAyHazhRVBVliGJwJ/jst/myMXwvP/TpTgnAg1Evn8+
9aIBeAOnvOJf8PD6OdIuuX8d0NcqOL8/gItEHzPWSbAfekbSG3xXcbC5TepM
evUI/Cn5N1B8iYUyuqZbX6ymQLvHVtuTNxl4bt3Od/+SqWARWPHgmAUNy050
H304R4N9p5OlgDSGl/wHFhvIMiEu7lyRuQkZW8yDjD78YsHWS3eGd04Nod5P
429Lwzhw3/1jUblCLzaGvbZw6eNC3otraivE2rG87/nxk/082FNn9OTV4684
sPrC+mNhBPS0ng2vS/mEnlJH1MI4BDhR0isvjb2FWRdpj0X8Hpi+vbUxtKoC
El+I2yQXE9B2KtEATzfD7Quv2yXUCEg4E+s61tMFp+v3l+cZ80B9lSf9ccMA
vNhmIk9dxoUPhvCgYwcJjD8G70yNZYN1ncjmw0wKbHDR/9ncxYSRAgtFx4vj
INdtQ2lvo4Od7X6HjAw6NBrG/x6OHIfOXy6H7QuZULa3U/OzzBiMX9jjujWA
DXrY2JPtQYL/A6yPEsY=
     "]]}, 
   {RGBColor[1, 0, 0], CircleBox[{0., 0.}]}},
  AspectRatio->Automatic,
  Axes->True,
  PlotLabel->FormBox[
    InterpretationBox[
    "\"Leapfrog Verlet, \[CapitalDelta]t=\\!\\(TraditionalForm\\`0.1`\\)\"", 
     StringForm["Leapfrog Verlet, \[CapitalDelta]t=``", 0.1], Editable -> 
     False], TraditionalForm],
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Print",
 CellChangeTimes->{3.4427306189309998`*^9}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw923lcTfn/B/BjT7ZLUfYrGtmvZUb2Yy37lZiE3LGVZbgIKctFkYTs2cZF
EllCRhOaaxtZ4iI0Cdde1huiseT3+vy8Pt/5Zx7POZ17zvm8Pu/P532XqTd6
qs+44oqi5JZQFPHvH//YuyjOB70ehvr+zf+gKglp75dXkXZQldI7vzv2Gkxr
VGW6f/+ltX1oZ1XJDV13K05Pu6pKYRenL7f607VUxfV+klqiD61VFW24dllh
T9pNVYJSx9V+0JVuoCoesyb8dboD/ZOqWCea6vVvQ3vA88e3GdaEbqwqlj8q
7vXS0k1VRbX8+bd/Jbq5qijNQjRP3qX9sA42PL5XeQfdEvbM+3zSRrfC+St8
8hxL8fzWuN/QPVFVq9NtVEU/YGPMpp/on1XFdLaKLrwl/QuO56XV2O9Jt1WV
dWVapnRSaU9VSbow7+dBPeh2quLnu+fReG+6vaqUj0spPaQf3UFVmm5YPff9
QLqjqvS7Fhq/chDdSVWqLdU4/yvz6Kwq811e3Lks8+qiKnUW+nYbKfNUVeVJ
988RS2kTnNq44XtvebyrqrR5UqxsHM83wbVmlxuxXb5+N1W5VCnPpyevb4LT
/fuHeMn7664qJ/8ctWhDXx6H7YWdQrZ58XgPzJdqw9+Ed+dx2NVmnfm6M4/3
xPG239d5tuVxOGhdqXftdDzeS1V0fwwtmtaAx2HV8VKnK1V53At5nDLXu6Dw
OKw4rL3Q/Cbz9YYTurcPsfywSfjUQM/g/3i8t6oYLnV2WlyF58OaTY3vdXTj
6/dBvmOnnD3XjMdhzwU9Ug//zON9UT9Hi+X16sTjcPL0go77uvF4P7xeeGLV
c714HPbdXbXmBVkf/TG/W13xiRrA4/DQLpX2vJf1NUBVimIG/TuSeZjgVtaV
/WbKvAeqSuP1I7Kby3xhzxlBNRfLfPWqMiLa5egUWoUX1bs37Z3MG75vyOvn
RFvgN+MjmmTL+TZIVbYeqxc9mPejwnFaY9k6rHcT/GSFzqtTb54Pj6j/4fem
st59VMWcOKpUVda7CtvvtUrq2p7nw2rm9dX2Vjwf1oVfzCreiOcPRl4j6j66
U4vnw5Y3r/zdHHm+OJ4WeG79ix95WoQVdfbSUszXF17bfl9W3g+r/+/UpPNl
eT5siA9OXsfXt8Ban7NNszx4/SG43lz35Xd4fyps3jyv0F3eP6y/sCqgNJ/P
Aud43VldWz7/UHjmqozmHB8VjlvrvkQjxw8O+r4vqj/H1wJ/jVjf8JYc/19V
Jf5z6pxKzEeF0woWfnwr84Mbj8lL+J35WuBHTUqv+F/+fsh7X6ezOpk/HB3f
clOIPB9+l1w8aDTnlwUu3NG1939y/g1Dfdes3Xcj56cKmxPudLvF+WuCY+t4
59zg/LbAIZELyv0l578/5vfe4MAxrA8VNmSW/XSZ9WOCdR3+2PGO9WWBLW3n
9h0t62845segUKdU1qcKK2ETlULWr0m4wZtd+04zf2HvvPd9bzD/EVgfjCmB
c7k+qMJbLc1Xc/0wwTE/B17uw/XFAju8d+zrJtefkVi/d1W/UZvrkwoXuvsn
WLl+mYSfG6vO4vpmgUMcMs6tlOtfgKrYBq6OiuT6qML721y91J7rp0l4seZR
F+ZtgZPLHHDYItffUVgPDvT7bpb5w25Fbj5est7hrKN9AuT6boGNL1euD5D5
G7Cfz4mIvcrztfD+k2/d7/H1VYPYP8vZ1vL6BnhrJf/M7/L+4AaTnM+P5v5k
hr3ntQmbyf3LAjscdncycH+zwcbWNbv3k/vfb3h+l2KjL3B/1MIe37RrtnL/
VGFj/eaxZ7i/GsTfN9+c7cv91wRbao/8FsD92QwrkyYlDXnIvIUtM2qFb/th
G2yaETdzhtz/R+P5yrXfVVCR14ftw0fqGrB/UGHTf8EfmrK/MMAxm54uaM3+
wwR7T/uyZTf7EzN8LnO4wSrrHU6vODA5j/VuE39fecPLD6x3ZQz2h2vOKems
dy180P++sl2up3BhyNtUV+ZhgFNLf5vdTdYn3P7w1aEa5mmGL12O1sr+zQI7
btizNYy2waERH044y/zHqsrYFr039Zb5w8a4FQPdZP7ws8Xv4vfxfgywelPX
7rFcn+C49y/XVGa9m+HcM7qRZWS9w8nbM+++5njYYOuE6/fuyX5uHPa/rG8Z
4zmeWljXVrM6guOtwknHevaYxDwMsHK+aLaF/ZxJ+Pbd/4a8/5GnWVhddjR6
F/MXNqx6/RP7ORtsCgibdbwkrz8e6/nNxMW3XXl92ObwS4KR802FLfkjsidx
Phpg173OOTGcrybYfGRJixacz2bxelve/dqN890ChydU8fZjPdjg3MyePbxk
PxeI/X7olTrPWU9a2E3nMmEZ602F34w9/C1T5g93XjiwykWZP6zGXc0bLvOH
93l6J/yv3uE/o16s7CPzh2edv1Jhj+wPgjA/Ojkk7uLra+H4UVUtfeT14eQX
jbS+vD8DnFsYOitO9nNwilK58X6uZ2ZYqZ1xYa1c72DX/I3ejl14fTgmvMtv
g7leKhPQj5wtFT+I66kWVi5sHbSJ660Kq38s3limGq8v/G/h/CrFeH3x9w7l
31fLZP7CmnEuO9KY//8f9z2RX8j8YdvUyaP6cb9QJmJ+lfaLceF+ooWVl4eV
jdxvVFh/LX7pRu5HBtiw/aSxseznYM9746Zu4X5mhoM/P+p/TM7/iWL/qmBP
YX3YYOcHHYbM436pTFKVidOHF3vD+tLCk2v91muYrD+4qXuNL9OYlwG2/+b9
qqlc3+GiqZPiFsn84Vp18o9PlfnDU+42yP3A823wk8FzarrI/Cfj/UaxsCYP
mLcWLv1+YtQwuf7A57q2j2zCejfArieGpfXl+mWC919O7d2B65sZfhVedKC+
XP9g24TEqSPZD9lgTaRLXNnWvP7vOL7j9M5m7Oe0sGF1+tCatXl9WPHes2sB
+zmD8M61C4e85P4urBjHeXoyf+FeU1vXYT9ngU2X1N0T2M/ZYMvelxmD2M8p
U3B80vk/DrCf08Ip5roxabKfg/Uem70def8GOGbJhr8+sd5NsKXE5GMV5fPD
trLzB2llvwtHJ/1WVJzjZ4MjP5Zd4iX7p6moz+8H6lrl+MMJbvYd5eR+DvfZ
7TzrtcwfdmseuGmyzB8OCejxn+znzPDBHS/iW8n84SmvlYdhMn/x+g2mvxsv
+wejqnSMf/u8iPejgT0yGnaO4/zUwvp/+wY+5vzVwXbHwzsecn6rcL/hX7Mv
cP7rYcvq0q8WsD4MsKlCXqdnrB+jOH9Moy3a5rx/2Ni93d2lrL8Yo9jfixvy
WZ9mWGk2ymne5x95JgkbK6c/P8N8hU9GhEy5/sNWcX1t4KBW7OdssLnfkolD
2c/ZYWuNxyn1ub4o09Af9XQ77Mj1RwN7WLe6luD6pIVzc7rZjrKf08HOw6p1
CuT6psIxT85XMnH908M6F5dVoVwfDXD5OkddmnP9NMLr1q/8vb18vwyPbf02
aQPziIG3phy0b2NeZnjNg/uJPZlnEtxvW7uW/1vfYb+W8x6Poq3i9dpofa/L
vGHj436tH/L17XByzwtVN8n3D9NV5XNcJafSMn84smDQAiP3Jy3sPfdI5XDu
Xzo4Z/kj+xTubyqs39DJ6s960Ivzn185/Ij7owHW3g5VjnH/NMKGUk/TXnJ/
NcFokmasYz8XI/x1ypGjsp8Tfn2+Qj77uSRh85Ll7Tcxf9h0bEujkuznrMKJ
p9xWs5+zweYlPbIV9g92cf5dn+uK/LxoBuohs31edfYfGtjuuiFiGfsTLazZ
mxZ3muuZDo5pdO5+NutdhT9odq19xnrXw/1mdTSekOslnNPypscmjq8RLh8+
64WTfL8Oq5262zozrxh4fsSSWhVlPcPtfWf7z5H5w8Z6+33myvxhZ9u1Z9Vk
/vDK63fc+sv84Sq3Djg1lPnD6UEFwUly/QnGeMSOn27n/Wrg5GtdHtVlvWvh
zJIhumqsdx2cctG85at8vw7bohqU/czx0sPqJH2EieNpgM02f8cjHG+jcMHb
YquYhwk2jH4zzknD54dNR9a2vCj7OXF/pvsrWsUzf2HnYZUbPmD+woNK7B7L
fs4q7qdH+vmN7OdssP583QdenG922N67/OrB8vO5mVgPtmviZ3K+auA2N+vv
1XI+a+G5H5eHtuZ814m/rzc/sTfrQZ0p6u3svHasFz2cfFlzIlv2S/DnHY8b
hrPejPDJ0MxHVpk/3LHxca9/ZP6woWzRcn+ZP1zR1Oa8rPck2LXXZPd+Mn84
80RihX083wpXc9lRsIevbxP3u3lNIz2vb4fNXUeeMcjP52bh/s/fHX+E65UG
9pvUOTuV65kWVlr+vWMn1zsdrOlo1jZkP6fCMXOv/DKF66UeTqr8ffwErqcG
WFvZ/byF660RVttd7dCd/ZxJuNOmBQHs52LE9UKyZ5a8xfyF9YktA08yf+Ez
J5YZ2c9ZxOu/rVtYlfuFFbZUdB33rh6fX/x9hmnYBPZzdthq6jxqnvx8bjbW
e//kogrcrzTwk6isndHcz7RwdNeP4fFy/sNZd86f3sf6UGFX+3QfI/dLPdy0
ZSO/XPl+CW5wqvUhX+ZhhG+MvhU3RfbvcKZT8f8aM88YOMZQyeN//Rz8x6qZ
x40yf7jkv78O+yQ/j4OPZAY9rSHzh6v9OaPhE+Ztg93WLo4Yxfuxw5GP5xZv
Jz+PD0H/FliitT/XLw2sn1XfvQ/XNy1s2jXWr5Vc/2Dz4axf5rAfUmHL9LzT
buzn9LChw/ooP/ZzBlj7vF+VUeznjOLvj6RE3ZOfz8HK/mEPXV79yDNGWEm6
fl3P/IVXBRrG5zL/EPF54CHPiuznLOL+Zu9pXon9nBW21nnWfDH7ORsc45dh
3s1+zg7HOm40v2nH55+D9WxDWLU81rsGNtRLzfrOetfCWQ9L3KzM8dHBtVY1
mV7Aelfh2DNd53fl+Ophz9nXnS7Lz0vgmJyo82WYjxG+umCD/YXMH54ftjp8
ksxfvP4NN0O4zB8unDs6oo3MH5746nP9BTJ/2DR/W8gkzi8rfGRYtcUlZf7i
+eY+bXKY89MO265MjMyXny+HYv2Juj/OzvmtgZWGYxNvy/kPu85OmLWV9aET
HpO5UvmFzw/rznw6NID9nF6cX3ZA9AH2cwbYPPqvQg8nPj9sKpFrLPGF/bv4
e3vp+BbnmL/w2JwhG6zMX/x9jz2nrn9n/rDtebv8muznLOL6F+//87U+nx9W
sw55P2vB5xfX/3tDUC7v1w4bam6uvVF+vxCG+m41eJwf1zcNXLK7btg0uf7B
ut8KV03m+qiD1b+Lj6rH9VOFN9cbX9CG462Hi3fN9F0j36/DvcyN7m2W+cMj
9g9Xesj+Hb7tcqFoicwf/nNXnaa/yfzhc9kpjpk8PwmefNe941P5eSzsF7fP
6w9e3wqnB772LM/5aBPPp5n483zOVzvcMbF6/Br5/dJczI/o/Vfncb5r4MKV
MaMmyP0PVks7OxZxf9TBygKnsAz5+RysN8SXrNqQzw+bMx/4ZrKfM4i/PzXc
oWxpPr9wlz1VVj1i/sLazuW81jN/4d6xTTfkM39xff2szs3YzyWJ430P9D9R
l88P67xcLmc25vPDkUtWjFTYf9jE8/zkPet39id22GJf/+KI/H5xHupzy1KH
K1zvNLDf6AeeWax3LWxqvLr+Qa6XOjhHM6v/Wvn+GH5W7GnVSsxDD99umNm9
g3y/Bs8fX+teOeZphPsdKrMqROYP2+y+JebJ/OHYxPDy1WX+8JUDe/foZf5w
0uTEm01k/uL162zu8ifvxwrP3X4g/pt8vwmfzI9r3pz1boc9wt8Ud2e9K/PF
+nJmRDnWuwa2Oft2qNaRzw9r90702szx1Ak3bmG+Lz+fgzU7Pz88wn5OD5tX
rLjXi/2cAVZ+G3O804cfeRqFY0yTSuxl/sI1am0qdZ/5C9+qOrMK+zkzbPmz
9qBh7OeSxPWfT/i5Lvs5C2yIbObbgfPRKlzldIg/56sN9iijca/C+WyHdbsH
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
z+b6lQV7JJ7IDpS/J4Ez3wQeGcj1L1c8f0uXnCT2c3ZxPx2+1R3C9bNQPG92
8NGD8vdzSzCeF/1GPmc/5wBbltdsvYX9nAZWxtZcGvf6R56uwsqFEV0mMX/h
LvX3FD1j/uL8O2U6DWM/p4PNFeb8E8V+zhO2e+Xsbc5+ThXXvzT76Qz2c96w
3+VJQce5P+lh7xHfb11mvfvBQQd31HnEejfA0effX/3Aeg8Sf18U3i+b9W6E
Ry/0HvczxzcENn3qbrfI79/gR/X+K/ou84d3Fv/99lOZP6w+fd1ngswfrpPw
d+0ImT+c/OlgK0+ZP7yhc9CWCJk/HDKrTkgwXz8FPlPxzMFKMn/YejLg0yXO
z3TxPCOXWyqw3q1wZN+gFxVY71lw09hbAz5w/tvE84y0bbvFfi4XTmgRO+Bn
+XkXnDTtW+NE9nOF4nn2tvD5T/5+binmi3PXipvYzznAysUtjs5ff+SpEZ6b
HP3gH+YvbPro+SqD+Qsf/37pUBHzh22jnz7Yw35Ot1R8nrqnxyH2c56wqf72
sZHs51Tx9zk/uR/l/XovFb+ftSaMZD+nh792OXK8Pdc3v6Xi++OQ54M5HgY4
JvvFEj3HK0gcz/6aU0Z+3wqnuzX73IjjHQIHNIpZtUx+/wIPCDPuWce8IuHk
5Vs2qfL9OOzWLG2Z7OdiYcuokANjZP7wlfb3g/6V/b84frmb+lq+XxfP63h/
ewKvnwKvDFsR5ip/zynGv32F9Zs4X9PhjmUi0g9xPlvF/d/0jtrC+Z4FT07Z
G76E9WCDHW5l32zDeskV4/c0Y10R90+7GP+n+a8C2c8Vwuap0/J92c8pkZgP
8VU2HGM/5wArpw5Xvsl+TiOshiw7F838I8Xn7Uu1aXbmL3zv176B7Oc8YG3J
5foW7Od0wqWTqs5jP+cJJ+UYAjO4HqmwQ79mv//Mfs4bjj1pCV3P9UwvXn+X
q/9Brnd+cEq1kmEnuB4a4Mid98LWcr0MglfqbkQvld+3wnPnLDKUYh4hcPDB
e19by8/f4fYOzweUYZ6R8KWomrmzZP5ifF6t9p0v84e7uczyri3zh63HKu36
VeYPZ+e08fpZ5g//k3Xy0mneTwrsmT5YcWW9W2Bz+Yi0Ptyv0uEE9z67u3E/
s8K50c8febDes8Tfd6qQPID7oU2MZ3XLywz2c7livCu41PNkP2cXzn/q8IX9
XKFwf+Oxg+znlGXIVztkf+OCH3k6CCclNv7pEPMXHhG7/cZd5g9b1iz5PJX9
nBY2Tf7Y/Z4L84dtq4LVq+wndHBMROF3R85HT9hvbIhnA/ZzKmxtmev1gv2K
NxzpsfBxac53PZxVseKl2qwHP9g5qUEVDevFACdPGzb5GOs9CK5VEN4/WH7f
Cmv+MMw+J/OHXQc5Xjol84eDv93wGSrzhzufOvhF9nMxsP3XURf1Mn/Yf9rh
t0fk+z94wL5vqcl8/QR4fujNgQZeP0nc/9lTS5bw/lLEeI4aWi+H65UFDv++
0faM61k67PDYq9U1rndW2LP13gvzOD5ZsLrzyJs09nM2MZ6Ve35KYj+XK8Y/
JszWluNvF9dLz372if1coTi/3NbBvYoz/ygcvzG81Os7zF9YDfRr/yfzF96d
d+LDR+YP24qHrgxmP6cVx32iDixmP+cBWw5qHR9y/ulg9cXV+i3Yz3nCuXO2
XU3h/FXh8ieXdzdwfnvDusVx9UM5//Vwv3aW+ibWhx8cdN6hSW/WjwFuPOkv
rzusryD4Y4eh1l7y+1Y4taZnxFjmFQIXXSuvuMvPX2Hz4rNrTDJ/OLSgaP0M
mT+8dU/gyiLZ/8NN/zU0/EnmDwcMH1riPfNOgNtMixozjfeTBHvorg/5jetT
Cjx5z/GFEfL3YeJ5dtxNnsX1LV3cz/GC3wK4/lmjxPep5VKvsJ/Lgo2HGxim
cP20CR8Z/OFf9nO5sOl+7KsmdZi/yGNx2Q+f2c8VirxKeV2Z8oa/f16uiv+p
pWBYMPMXbrjr9AD2cxpYPTjw4PcyP853hQ2dM795s5/Twrry99eVZD/nAcds
XFl9OPs5nfBWQ9YW7k+ecHDgAc9T3L9UWH+0T9ebrHdvOKjM772fsd71sPaS
29ErrHc/eOfl2r4t5Pfr8At9bNYJjn8QfNJidf4q84dX/nqu62OZP1yrab2f
gmT+8P34ecGyn4uEJ+9dWKy9zB+Oa5Z1LVLmDx8cMTU/RH7+C2e16dqlqswf
Tv+n/K07nJ9JcFLz+Xdqst5TxHg6HdtXi/VugT2OXqtXgvWeDpvH+7V/x37O
Kl7/m++pgeyPssT49yi5+l/2czbYdiFzfF32V7nCl25HXWc/Zxd5/t221x/s
5wqFg0us80pn/tHw1/YVRlxh/sJalzQt+zkNrK1Rw3sK+zlX2DJ5a3Ikr6eF
k/x9Nw9jP+cB2z9mrY7l/ergyLMZH1X2c57i9Us8edhE/n4O1mwY17Qnx8Mb
DjnpOK8bx0svXj852ekLx9MPjh/mNruB/H4drrNt0k8RzCMILjrUJWK1/L4V
3jrecL8z8wwR1yvl4SX7ORNc6Nfi2ViZP/xP/SBNjuz/4Y+rFnXIl5//wX67
Pf45wOub4dSA3rF1OB8T4AZvlnXew/maBAe9njM0jfM5BT63qFzQPvn7cPiJ
2VBjPeshPVr8XrVTTz3rxSrOf3yrtQvrKUuM3wb9qtXs52win/Bu+9ezn8sV
+QxclFGe9WoXf/9GV27OE+YvrLQv+WgJ818B939Z2Zf9nANsWpbbsRT7OQ1s
ebQiNY/riav4e98j4wexn9PCkZ5fvx7leuQBJ5ydN6M6+zmdOH6o/vklXM88
4fIXCxZul7+fg5su/+JygOuhN3xl1GPtEq6Xejh28+o9Czm+fnCrqD8XKPL7
dbhBTX8fHfMKgr2b1lFKye/b4Pu528vLfi5EHA90L5D9nAkump8UUFfmD/t5
mqsPl/mL57ec+NxO5g/brrVZfoH3Y4bDXXe7u3N+JsAp5fKLDeN+lQR7pNWd
OYj7WYo4PuXunrbc7yxivNU5nydyP0wX1/O0ZTxnP2eFrSlfyo3jfpolrp9m
HlhX/r4JVqfMq/qY/VyuyOft5xq72M/ZhQ3zS3Y8zPyF/wypezqb+a/E+V/a
JdVlP+cAa1NTE7ezn9PApshRBbvZT7iuFL8nO5H7Tv5eH/Y8tsW9LPs5D1j3
68f+GexXdLBtzefShax3Tzjo7D/uleTv52Df6okdirNevMXrXS+Vn8B+SS/u
p1+zb1NYb35wx5Y7+1hk/nDj5GUvU2X+sCXp/gNfmT9cK9OpRKTMH47tfaOP
j8wfnl7r+t1j8v0f7DfZ/j5Ffv4HR1YL2TdOfv8DT3Z1rLKW92eGPXzDi7/g
epUAG78+XFbA9SwJ1g98VeE+nz8FNleum7yZ42MRrx/4NPdf9nPp4v4qx79M
5/haxd8/6pg5iuOfJfLq0yK5DfOxwcrFyw/WsZ/LFdYstb3NYv7ChcuHD01m
/sIn56WGsJ9TVsEbDf5d2M85wKaCoWVHcX5p4KRL5W4c5fxzXSXu/3yDquzn
tLAaXHvWVs5fD3isw5CwQZzfulWiHwgeOonz3xNOH34hd5r8/Zw4/+QOp44D
/v4/8ywcSA==
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, Automatic},
  PlotLabel->FormBox[
    InterpretationBox[
    "\"Leapfrog Verlet, \[CapitalDelta]t=\\!\\(TraditionalForm\\`0.1`\\)\"", 
     StringForm["Leapfrog Verlet, \[CapitalDelta]t=``", 0.1], Editable -> 
     False], TraditionalForm],
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.442569721682*^9, 3.442730618976*^9}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
p+O6XPizUVfHSHwQ/g9R7z5Z
     "]]}, 
   {RGBColor[1, 0, 0], CircleBox[{0., 0.}]}},
  AspectRatio->Automatic,
  Axes->True,
  PlotLabel->FormBox[
    InterpretationBox[
    "\"Velocity Verlet, \[CapitalDelta]t=\\!\\(TraditionalForm\\`0.1`\\)\"", 
     StringForm["Velocity Verlet, \[CapitalDelta]t=``", 0.1], Editable -> 
     False], TraditionalForm],
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Print",
 CellChangeTimes->{3.442730619027*^9}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxV23lcTP3/PvBjSRNh7CFMaRNlJKTNIVKEkTDWBiFEg6SkDEKyjSVFaOx9
KELchRhrk8RI6C7LUCiKcduyf6/z83r/8bv/uR/Px5k5c+Zc7+VqZlhNDw+c
WZ/juOoGHCf8/+9/xgHc//8fz6liPna0e+P9lyKeU/zzbGyFGT1OjOOxXi8O
WpJb81zUwqeJTxzIFjyna/v58yMXsiXPxV+d3KyrO1nCcwkmp/PrDyRb81yP
zvuWthtCtuG5jDEWVbb+ZDscz2x3rOEIsgPPiRPudPCVkR157kbUJe/bo8k9
eO7Yizs9TcaQnXnOWLF8YSWzlOeKjBM6Tgsi9+K5Ey3MXCOZXXjOeV3TSmvm
3jz36vGMuLns+a48F5yyaWpQILkPz5mMn7v3Lbuevjw3+NuFAbEjyf1w/+K3
m+YNI7vhfM/mvbjoS+7Pcz89AjIPDyK74/6pd08b5EX24Lns/NSarD5kT54T
9bXZrnMie/EcF9ah1Mea7M1z0q0eadtakgfg+J/EuMPfKE8eVnbvYXLlr1WC
C/7Nziqm4wN5ThMna5LM/X2+CjacjrutaUPnG8Rzdc3Sxo+2oeOwvuHHK12l
dNyH51LehU617EfH4fT8JQGF3nR8MM85ntggWuhDx+FDTmMarRtKx4dgvFSG
VMQOp+Nwds06K6dRdNwXeZWZbelHeatgW2tn/60sj6E8F3Gs8GMS5aWCRQPH
OniwPP3wfrjAUcvIKvjKw1MVMnbcn+fswxM3atnz4fdH+5jfZecfxnPlH2NN
1rLXh1OsZri8ZNc3nOcuPmil9Q+g4/Dt6ys3TvWj4wE8Z3Pl5r7hg+k4bH76
5nZ3no6P4LnHM4a8+Z8bHYdl959brelFx0fi/eSnbkyzo+Ow8l2sqW17Oj4K
7+9WboC9CR2HVSlp7X8bKF8Z8lZlFmen/TUP872HHkn7j8aDcPzgYKfWzf8+
XwtL+ixO6C6h84/mOT+Jx75e3f+ah3+uVEzo7UqvB5d2c3i/34OeD18cLx9z
m833QLxeRFmrCprvPLznhcOStzTfVfC7D519L9J818LmG7f5JrP5NYbnskzt
NjSnPHj4fndlbT+WF7xI02x3Q8pTC/cNnjZrPss3iOd2On/uuoDMw/zB/oWN
2HiAF8+4E+NB59PCXZNDAluz/MfynPelF2320vXwcFCSS1wBXa8Kfhzxv8vf
6P1o4T2b7jz9wNa3cbhfq46YltP94GHFrNa/8+h+qeDQmQ2MAXQ/tXDCVql+
Ct1vbjzWhwbHf4ykPHhYcebGuGjKSwVrm79LE3/8m6cW5tRpvb0PUP5y+IlZ
+9k0HnjB3s8u3W9Izxc8WdnwlQW9Piyf9OBEJI03bgLPVfVIehBG45GH+drL
OZvZeIUVSv9WPWg8a+GHxSdvedJ45yZifBiH/hxF84GHA89EiTzZfIGXH1z9
rJTmkxZ2S5lcpGLr+yTkH3H6+y2WP+xwr3dhHssfPjYnY/Molj883aJ/BJvv
3GSeu1pz8oYnyx/uru34LYU9Hz6UnZKcROfXwjtCtn33ZK8/hecshne83p+u
j4dTRszTb2DrFVxjtvlkEq1nWvj6n/6lK2i946bi+h/ZNq6i9ZCHdU3LWvdj
6yWs3jdM4UHrqVbwmdSVUbTecsFYn3/+KSun9ZiHFd3evXrO1muYk+zan3Sf
8hf8c9iVU5cpfwXGx7jKk9a0H0gEvx9eNYn2Cx6uKw3f1pn2EwUs9v31bDft
NypY0jjrxk7ajzSwpf3SOlvar7TwZHFO1U7azwxwYlKmzQm2301DHvu9Xp+g
/VAC20jbj1DSfsnDa+u1+vWS5pcCDk9M14+iPFRwMRfZazblpYFPjCz6JmF5
w606NtIuIRvgHv37WE9n+U/HerAit+oVPV8CR1l6/RaRebi8XazXPcpbAa81
PmobQNejgs+HxFm3pPmugaemeIx3ZfMdXhXYbJgdzXcDHMqbzWrB1r8ZmM95
fXK8qQ9JYMn12f8ZqS/xMB++zlHUjV4f5jTjRK+pb6mE433LW/GN6fWF45+K
mlZSX9MK5lKyom3/2iB4yq7CudWUfwjcqEvfddTnJILrmTaYRufnYV1wF7Mz
1OcUcPzLDiaX6fpUsJ/cP8yUrl8DB4T16P6JzXd4h778kIi9fzh05arIdqzP
zcT6+7Gv01ea7xJ44MDUjjxbT+GxC8w889n9h6WONyfXY/MT9r0o/fyc5S+c
77JTcwXLH37SPOsA63MGOGFJpwIblv8snsu3XHVzPssf9njsWiVn6wnsbjrQ
/QMbf3DJyC5OiTQ+VbB85n6bQhq/GvhTpx/7Cml8a+Go0IeLstn4h40RBv1U
1udmYz7d3d+pkOaPBJZ91kz7QvOLh3X3bQbMYfMPVnUYe6CA5qdK8IyJyd2+
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
nxjb9ArN9yo4ZuHcP/bs+w74wMUCszN0/+vgh9uvvvjA8l+Pfvlv3L1HLH94
kCj4f5NY/nDgl5P2USx/+Mf2Wd16sPyF51+6eG4Zyx/23u5WOZfOL4V9dkxM
NGX5wxcvHsvMY58fwynGiKUNaL77wfs65cc3ovkugzV9uW3vafzLYX2E3S09
9TkFzJVnDnGlfhQKR1WYHz/Bvm+FxYmr7TnqV1FwllXHI+nU51TC81teLPP9
+TfPBMGXErquzqf8BW+ushMXUf6CVUcOB1Gf0wjnkxdWxlKfS4frXmjnbaHX
yxLe36mix5Opz+XAihvHJiXT9WrhhPW21R7U53TC+S3f1Len9U0Pdx5yV+NF
96MU3jnkdBM3ul8G+M438/21dD+r4JJRud6W7PtOeHixbkUM5VEHvxxbvmUt
+/1TIs91adgs34XyFMG7dwb4sj4nhgOHrvQaz/KHhzWVie6w/g9bZ/STVLDP
/+C5Q45UptHrS+HBqZ4eLWg8usGakq4Wm9n3R7D+5WLvozSe/WDxzhbXk9jv
ieCr/zTvt5rmgxyuXFyjcKH5ooDrZuSO+0P7ZyicY2Vzej71OaVwfpvacSHU
56Jgw0fX6GLqc6pE4fdVZ0osKil/mNPsH5q5nvIX/Lz7xDjqcynC9ftGxXWl
PqcRzqcs2FvXmfKHdYMPBI2jPpcFK0pU5tm0HuXAPUxXNmvL/j0ErP6zqmIV
rWc6uGyCpuUuWu/08Di7iIcHaT0shSW7Yl9G03ppgH2DAkTL6P5WwVNb7Jvz
leUPm3pZP7OlvOpgm1uh47+x/DcI32eETp/D8ofl2RnrFrL84c+n60e0YPnD
AW10PwNY/vCWhdfrurP84Vcf2xpz6XqksGZBaUATGp9ucMnYqaKBtF/x8KFn
iwo8aD/zg3s86rvfhua7DJatjzs5jPZDuXB9F/atKmK/R4TFOb2XeNJ+Ggpn
TQ7wrk/7rRLmF9ztdIn6XJTgvXtNJ3ymz99hTiEOnphF+Qv233ypXznlLzx+
pPtcD+pzKbD0hdLzJPU5DWx4369nBvWJdLjqtWPLT9Q3sjYIv7fhfUypz+XA
SnvNrHzqK1r49gdt+n8033VwxqXUpqY0H/Twp9cN+36l+V4q3A/HQVW7qS8Z
4J0Pi2JmUd5V8OMCM8U59nsX+N9zr3JPsvzhqfXCdvqx3z9v5LlRC/s+Zn1O
BJc8uL5+MMsf1nT7XHCU9X94ndHw5Bj7/A++8OH74/H0+g5wxsnPqVF0fVJY
6ja7/z26fjf41teTlU/Z70fgoPiLtQX0/v1g7aJo8yi6PzL4enF8zzzqc3JY
NGNl/9Ps98iwX5pLH2+6/6Ewv+V0rCnloxSu/6fj+WnU56JgrrbCdmop5S/Y
2Kep21nKX3j+85Gi9C+UP2yoq7s7kvpcinC+BtOdZtH40sBZIWt//UPjLx2O
fxi3pzX1uSzh+T1K/FJo/ObA+6QBViNofGvhSM4nOITGv26jMN4ntQml+aGH
zSOtBvWk+VMKf7D1PFrAvt+EG46sLHSjPKrgY5EVoePY793gncHlFu0ozzpY
HL6nO+tz3CYenSXzE+tzIjhqXrHxP9b/4fsBLa50ZPlvEn7vMPdHNfv+Bw6f
bHt/Dl2Pwyah3053G0vrkxRu9F+PKctp/XKDs14GK5Ts93Nw6PJvyRNp/fOD
49+ZLS+gPieDbdoUbFxA66cc1ryJavSM/XsI4fUu+Fa70/obCvPxa0TtzSl/
WLWjoOeVd3/zjII5Pv2KQxTlL/hJSl71S8of1l6YXHHN9O/z1cL1jml4vy31
uRThfLnWgw3s+x9Y2ljN+VCfS4cTBkfmxNL+lCXcz8pKt+O0f+XArctkqy+x
34fDhsCqDndpvuvg06LDy87Q/qiHV3VKMlrR/S2FjzuGfcxkv28Qrvfw/bpa
lj+sPFvn8YDlDx+4fGTVRJY/PL9mXQzrc9xmnhsbHPnJieUPDxh75lUsyx/e
OG2dPJx9/gfXb7KqTVOWPxw4ZZ7qFo1PB+Hxb4+vbsF+LwuXDvnq3obmuxss
cqmc9Jv9fg7e89RtfC31OT+47l1o+kjqRzJYFVTEPaE+JxeO7xziakf9SgEb
FwfaPKc+FwprC92n36M+p4S5yOQ973WUv+BmvQLXFlL+wuMznFNu/qL8heOm
EcmDqc+phfMXXW44h14vBc76k+PlTH1OA/ORvZ4up+tNh80/jQ7oQn0uS3h8
wqe+FrS+5cBhhxa+c2b/HgyOetXYzJHul064f4p+Twx0P/Xwf89D89rS/S6F
9zcf2W4p+30T7PXTc/5qyqsKLhkf2LgX5WncLPz+yKUe63N1cJ7jrUVylv8W
9Imfh47rWf+H1yUeafuaff4HW/JnTQ6z73/gecnrAtux3+vD0qBr51JpvDrA
Ud3+XDnLfi8Ej1P7pRyi8e4GyyYuu76V/X5OePyAZ9dH0HzxE/ykfk07lwH/
B2qbNHQ=
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, Automatic},
  PlotLabel->FormBox[
    InterpretationBox[
    "\"Velocity Verlet, \[CapitalDelta]t=\\!\\(TraditionalForm\\`0.1`\\)\"", 
     StringForm["Velocity Verlet, \[CapitalDelta]t=``", 0.1], Editable -> 
     False], TraditionalForm],
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.442569721682*^9, 3.442730619075*^9}]
}, Open  ]],

Cell["\<\
The crucial point to observe about all three algorithms is that there is no \
general drift of the energy as time progresses -- contrast this with the \
forward Euler method discussed in Lecture 3. The other point is that they \
seem identical when it comes to accuracy. Furthermore, even with a \
ridiculously long timestep they do not produce rubbish. If you want to do \
molecular dynamics (basically, particles interacting with potentials) a \
Verlet algorithm is the simple 'best buy'.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[" ", "Section",
 CellChangeTimes->{3.44273081767*^9}],

Cell[TextData[{
 StyleBox["2.",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" This question is one that requires pencil and paper rather than \
programming. It is concerned with the consistency of finite difference \
schemes.\n  If we try to solve the equation\n  ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "y"}], 
     RowBox[{"\[PartialD]", "t"}]], "=", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], "y"}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["x", "2"]}]]}], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\n  with the simplest scheme we can think of, we might use a \
centred difference scheme for the time derivative and a standard scheme for \
the spatial second derivative. With ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["x",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\[Rule]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["i",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" \[CapitalDelta]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["x",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" and ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\[Rule]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["n",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" \[CapitalDelta]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" this gives\n  ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     RowBox[{"y", "(", 
      RowBox[{"i", ",", 
       RowBox[{"n", "+", "1"}]}], ")"}], "-", 
     RowBox[{"y", "(", 
      RowBox[{"i", ",", 
       RowBox[{"n", "-", "1"}]}], ")"}]}], 
    RowBox[{"2", " ", 
     StyleBox[
      RowBox[{"\[CapitalDelta]", 
       StyleBox["t",
        FontSlant->"Italic"]}]]}]], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["= ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     RowBox[{"y", "(", 
      RowBox[{
       RowBox[{"i", "-", "1"}], ",", "n"}], ")"}], "-", 
     RowBox[{"2", 
      RowBox[{"y", "(", 
       RowBox[{"i", ",", "n"}], ")"}]}], "+", 
     RowBox[{"y", "(", 
      RowBox[{
       RowBox[{"i", "+", "1"}], ",", "n"}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      StyleBox[
       RowBox[{"\[CapitalDelta]", 
        StyleBox["x",
         FontSlant->"Italic"]}]], ")"}], "2"]], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".\n  Unfortunately, this scheme is unstable. Maybe it is possible \
to make it stable by inserting values of ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["y",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" at different times on the right-hand side. A fairly general way \
of doing this is to write\n   ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     RowBox[{"y", "(", 
      RowBox[{"i", ",", 
       RowBox[{"n", "+", "1"}]}], ")"}], "-", 
     RowBox[{"y", "(", 
      RowBox[{"i", ",", 
       RowBox[{"n", "-", "1"}]}], ")"}]}], 
    RowBox[{"2", " ", 
     StyleBox[
      RowBox[{"\[CapitalDelta]", 
       StyleBox["t",
        FontSlant->"Italic"]}]]}]], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["= ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     RowBox[{"y", "(", 
      RowBox[{
       RowBox[{"i", "-", "1"}], ",", "n"}], ")"}], "-", 
     RowBox[{"2", "[", 
      RowBox[{
       RowBox[{"\[Theta]", " ", 
        RowBox[{"y", "(", 
         RowBox[{"i", ",", 
          RowBox[{"n", "+", "1"}]}], ")"}]}], " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Theta]"}], ")"}], " ", 
        RowBox[{"y", "(", 
         RowBox[{"i", ",", 
          RowBox[{"n", "-", "1"}]}], ")"}]}]}], "]"}], "+", 
     RowBox[{"y", "(", 
      RowBox[{
       RowBox[{"i", "+", "1"}], ",", "n"}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      StyleBox[
       RowBox[{"\[CapitalDelta]", 
        StyleBox["x",
         FontSlant->"Italic"]}]], ")"}], "2"]], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".\n   Investigate the consistency of this scheme as \
\[CapitalDelta]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["x",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" tends to zero if:\n   i) \[CapitalDelta]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["r",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" \[CapitalDelta] ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["x",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\n   ii) \[CapitalDelta]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["t",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["r",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     StyleBox[
      RowBox[{"\[CapitalDelta]", 
       StyleBox["x",
        FontSlant->"Italic"]}]], ")"}], "2"], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\n   where ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["r",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" is a positive constant, and \[Theta] may take any value between 0 \
and 1.",
  FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell[TextData[{
 "Making Taylor expansions as usual, using the notation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "t"], TraditionalForm]]],
 " to represent the first derivative with respect to time, and so on,\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "(", 
     RowBox[{
      RowBox[{"i", "+", "1"}], ",", "n"}], ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "(", 
       RowBox[{"i", ",", "n"}], ")"}], "+", 
      RowBox[{"\[CapitalDelta]x", " ", 
       RowBox[{
        SubscriptBox["y", "x"], "(", 
        RowBox[{"i", ",", "n"}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], 
       SuperscriptBox[
        RowBox[{"(", "\[CapitalDelta]x", ")"}], "2"], " ", 
       RowBox[{
        SubscriptBox["y", "xx"], "(", 
        RowBox[{"i", ",", "n"}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "6"], 
       SuperscriptBox[
        RowBox[{"(", "\[CapitalDelta]x", ")"}], "3"], " ", 
       RowBox[{
        SubscriptBox["y", "xxx"], "(", 
        RowBox[{"i", ",", "n"}], ")"}]}], "+"}], "..."}]}], 
   TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "(", 
     RowBox[{
      RowBox[{"i", "-", "1"}], ",", "n"}], ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "(", 
       RowBox[{"i", ",", "n"}], ")"}], "-", 
      RowBox[{"\[CapitalDelta]x", " ", 
       RowBox[{
        SubscriptBox["y", "x"], "(", 
        RowBox[{"i", ",", "n"}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], 
       SuperscriptBox[
        RowBox[{"(", "\[CapitalDelta]x", ")"}], "2"], " ", 
       RowBox[{
        SubscriptBox["y", "xx"], "(", 
        RowBox[{"i", ",", "n"}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", "6"], 
       SuperscriptBox[
        RowBox[{"(", "\[CapitalDelta]x", ")"}], "3"], " ", 
       RowBox[{
        SubscriptBox["y", "xxx"], "(", 
        RowBox[{"i", ",", "n"}], ")"}]}], "+"}], "..."}]}], 
   TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "(", 
     RowBox[{"i", ",", 
      RowBox[{"n", "+", "1"}]}], ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "(", 
       RowBox[{"i", ",", "n"}], ")"}], "+", 
      RowBox[{"\[CapitalDelta]t", " ", 
       RowBox[{
        SubscriptBox["y", "t"], "(", 
        RowBox[{"i", ",", "n"}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], 
       SuperscriptBox[
        RowBox[{"(", "\[CapitalDelta]t", ")"}], "2"], " ", 
       RowBox[{
        SubscriptBox["y", "tt"], "(", 
        RowBox[{"i", ",", "n"}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "6"], 
       SuperscriptBox[
        RowBox[{"(", "\[CapitalDelta]t", ")"}], "3"], " ", 
       RowBox[{
        SubscriptBox["y", "ttt"], "(", 
        RowBox[{"i", ",", "n"}], ")"}]}], "+"}], "..."}]}], 
   TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "(", 
     RowBox[{"i", ",", 
      RowBox[{"n", "-", "1"}]}], ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"y", "(", 
       RowBox[{"i", ",", "n"}], ")"}], "-", 
      RowBox[{"\[CapitalDelta]t", " ", 
       RowBox[{
        SubscriptBox["y", "t"], "(", 
        RowBox[{"i", ",", "n"}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], 
       SuperscriptBox[
        RowBox[{"(", "\[CapitalDelta]t", ")"}], "2"], " ", 
       RowBox[{
        SubscriptBox["y", "tt"], "(", 
        RowBox[{"i", ",", "n"}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", "6"], 
       SuperscriptBox[
        RowBox[{"(", "\[CapitalDelta]t", ")"}], "3"], " ", 
       RowBox[{
        SubscriptBox["y", "ttt"], "(", 
        RowBox[{"i", ",", "n"}], ")"}]}], "+"}], "..."}]}], 
   TraditionalForm]]],
 "\nand substituting these values into the difference scheme gives"
}], "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", "\[CapitalDelta]", " ", "t"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "(", 
          RowBox[{"i", ",", "n"}], ")"}], "+", 
         RowBox[{"\[CapitalDelta]t", " ", 
          RowBox[{
           SubscriptBox["y", "t"], "(", 
           RowBox[{"i", ",", "n"}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], 
          SuperscriptBox[
           RowBox[{"(", "\[CapitalDelta]t", ")"}], "2"], " ", 
          RowBox[{
           SubscriptBox["y", "tt"], "(", 
           RowBox[{"i", ",", "n"}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "6"], 
          SuperscriptBox[
           RowBox[{"(", "\[CapitalDelta]t", ")"}], "3"], " ", 
          RowBox[{
           SubscriptBox["y", "ttt"], "(", 
           RowBox[{"i", ",", "n"}], ")"}]}], "+"}], "..."}], "-", 
       RowBox[{"y", "(", 
        RowBox[{"i", ",", "n"}], ")"}], "+", 
       RowBox[{"\[CapitalDelta]t", " ", 
        RowBox[{
         SubscriptBox["y", "t"], "(", 
         RowBox[{"i", ",", "n"}], ")"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], 
        SuperscriptBox[
         RowBox[{"(", "\[CapitalDelta]t", ")"}], "2"], " ", 
        RowBox[{
         SubscriptBox["y", "tt"], "(", 
         RowBox[{"i", ",", "n"}], ")"}]}], "+", 
       RowBox[{
        FractionBox["1", "6"], 
        SuperscriptBox[
         RowBox[{"(", "\[CapitalDelta]t", ")"}], "3"], " ", 
        RowBox[{
         SubscriptBox["y", "ttt"], "(", 
         RowBox[{"i", ",", "n"}], ")"}]}], "+"}], "..."}], ")"}]}], "=", 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], 
   FormBox[
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]", " ", "x"}], ")"}], "2"]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"y", "(", 
           RowBox[{"i", ",", "n"}], ")"}], "+", 
          RowBox[{"\[CapitalDelta]x", " ", 
           RowBox[{
            SubscriptBox["y", "x"], "(", 
            RowBox[{"i", ",", "n"}], ")"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], 
           SuperscriptBox[
            RowBox[{"(", "\[CapitalDelta]x", ")"}], "2"], " ", 
           RowBox[{
            SubscriptBox["y", "xx"], "(", 
            RowBox[{"i", ",", "n"}], ")"}]}], "+", 
          RowBox[{
           FractionBox["1", "6"], 
           SuperscriptBox[
            RowBox[{"(", "\[CapitalDelta]x", ")"}], "3"], " ", 
           RowBox[{
            SubscriptBox["y", "xxx"], "(", 
            RowBox[{"i", ",", "n"}], ")"}]}], "+"}], "..."}], "-", 
        RowBox[{"2", "[", 
         RowBox[{
          RowBox[{"\[Theta]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"y", "(", 
               RowBox[{"i", ",", "n"}], ")"}], "+", 
              RowBox[{"\[CapitalDelta]t", " ", 
               RowBox[{
                SubscriptBox["y", "t"], "(", 
                RowBox[{"i", ",", "n"}], ")"}]}], "+", 
              RowBox[{
               FractionBox["1", "2"], 
               SuperscriptBox[
                RowBox[{"(", "\[CapitalDelta]t", ")"}], "2"], " ", 
               RowBox[{
                SubscriptBox["y", "tt"], "(", 
                RowBox[{"i", ",", "n"}], ")"}]}], "+", 
              RowBox[{
               FractionBox["1", "6"], 
               SuperscriptBox[
                RowBox[{"(", "\[CapitalDelta]t", ")"}], "3"], " ", 
               RowBox[{
                SubscriptBox["y", "ttt"], "(", 
                RowBox[{"i", ",", "n"}], ")"}]}], "+"}], "..."}], "}"}]}], 
          " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Theta]"}], ")"}], " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"y", "(", 
               RowBox[{"i", ",", "n"}], ")"}], "-", 
              RowBox[{"\[CapitalDelta]t", " ", 
               RowBox[{
                SubscriptBox["y", "t"], "(", 
                RowBox[{"i", ",", "n"}], ")"}]}], "+", 
              RowBox[{
               FractionBox["1", "2"], 
               SuperscriptBox[
                RowBox[{"(", "\[CapitalDelta]t", ")"}], "2"], " ", 
               RowBox[{
                SubscriptBox["y", "tt"], "(", 
                RowBox[{"i", ",", "n"}], ")"}]}], "-", 
              RowBox[{
               FractionBox["1", "6"], 
               SuperscriptBox[
                RowBox[{"(", "\[CapitalDelta]t", ")"}], "3"], " ", 
               RowBox[{
                SubscriptBox["y", "ttt"], "(", 
                RowBox[{"i", ",", "n"}], ")"}]}], "+"}], "..."}], "}"}]}]}], 
         "]"}], "+", 
        RowBox[{"y", "(", 
         RowBox[{"i", ",", "n"}], ")"}], "-", 
        RowBox[{"\[CapitalDelta]x", " ", 
         RowBox[{
          SubscriptBox["y", "x"], "(", 
          RowBox[{"i", ",", "n"}], ")"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], 
         SuperscriptBox[
          RowBox[{"(", "\[CapitalDelta]x", ")"}], "2"], " ", 
         RowBox[{
          SubscriptBox["y", "xx"], "(", 
          RowBox[{"i", ",", "n"}], ")"}]}], "-", 
        RowBox[{
         FractionBox["1", "6"], 
         SuperscriptBox[
          RowBox[{"(", "\[CapitalDelta]x", ")"}], "3"], " ", 
         RowBox[{
          SubscriptBox["y", "xxx"], "(", 
          RowBox[{"i", ",", "n"}], ")"}]}], "+"}], "..."}], ")"}]}],
    TraditionalForm]}], TraditionalForm]], "Text"],

Cell["with a bit of rearrangement,", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", "\[CapitalDelta]t"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "\[CapitalDelta]t", " ", 
        RowBox[{
         SubscriptBox["y", "t"], "(", 
         RowBox[{"i", ",", "n"}], ")"}]}], "+", 
       RowBox[{
        FractionBox["1", "3"], 
        SuperscriptBox[
         RowBox[{"(", "\[CapitalDelta]t", ")"}], "3"], " ", 
        RowBox[{
         SubscriptBox["y", "ttt"], "(", 
         RowBox[{"i", ",", "n"}], ")"}]}], "+"}], "..."}], ")"}]}], "=", 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], 
   FormBox[
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]", " ", "x"}], ")"}], "2"]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", "\[CapitalDelta]x", ")"}], "2"], " ", 
          RowBox[{
           SubscriptBox["y", "xx"], "(", 
           RowBox[{"i", ",", "n"}], ")"}]}], "+", 
         RowBox[{
          FractionBox["2", 
           RowBox[{"4", "!"}]], 
          SuperscriptBox[
           RowBox[{"(", "\[CapitalDelta]x", ")"}], "4"], " ", 
          RowBox[{
           SubscriptBox["y", "xxxx"], "(", 
           RowBox[{"i", ",", "n"}], ")"}]}], "+"}], "..."}], "-", 
       RowBox[{"2", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "\[Theta]"}], "-", "1"}], ")"}], " ", 
          "\[CapitalDelta]t", " ", 
          RowBox[{
           SubscriptBox["y", "t"], "(", 
           RowBox[{"i", ",", "n"}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], 
          SuperscriptBox[
           RowBox[{"(", "\[CapitalDelta]t", ")"}], "2"], " ", 
          RowBox[{
           SubscriptBox["y", "tt"], "(", 
           RowBox[{"i", ",", "n"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "\[Theta]"}], "-", "1"}], ")"}], 
          FractionBox["1", "6"], 
          SuperscriptBox[
           RowBox[{"(", "\[CapitalDelta]t", ")"}], "3"], " ", 
          RowBox[{
           SubscriptBox["y", "ttt"], "(", 
           RowBox[{"i", ",", "n"}], ")"}]}]}], "]"}]}], ")"}]}],
    TraditionalForm]}], TraditionalForm]], "Text"],

Cell["so that, dropping the ...s", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{" ", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["y", "t"], "(", 
      RowBox[{"i", ",", "n"}], ")"}], "+", 
     RowBox[{
      FractionBox["1", "6"], 
      SuperscriptBox[
       RowBox[{"(", "\[CapitalDelta]t", ")"}], "2"], " ", 
      RowBox[{
       SubscriptBox["y", "ttt"], "(", 
       RowBox[{"i", ",", "n"}], ")"}]}]}], "=", 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    FormBox[
     RowBox[{" ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["y", "xx"], "(", 
          RowBox[{"i", ",", "n"}], ")"}], "+", 
         RowBox[{
          FractionBox["2", 
           RowBox[{"4", "!"}]], 
          SuperscriptBox[
           RowBox[{"(", "\[CapitalDelta]x", ")"}], "2"], " ", 
          RowBox[{
           SubscriptBox["y", "xxxx"], "(", 
           RowBox[{"i", ",", "n"}], ")"}]}], "+"}], "..."}], "-", 
       RowBox[{
        FractionBox["2", 
         SuperscriptBox[
          RowBox[{"(", "\[CapitalDelta]x", ")"}], "2"]], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "\[Theta]"}], "-", "1"}], ")"}], " ", 
          "\[CapitalDelta]t", " ", 
          RowBox[{
           SubscriptBox["y", "t"], "(", 
           RowBox[{"i", ",", "n"}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], 
          SuperscriptBox[
           RowBox[{"(", "\[CapitalDelta]t", ")"}], "2"], " ", 
          RowBox[{
           SubscriptBox["y", "tt"], "(", 
           RowBox[{"i", ",", "n"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "\[Theta]"}], "-", "1"}], ")"}], 
          FractionBox["1", "6"], 
          SuperscriptBox[
           RowBox[{"(", "\[CapitalDelta]t", ")"}], "3"], " ", 
          RowBox[{
           SubscriptBox["y", "ttt"], "(", 
           RowBox[{"i", ",", "n"}], ")"}]}]}], "]"}]}]}],
     TraditionalForm]}]}], TraditionalForm]], "Text"],

Cell["or, keeping only the lower orders of small quantities,", "Text"],

Cell[BoxData[
 FormBox[
  RowBox[{" ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["y", "t"], "(", 
        RowBox[{"i", ",", "n"}], ")"}], "-", 
       RowBox[{
        SubscriptBox["y", "xx"], "(", 
        RowBox[{"i", ",", "n"}], ")"}]}], "}"}], "+", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "6"], 
       SuperscriptBox[
        RowBox[{"(", "\[CapitalDelta]t", ")"}], "2"], " ", 
       RowBox[{
        SubscriptBox["y", "ttt"], "(", 
        RowBox[{"i", ",", "n"}], ")"}], 
       StyleBox[" ",
        FontColor->RGBColor[0, 0, 1]], 
       FormBox[
        RowBox[{" ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["2", 
             RowBox[{"4", "!"}]]}], 
           SuperscriptBox[
            RowBox[{"(", "\[CapitalDelta]x", ")"}], "2"], " ", 
           RowBox[{
            SubscriptBox["y", "xxxx"], "(", 
            RowBox[{"i", ",", "n"}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "\[Theta]"}], "-", "1"}], ")"}], "  ", 
           FractionBox[
            RowBox[{"2", "\[CapitalDelta]t"}], 
            SuperscriptBox[
             RowBox[{"(", "\[CapitalDelta]x", ")"}], "2"]], 
           RowBox[{
            SubscriptBox["y", "t"], "(", 
            RowBox[{"i", ",", "n"}], ")"}]}], "+", 
          RowBox[{
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", "\[CapitalDelta]t", ")"}], "2"], 
            SuperscriptBox[
             RowBox[{"(", "\[CapitalDelta]x", ")"}], "2"]], " ", 
           RowBox[{
            SubscriptBox["y", "tt"], "(", 
            RowBox[{"i", ",", "n"}], ")"}]}]}]}],
        TraditionalForm]}], "}"}]}], "=", "0."}]}], TraditionalForm]], "Text"],

Cell[TextData[{
 "Now we can see that as long as the second curly bracket tends to zero, the \
result tends to the differential equation \n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["y", "t"], "(", 
     RowBox[{"i", ",", "n"}], ")"}], "-", 
    RowBox[{
     SubscriptBox["y", "xx"], "(", 
     RowBox[{"i", ",", "n"}], ")"}]}], TraditionalForm]]],
 "=0."
}], "Text"],

Cell[TextData[{
 "Now consider the special cases:\n      i) ",
 "\[CapitalDelta] ",
 StyleBox["t",
  FontSlant->"Italic"],
 " = ",
 StyleBox["r",
  FontSlant->"Italic"],
 " \[CapitalDelta] ",
 StyleBox["x",
  FontSlant->"Italic"],
 ":\n      as \[CapitalDelta]x tends to zero the second bracket becomes\n     \
 ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    FormBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "\[Theta]"}], "-", "1"}], ")"}], "  ", 
       FractionBox[
        RowBox[{"2", "r"}], "\[CapitalDelta]x"], 
       RowBox[{
        SubscriptBox["y", "t"], "(", 
        RowBox[{"i", ",", "n"}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{
        SubscriptBox["y", "tt"], "(", 
        RowBox[{"i", ",", "n"}], ")"}]}]}],
     TraditionalForm], "}"}], TraditionalForm]]],
 ".\n      Now we are in trouble: if \[Theta]\[NotEqual]",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]]],
 ", the first term tends to infinity as \[CapitalDelta]x tends to zero.  In \
this case, the finite difference system is unstable for any value of ",
 StyleBox["r",
  FontSlant->"Italic"],
 ".\n      If, on the other hand, \[Theta]=",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]]],
 ", we have an extra term which does not go to zero and the differential \
equation we solve with the difference scheme is actually\n       ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["y", "t"], "-", 
     SubscriptBox["y", "xx"], "+", 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      SubscriptBox["y", "tt"]}]}], "=", "0"}], TraditionalForm]]],
 ".\n       ii) ",
 "\[CapitalDelta]",
 StyleBox["t",
  FontSlant->"Italic"],
 " = ",
 StyleBox["r",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     StyleBox[
      RowBox[{"\[CapitalDelta]", 
       StyleBox["x",
        FontSlant->"Italic"]}]], ")"}], "2"], TraditionalForm]]],
 "\n       Now the second bracket becomes\n        ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    FormBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "\[Theta]"}], "-", "1"}], ")"}], "  ", "r", " ", 
      RowBox[{
       SubscriptBox["y", "t"], "(", 
       RowBox[{"i", ",", "n"}], ")"}]}],
     TraditionalForm]}], TraditionalForm]]],
 "\n        which avoids the instability of method i), but tells us that the \
differential equation we are solving is\n        ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "\[Theta]"}], "-", "1"}], ")"}]}], ")"}], 
      SubscriptBox["y", "t"]}], "-", 
     SubscriptBox["y", "xx"]}], "=", "0"}], TraditionalForm]]],
 ",\n        which is only equal to the equation we want if we choose \
\[Theta]=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], "."}], TraditionalForm]]],
 "\n        This exercise illustrates the fact that the issue of consistency \
is non-trivial, and that arbitrary selection of a difference scheme may lead \
to a procedure that is well-behaved, but which does not solve the intended \
differential equation."
}], "Text"],

Cell[TextData[StyleBox["A.H. Harker\nPhysics and Astronomy, UCL\nJanuary \
2008, revised January 2009.",
 FontColor->RGBColor[0, 1, 0]]], "Text",
 CellChangeTimes->{{3.442569708946*^9, 3.442569716543*^9}}]
}, Open  ]]
},
WindowSize->{940, 677},
WindowMargins->{{0, Automatic}, {Automatic, 2}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
ShowSelection->True,
Magnification->1.5,
FrontEndVersion->"6.0 for Microsoft Windows (32-bit) (May 21, 2008)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Title"], 
      Cell[
      "Modify the definitions below to change the default appearance of all \
cells in a given style.  Make modifications to any definition using commands \
in the Format menu.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], PageWidth -> WindowWidth, ScriptMinSize -> 
          9], 
         Cell[
          StyleData[All, "Presentation"], PageWidth -> WindowWidth, 
          ScriptMinSize -> 12, FontSize -> 16], 
         Cell[
          StyleData[All, "SlideShow"], PageWidth -> WindowWidth, 
          ScrollingOptions -> {
           "PagewiseDisplay" -> True, "VerticalScrollRange" -> Fit}, 
          ShowCellBracket -> False, ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Condensed"], PageWidth -> WindowWidth, 
          CellBracketOptions -> {"Margins" -> {1, 1}, "Widths" -> {0, 5}}, 
          ScriptMinSize -> 8, FontSize -> 11], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, ScriptMinSize -> 
          7, FontSize -> 10, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          StyleData["Notebook"], PageHeaders -> {{
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"], None, 
             Cell[
              TextData[{
                ValueBox["FileName"]}], "Header"]}, {
             Cell[
              TextData[{
                ValueBox["FileName"]}], "Header"], None, 
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"]}}, 
          PageHeaderLines -> {True, True}, 
          PrintingOptions -> {
           "FacingPages" -> True, "FirstPageHeader" -> False}, 
          CellFrameLabelMargins -> 6, StyleMenuListing -> None]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], ShowCellBracket -> False, 
             CellMargins -> {{0, 0}, {0, 0}}, PageBreakBelow -> False, 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica", 
               "gridMathematica" -> FormBox[
                 RowBox[{"grid", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               "webMathematica" -> FormBox[
                 RowBox[{"web", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               Inherited}, LineSpacing -> {1, 11}, CounterIncrements -> 
             "Title", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Subtitle", 0}, {"Subsubtitle", 0}}, FontFamily -> 
             "Arial", FontSize -> 34, FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.571389, 0.19675, 0.570504]], 
            Cell[
             StyleData["Title", "Presentation"], 
             CellMargins -> {{0, 0}, {0, 0}}, 
             CellFrameMargins -> {{12, 10}, {24, 24}}, LineSpacing -> {1, 0}, 
             FontSize -> 46], 
            Cell[
             StyleData["Title", "Condensed"], CellMargins -> {{0, 0}, {0, 0}},
              FontSize -> 20], 
            Cell[
             StyleData["Title", "Printout"], CellMargins -> {{0, 0}, {0, 0}}, 
             FontSize -> 24, FontTracking -> "Plain", Background -> 
             GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, 
             CellMargins -> {{0, 0}, {0, 0}}, PageBreakBelow -> False, 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica", 
               "gridMathematica" -> FormBox[
                 RowBox[{"grid", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               "webMathematica" -> FormBox[
                 RowBox[{"web", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               Inherited}, LineSpacing -> {1, 3}, ParagraphIndent -> -96, 
             CounterIncrements -> "Subtitle", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Subsubtitle", 0}}, FontFamily -> "Helvetica", 
             FontSize -> 18, FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.2, 0.700008, 0.700008]], 
            Cell[
             StyleData["Subtitle", "Presentation"], 
             CellMargins -> {{0, 0}, {4, 0}}, 
             CellFrameMargins -> {{12, 10}, {12, 8}}, LineSpacing -> {1, 6}, 
             ParagraphIndent -> -157, FontSize -> 28], 
            Cell[
             StyleData["Subtitle", "Condensed"], 
             CellMargins -> {{0, 0}, {0, 0}}, ParagraphIndent -> -78, 
             FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{0, 0}, {0, 0}}, ParagraphIndent -> -85, 
             FontSize -> 16, Background -> GrayLevel[0.6]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], ShowCellBracket -> False, 
             CellMargins -> {{10, 4}, {30, 10}}, PageBreakBelow -> False, 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica", 
               "gridMathematica" -> FormBox[
                 RowBox[{"grid", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               "webMathematica" -> FormBox[
                 RowBox[{"web", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               Inherited}, CounterIncrements -> "Subsubtitle", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Helvetica", FontSize -> 14, 
             FontSlant -> "Italic"], 
            Cell[
             StyleData["Subsubtitle", "Presentation"], 
             CellMargins -> {{15, 10}, {50, 10}}, LineSpacing -> {1, 0}, 
             FontSize -> 22], 
            Cell[
             StyleData["Subsubtitle", "Condensed"], 
             CellMargins -> {{8, 10}, {12, 8}}, FontSize -> 12], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{9, 10}, {50, 10}}, FontSize -> 14]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellFrame -> {{6, 0}, {0, 1}}, CellDingbat -> 
             None, CellMargins -> {{12, Inherited}, {4, 24}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> 6, 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica", 
               "gridMathematica" -> FormBox[
                 RowBox[{"grid", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               "webMathematica" -> FormBox[
                 RowBox[{"web", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               Inherited}, LineSpacing -> {1, 7}, CounterIncrements -> 
             "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Helvetica", FontSize -> 24, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.571389, 0.19675, 0.570504]], 
            Cell[
             StyleData["Section", "Presentation"], 
             CellFrame -> {{8, 0}, {0, 2}}, 
             CellMargins -> {{15, 10}, {14, 32}}, 
             CellFrameMargins -> {{8, 10}, {10, 14}}, LineSpacing -> {1, 2}, 
             FontSize -> 24, FontTracking -> "Condensed"], 
            Cell[
             StyleData["Section", "Condensed"], 
             CellMargins -> {{8, Inherited}, {2, 12}}, FontSize -> 12], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{9, 0}, {2, 50}}, FontSize -> 14, FontTracking -> 
             "Plain", FontColor -> GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], 
             CellMargins -> {{12, Inherited}, {8, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica", 
               "gridMathematica" -> FormBox[
                 RowBox[{"grid", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               "webMathematica" -> FormBox[
                 RowBox[{"web", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               Inherited}, LineSpacing -> {1, 7}, CounterIncrements -> 
             "Subsection", CounterAssignments -> {{"Subsubsection", 0}}, 
             FontFamily -> "Helvetica", FontSize -> 18, FontWeight -> "Bold"],
             
            Cell[
             StyleData["Subsection", "Presentation"], 
             CellMargins -> {{15, 10}, {12, 32}}, LineSpacing -> {1, 0}, 
             FontSize -> 24], 
            Cell[
             StyleData["Subsection", "Condensed"], 
             CellMargins -> {{8, Inherited}, {2, 12}}, FontSize -> 14], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{9, 0}, {4, 40}}, FontSize -> 14]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[FilledSquare]", 
             CellMargins -> {{25, Inherited}, {8, 12}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica", 
               "gridMathematica" -> FormBox[
                 RowBox[{"grid", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               "webMathematica" -> FormBox[
                 RowBox[{"web", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               Inherited}, LineSpacing -> {1, 9}, CounterIncrements -> 
             "Subsubsection", FontFamily -> "Times", FontSize -> 16, 
             FontWeight -> "Bold"], 
            Cell[
             StyleData["Subsubsection", "Presentation"], 
             CellMargins -> {{34, 10}, {18, 28}}, LineSpacing -> {1, 0}, 
             FontSize -> 36], 
            Cell[
             StyleData["Subsubsection", "Condensed"], 
             CellMargins -> {{22, Inherited}, {2, 12}}, FontSize -> 14], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{21, 0}, {4, 20}}, FontSize -> 14]}, Closed]]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], CellMargins -> {{12, 10}, {5, 5}}, 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica", 
               "gridMathematica" -> FormBox[
                 RowBox[{"grid", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               "webMathematica" -> FormBox[
                 RowBox[{"web", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               Inherited}, LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 12},
              CounterIncrements -> "Text", FontFamily -> "Times"], 
            Cell[
             StyleData["Text", "Presentation"], 
             CellMargins -> {{15, 10}, {8, 10}}, LineSpacing -> {1, 5}, 
             ParagraphSpacing -> {0, 12}, FontSize -> 18], 
            Cell[
             StyleData["Text", "Condensed"], CellMargins -> {{8, 10}, {4, 4}},
              LineSpacing -> {1, 1}, ParagraphSpacing -> {0, 4}], 
            Cell[
             StyleData["Text", "Printout"], CellMargins -> {{9, 0}, {4, 4}}, 
             Hyphenation -> True, ParagraphSpacing -> {0, 6}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], CellMargins -> {{12, 10}, {5, 5}}, 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica", 
               "gridMathematica" -> FormBox[
                 RowBox[{"grid", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               "webMathematica" -> FormBox[
                 RowBox[{"web", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               Inherited}, LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 6}, 
             CounterIncrements -> "SmallText", FontFamily -> "Helvetica", 
             FontSize -> 9], 
            Cell[
             StyleData["SmallText", "Presentation"], 
             CellMargins -> {{15, 10}, {8, 10}}, LineSpacing -> {1, 5}, 
             FontSize -> 14], 
            Cell[
             StyleData["SmallText", "Condensed"], 
             CellMargins -> {{8, 10}, {2, 2}}, LineSpacing -> {1, 2}, 
             FontSize -> 9], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{9, 0}, {4, 4}}, Hyphenation -> True, FontSize -> 
             7]}, Closed]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Inline Formatting", "Section"], 
         Cell[
         "These styles are for modifying individual words or letters in a \
cell exclusive of the cell tag.", "Text"], 
         Cell[
          StyleData["RM"], StyleMenuListing -> None, FontWeight -> "Plain", 
          FontSlant -> "Plain"], 
         Cell[
          StyleData["BF"], StyleMenuListing -> None, FontWeight -> "Bold"], 
         Cell[
          StyleData["IT"], StyleMenuListing -> None, FontSlant -> "Italic"], 
         Cell[
          StyleData["TR"], StyleMenuListing -> None, FontFamily -> "Times", 
          FontWeight -> "Plain", FontSlant -> "Plain"], 
         Cell[
          StyleData["TI"], StyleMenuListing -> None, FontFamily -> "Times", 
          FontWeight -> "Plain", FontSlant -> "Italic"], 
         Cell[
          StyleData["TB"], StyleMenuListing -> None, FontFamily -> "Times", 
          FontWeight -> "Bold", FontSlant -> "Plain"], 
         Cell[
          StyleData["TBI"], StyleMenuListing -> None, FontFamily -> "Times", 
          FontWeight -> "Bold", FontSlant -> "Italic"], 
         Cell[
          StyleData["MR"], "TwoByteSyntaxCharacterAutoReplacement" -> True, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           StyleMenuListing -> None, FontFamily -> "Courier", FontWeight -> 
          "Plain", FontSlant -> "Plain"], 
         Cell[
          StyleData["MO"], "TwoByteSyntaxCharacterAutoReplacement" -> True, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           StyleMenuListing -> None, FontFamily -> "Courier", FontWeight -> 
          "Plain", FontSlant -> "Italic"], 
         Cell[
          StyleData["MB"], "TwoByteSyntaxCharacterAutoReplacement" -> True, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           StyleMenuListing -> None, FontFamily -> "Courier", FontWeight -> 
          "Bold", FontSlant -> "Plain"], 
         Cell[
          StyleData["MBO"], "TwoByteSyntaxCharacterAutoReplacement" -> True, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           StyleMenuListing -> None, FontFamily -> "Courier", FontWeight -> 
          "Bold", FontSlant -> "Italic"], 
         Cell[
          StyleData["SR"], StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontWeight -> "Plain", FontSlant -> "Plain"], 
         Cell[
          StyleData["SO"], StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontWeight -> "Plain", FontSlant -> "Italic"], 
         Cell[
          StyleData["SB"], StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontWeight -> "Bold", FontSlant -> "Plain"], 
         Cell[
          StyleData["SBO"], StyleMenuListing -> None, FontFamily -> 
          "Helvetica", FontWeight -> "Bold", FontSlant -> "Italic"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SO10"], StyleMenuListing -> None, FontFamily -> 
             "Helvetica", FontSize -> 10, FontWeight -> "Plain", FontSlant -> 
             "Italic"], 
            Cell[
             StyleData["SO10", "Printout"], StyleMenuListing -> None, 
             FontFamily -> "Helvetica", FontSize -> 7, FontWeight -> "Plain", 
             FontSlant -> "Italic"]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Inert"], StyleMenuListing -> None, Background -> 
             RGBColor[0.870588, 0.905882, 0.972549]], 
            Cell[
             StyleData["Inert", "Printout"], StyleMenuListing -> None, 
             Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{52, 10}, {8, 8}}, Evaluatable -> True, 
             CellGroupingRules -> "InputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{5, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             "TwoByteSyntaxCharacterAutoReplacement" -> True, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, LanguageCategory -> 
             "Formula", FormatType -> InputForm, ShowStringCharacters -> True,
              NumberMarks -> True, 
             LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, CounterIncrements -> 
             "Input", FontWeight -> "Bold", Background -> 
             RGBColor[1, 0.700008, 0.4]], 
            Cell[
             StyleData["Input", "Presentation"], 
             CellFrame -> {{5, 0}, {0, 0}}, 
             CellMargins -> {{74, 10}, {8, 10}}, 
             CellFrameMargins -> {{10, 10}, {14, 14}}, LineSpacing -> {1, 0}, 
             FontSize -> 18], 
            Cell[
             StyleData["Input", "Condensed"], 
             CellMargins -> {{40, Inherited}, {1, 4}}], 
            Cell[
             StyleData["Input", "Printout"], CellMargins -> {{44, 0}, {2, 6}},
              Background -> GrayLevel[0.900008]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineInput"], Evaluatable -> True, CellGroupingRules -> 
             "InputGrouping", CellHorizontalScrolling -> True, 
             PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             DefaultFormatType -> DefaultInputFormatType, 
             "TwoByteSyntaxCharacterAutoReplacement" -> True, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["InlineInput", "Presentation"], FontSize -> 18], 
            Cell[
             StyleData["InlineInput", "Condensed"]], 
            Cell[
             StyleData["InlineInput", "Printout"], FontSize -> 10]}, Closed]],
          
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{52, 10}, {8, 8}}, CellEditDuplicate -> True, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, 
             CellLabelMargins -> {{3, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             "TwoByteSyntaxCharacterAutoReplacement" -> True, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, LanguageCategory -> 
             "Formula", FormatType -> InputForm, CounterIncrements -> 
             "Output", Background -> RGBColor[1, 0.900008, 0.900008]], 
            Cell[
             StyleData["Output", "Presentation"], 
             CellFrame -> {{5, 0}, {0, 0}}, 
             CellMargins -> {{74, 10}, {12, 5}}, 
             CellFrameMargins -> {{10, 10}, {14, 14}}, LineSpacing -> {1, 0}, 
             FontSize -> 18], 
            Cell[
             StyleData["Output", "Condensed"], 
             CellMargins -> {{40, Inherited}, {4, 1}}], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{44, 0}, {6, 2}}, Background -> 
             GrayLevel[0.900008]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{62, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, 
             "TwoByteSyntaxCharacterAutoReplacement" -> True, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, FormatType -> 
             InputForm, CounterIncrements -> "Message", StyleMenuListing -> 
             None, FontColor -> RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Message", "Presentation"], 
             CellMargins -> {{86, 20}, {10, 10}}, LineSpacing -> {1, 0}, 
             FontSize -> 18], 
            Cell[
             StyleData["Message", "Condensed"], 
             CellMargins -> {{50, Inherited}, {Inherited, Inherited}}], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{54, Inherited}, {Inherited, Inherited}}, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{62, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, DefaultFormatType -> DefaultOutputFormatType, 
             "TwoByteSyntaxCharacterAutoReplacement" -> True, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, FormatType -> 
             InputForm, CounterIncrements -> "Print", StyleMenuListing -> 
             None], 
            Cell[
             StyleData["Print", "Presentation"], 
             CellMargins -> {{86, 20}, {4, 4}}, LineSpacing -> {1, 0}, 
             FontSize -> 18], 
            Cell[
             StyleData["Print", "Condensed"], 
             CellMargins -> {{50, Inherited}, {Inherited, Inherited}}], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{54, Inherited}, {Inherited, Inherited}}]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{62, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, CounterIncrements -> "Graphics", StyleMenuListing -> 
             None], 
            Cell[
             StyleData["Graphics", "Presentation"], 
             CellMargins -> {{86, 20}, {8, 8}}, FontSize -> 18], 
            Cell[
             StyleData["Graphics", "Condensed"], 
             CellMargins -> {{52, Inherited}, {Inherited, Inherited}}, 
             ImageSize -> {175, 175}], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{54, Inherited}, {Inherited, Inherited}}, 
             ImageSize -> {250, 250}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Helvetica", FontSize -> 11, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.571389, 0.19675, 0.570504]], 
            Cell[
             StyleData["CellLabel", "Presentation"], FontSize -> 12], 
            Cell[
             StyleData["CellLabel", "Condensed"], FontSize -> 8], 
            Cell[
             StyleData["CellLabel", "Printout"], FontSize -> 8, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Unique Styles", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Author"], ShowCellBracket -> False, 
             CellMargins -> {{10, 4}, {2, 10}}, LineSpacing -> {1, 5}, 
             FontSize -> 16, FontSlant -> "Italic"], 
            Cell[
             StyleData["Author", "Presentation"], 
             CellMargins -> {{15, 10}, {4, 16}}, LineSpacing -> {1, 5}, 
             ParagraphSpacing -> {0, 12}, FontSize -> 24], 
            Cell[
             StyleData["Author", "Condensed"], 
             CellMargins -> {{8, 10}, {1, 4}}, LineSpacing -> {1, 1}, 
             ParagraphSpacing -> {0, 4}, FontSize -> 12], 
            Cell[
             StyleData["Author", "Printout"], 
             CellMargins -> {{9, 0}, {4, 12}}, ParagraphSpacing -> {0, 6}, 
             FontSize -> 14]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Copyright"], ShowCellBracket -> False, 
             CellMargins -> {{10, 10}, {40, 2}}, FontFamily -> "Helvetica", 
             FontSize -> 9], 
            Cell[
             StyleData["Copyright", "Presentation"], 
             CellMargins -> {{15, 10}, {50, 4}}, LineSpacing -> {1, 5}, 
             FontSize -> 14], 
            Cell[
             StyleData["Copyright", "Condensed"], 
             CellMargins -> {{8, 10}, {12, 1}}, LineSpacing -> {1, 2}, 
             FontSize -> 9], 
            Cell[
             StyleData["Copyright", "Printout"], 
             CellMargins -> {{9, 0}, {72, 4}}, FontSize -> 7]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Example"], CellMargins -> {{12, 10}, {5, 12}}, 
             LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 12}, 
             CounterIncrements -> "Example", FontFamily -> "Times", 
             FontWeight -> "Bold"], 
            Cell[
             StyleData["Example", "Presentation"], 
             CellMargins -> {{18, 10}, {8, 20}}, LineSpacing -> {1, 5}, 
             ParagraphSpacing -> {0, 12}, FontSize -> 18], 
            Cell[
             StyleData["Example", "Condensed"], 
             CellMargins -> {{8, 10}, {4, 8}}, LineSpacing -> {1, 1}, 
             ParagraphSpacing -> {0, 4}], 
            Cell[
             StyleData["Example", "Printout"], 
             CellMargins -> {{9, 0}, {4, 10}}, ParagraphSpacing -> {0, 6}]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Definition"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{52, 10}, {8, 8}}, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             ShowStringCharacters -> True, CounterIncrements -> "Definition", 
             FontFamily -> "Helvetica", FontWeight -> "Bold", FontColor -> 
             GrayLevel[1], Background -> RGBColor[0.2, 0.700008, 0.700008]], 
            Cell[
             StyleData["Definition", "Presentation"], 
             CellFrame -> {{5, 0}, {0, 0}}, 
             CellMargins -> {{74, 10}, {8, 12}}, 
             CellFrameMargins -> {{10, 10}, {14, 14}}, LineSpacing -> {1, 0}, 
             FontSize -> 18], 
            Cell[
             StyleData["Definition", "Condensed"], 
             CellMargins -> {{40, 10}, {1, 4}}], 
            Cell[
             StyleData["Definition", "Printout"], 
             CellMargins -> {{44, 0}, {2, 6}}, Hyphenation -> True, 
             Background -> GrayLevel[0.6]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Theorem"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{52, 10}, {8, 8}}, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             ShowStringCharacters -> True, CounterIncrements -> "Theorem", 
             FontFamily -> "Helvetica", FontWeight -> "Bold", FontColor -> 
             GrayLevel[1], Background -> 
             RGBColor[0.571389, 0.19675, 0.570504]], 
            Cell[
             StyleData["Theorem", "Presentation"], 
             CellFrame -> {{5, 0}, {0, 0}}, 
             CellMargins -> {{74, 10}, {8, 12}}, 
             CellFrameMargins -> {{10, 10}, {14, 14}}, LineSpacing -> {1, 0}, 
             FontSize -> 18], 
            Cell[
             StyleData["Theorem", "Condensed"], 
             CellMargins -> {{40, 10}, {1, 4}}], 
            Cell[
             StyleData["Theorem", "Printout"], 
             CellMargins -> {{44, 0}, {2, 6}}, Hyphenation -> True, 
             Background -> GrayLevel[0.4]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ExerciseMain"], CellFrame -> {{6, 0}, {0, 1}}, 
             CellMargins -> {{12, Inherited}, {4, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameColor -> RGBColor[0.571389, 0.19675, 0.570504], 
             LineSpacing -> {1, 7}, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Helvetica", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.571389, 0.19675, 0.570504]], 
            Cell[
             StyleData["ExerciseMain", "Presentation"], 
             CellFrame -> {{8, 0}, {0, 2}}, 
             CellMargins -> {{18, 10}, {12, 32}}, 
             CellFrameMargins -> {{10, 10}, {14, 14}}, LineSpacing -> {1, 2}, 
             FontSize -> 24, FontTracking -> "Condensed"], 
            Cell[
             StyleData["ExerciseMain", "Condensed"], 
             CellMargins -> {{8, Inherited}, {2, 12}}, FontSize -> 12], 
            Cell[
             StyleData["ExerciseMain", "Printout"], 
             CellMargins -> {{9, 0}, {2, 50}}, CellFrameColor -> 
             GrayLevel[0.500008], FontSize -> 14, FontTracking -> "Plain", 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Exercise"], CellDingbat -> "\[FilledDownTriangle]", 
             CellMargins -> {{23, Inherited}, {4, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, LineSpacing -> {1, 7}, CounterIncrements -> 
             "Subsubsection", FontFamily -> "Times", FontSize -> 13, 
             FontWeight -> "Bold", FontColor -> 
             RGBColor[0.571389, 0.19675, 0.570504]], 
            Cell[
             StyleData["Exercise", "Presentation"], 
             CellMargins -> {{28, 10}, {10, 34}}, LineSpacing -> {1, 0}, 
             FontSize -> 22], 
            Cell[
             StyleData["Exercise", "Condensed"], 
             CellMargins -> {{17, Inherited}, {2, 12}}, FontSize -> 10], 
            Cell[
             StyleData["Exercise", "Printout"], 
             CellFrame -> {{0, 0}, {0.5, 0}}, CellDingbat -> None, 
             CellMargins -> {{9, 0}, {6, 20}}, Hyphenation -> True, FontSize -> 
             11, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ExerciseText"], CellMargins -> {{62, 10}, {5, 5}}, 
             LineSpacing -> {1, 3}, ParagraphSpacing -> {0, 8}, 
             CounterIncrements -> "ExerciseText", FontFamily -> "Times"], 
            Cell[
             StyleData["ExerciseText", "Presentation"], 
             CellMargins -> {{100, 10}, {8, 8}}, LineSpacing -> {1, 5}, 
             ParagraphSpacing -> {0, 12}, FontSize -> 18], 
            Cell[
             StyleData["ExerciseText", "Condensed"], 
             CellMargins -> {{52, 10}, {2, 2}}, LineSpacing -> {1, 1}, 
             ParagraphSpacing -> {0, 4}], 
            Cell[
             StyleData["ExerciseText", "Printout"], 
             CellMargins -> {{54, 0}, {4, 4}}, Hyphenation -> True, 
             ParagraphSpacing -> {0, 6}]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Formulas and Programming", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["DisplayFormula"], CellMargins -> {{62, 10}, {2, 10}}, 
             CellHorizontalScrolling -> True, DefaultFormatType -> 
             DefaultInputFormatType, "TwoByteSyntaxCharacterAutoReplacement" -> 
             True, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, LanguageCategory -> 
             "Formula", ScriptLevel -> 0, SingleLetterItalics -> True, 
             UnderoverscriptBoxOptions -> {LimitsPositioning -> True}], 
            Cell[
             StyleData["DisplayFormula", "Presentation"], 
             CellMargins -> {{100, 10}, {8, 16}}, FontSize -> 18], 
            Cell[
             StyleData["DisplayFormula", "Condensed"], 
             CellMargins -> {{52, 10}, {2, 10}}, FontSize -> 10], 
            Cell[
             StyleData["DisplayFormula", "Printout"], 
             CellMargins -> {{54, 10}, {2, 10}}, FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ChemicalFormula"], CellMargins -> {{62, 10}, {2, 10}},
              DefaultFormatType -> DefaultInputFormatType, 
             "TwoByteSyntaxCharacterAutoReplacement" -> True, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, LanguageCategory -> 
             "Formula", AutoSpacing -> False, 
             ScriptBaselineShifts -> {0.6, Automatic}, ScriptLevel -> 1, 
             SingleLetterItalics -> False, ZeroWidthTimes -> True], 
            Cell[
             StyleData["ChemicalFormula", "Presentation"], 
             CellMargins -> {{100, 10}, {8, 12}}, FontSize -> 18], 
            Cell[
             StyleData["ChemicalFormula", "Condensed"], 
             CellMargins -> {{52, 10}, {2, 10}}, FontSize -> 10], 
            Cell[
             StyleData["ChemicalFormula", "Printout"], 
             CellMargins -> {{54, 10}, {2, 10}}, FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Program"], CellMargins -> {{12, 10}, {Inherited, 6}}, 
             Hyphenation -> False, LanguageCategory -> "Formula", FontFamily -> 
             "Courier"], 
            Cell[
             StyleData["Program", "Presentation"], 
             CellMargins -> {{20, 30}, {4, 4}}, FontSize -> 18], 
            Cell[
             StyleData["Program", "Condensed"], 
             CellMargins -> {{8, 10}, {Inherited, 4}}, FontSize -> 9.5], 
            Cell[
             StyleData["Program", "Printout"], 
             CellMargins -> {{9, 0}, {Inherited, 4}}, FontSize -> 9.5]}, 
           Closed]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Automatic Numbering", "Section"], 
         Cell[
         "The following styles are useful for numbered equations, figures, \
etc.  They automatically give the cell a FrameLabel containing a reference to \
a particular counter, and also increment that counter.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], 
             CellMargins -> {{62, 10}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, 
                Cell[
                 TextData[{"(", 
                   CounterBox["NumberedEquation"], ")"}]]}, {None, None}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             "TwoByteSyntaxCharacterAutoReplacement" -> True, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, CounterIncrements -> 
             "NumberedEquation", FormatTypeAutoConvert -> False], 
            Cell[
             StyleData["NumberedEquation", "Presentation"], 
             CellMargins -> {{100, 10}, {6, 8}}, FontSize -> 18], 
            Cell[
             StyleData["NumberedEquation", "Condensed"], 
             CellMargins -> {{52, 10}, {Inherited, Inherited}}], 
            Cell[
             StyleData["NumberedEquation", "Printout"], 
             CellMargins -> {{54, 0}, {Inherited, Inherited}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedFigure"], 
             CellMargins -> {{62, 145}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Figure ", 
                   CounterBox["NumberedFigure"]}]], None}}, CounterIncrements -> 
             "NumberedFigure", 
             ImageMargins -> {{43, Inherited}, {Inherited, 0}}, 
             FormatTypeAutoConvert -> False], 
            Cell[
             StyleData["NumberedFigure", "Presentation"], 
             CellMargins -> {{100, 145}, {8, 6}}, FontSize -> 18], 
            Cell[
             StyleData["NumberedFigure", "Condensed"]], 
            Cell[
             StyleData["NumberedFigure", "Printout"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedTable"], 
             CellMargins -> {{62, 145}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Table ", 
                   CounterBox["NumberedTable"]}]], None}}, TextAlignment -> 
             Center, CounterIncrements -> "NumberedTable", 
             FormatTypeAutoConvert -> False], 
            Cell[
             StyleData["NumberedTable", "Presentation"], 
             CellMargins -> {{100, 145}, {8, 8}}, FontSize -> 18], 
            Cell[
             StyleData["NumberedTable", "Condensed"]], 
            Cell[
             StyleData["NumberedTable", "Printout"]]}, Closed]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 9, 
          FontSlant -> "Italic"], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 6],
          
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 9, 
          FontWeight -> "Bold"]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontColor -> 
             RGBColor[0.269993, 0.308507, 0.6], 
             ButtonBoxOptions -> {
              Active -> True, ButtonFrame -> "None", 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               ButtonData}], 
            Cell[
             StyleData["Hyperlink", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["Hyperlink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["Hyperlink", "SlideShow"]], 
            Cell[
             StyleData["Hyperlink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
         "The following styles are for linking automatically to the on-line \
help system.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MainBookLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontColor -> 
             RGBColor[0.269993, 0.308507, 0.6], 
             ButtonBoxOptions -> {
              Active -> True, ButtonFrame -> "None", 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["MainBook", #]}]& )}], 
            Cell[
             StyleData["MainBookLink", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["MainBookLink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["MainBookLink", "SlideShow"]], 
            Cell[
             StyleData["MainBookLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["AddOnsLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontColor -> RGBColor[0.269993, 0.308507, 0.6], 
             ButtonBoxOptions -> {
              Active -> True, ButtonFrame -> "None", 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["AddOns", #]}]& )}], 
            Cell[
             StyleData["AddOnsLink", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["AddOnsLink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["AddOnsLink", "SlideShow"]], 
            Cell[
             StyleData["AddOnsLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontColor -> RGBColor[0.269993, 0.308507, 0.6], 
             ButtonBoxOptions -> {
              Active -> True, ButtonFrame -> "None", 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuide", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["RefGuideLink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["RefGuideLink", "SlideShow"]], 
            Cell[
             StyleData["RefGuideLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLinkText"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontColor -> 
             RGBColor[0.269993, 0.308507, 0.6], 
             ButtonBoxOptions -> {
              Active -> True, ButtonFrame -> "None", 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuide", #]}]& )}], 
            Cell[
             StyleData["RefGuideLinkText", "Presentation"], FontSize -> 16], 
            Cell[
             StyleData["RefGuideLinkText", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["RefGuideLinkText", "SlideShow"]], 
            Cell[
             StyleData["RefGuideLinkText", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontColor -> 
             RGBColor[0.269993, 0.308507, 0.6], 
             ButtonBoxOptions -> {
              Active -> True, ButtonFrame -> "None", 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"], FontSize -> 16],
             
            Cell[
             StyleData["GettingStartedLink", "Condensed"], FontSize -> 11], 
            Cell[
             StyleData["GettingStartedLink", "SlideShow"]], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["DemosLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontColor -> 
             RGBColor[0.269993, 0.308507, 0.6], 
             ButtonBoxOptions -> {
              Active -> True, ButtonFrame -> "None", 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["Demos", #]}]& )}], 
            Cell[
             StyleData["DemosLink", "SlideShow"]], 
            Cell[
             StyleData["DemosLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TourLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontColor -> 
             RGBColor[0.269993, 0.308507, 0.6], 
             ButtonBoxOptions -> {
              Active -> True, ButtonFrame -> "None", 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["Tour", #]}]& )}], 
            Cell[
             StyleData["TourLink", "SlideShow"]], 
            Cell[
             StyleData["TourLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontColor -> 
             RGBColor[0.269993, 0.308507, 0.6], 
             ButtonBoxOptions -> {
              Active -> True, ButtonFrame -> "None", 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"], FontSize -> 
             16], 
            Cell[
             StyleData["OtherInformationLink", "Condensed"], FontSize -> 11], 
            
            Cell[
             StyleData["OtherInformationLink", "SlideShow"]], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MasterIndexLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontColor -> 
             RGBColor[0.269993, 0.308507, 0.6], 
             ButtonBoxOptions -> {
              Active -> True, ButtonFrame -> "None", 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["MasterIndex", #]}]& )}], 
            Cell[
             StyleData["MasterIndexLink", "SlideShow"]], 
            Cell[
             StyleData["MasterIndexLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Slide Show Styles", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SlideShowNavigationBar"], Editable -> False, 
             CellFrame -> True, CellMargins -> {{0, 0}, {3, 3}}, 
             CellElementSpacings -> {"CellMinHeight" -> 0.8125}, 
             CellGroupingRules -> {"SectionGrouping", 30}, CellFrameMargins -> 
             False, CellFrameColor -> GrayLevel[1], CellFrameLabelMargins -> 
             False, TextAlignment -> Center, CounterIncrements -> 
             "SlideShowNavigationBar", StyleMenuListing -> None, FontSize -> 
             10, Magnification -> 1, Background -> GrayLevel[0.8], 
             GridBoxOptions -> {
              BaselinePosition -> Center, 
               GridBoxAlignment -> {
                "Columns" -> {
                  Center, Center, Center, Center, Center, Center, Right, {
                   Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
                 "RowsIndexed" -> {}}, 
               GridBoxItemSize -> {
                "Columns" -> {3.5, 3.5, 3.5, 3.5, 13, 5, {4}}, 
                 "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
                 "RowsIndexed" -> {}}, GridBoxSpacings -> {"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.]}, 
                   Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {
                   Offset[0.2], {
                    Offset[0.]}, 
                   Offset[0.2]}, "RowsIndexed" -> {}}}], 
            Cell[
             StyleData["SlideShowNavigationBar", "Presentation"]], 
            Cell[
             StyleData["SlideShowNavigationBar", "SlideShow"], Deletable -> 
             False, ShowCellBracket -> False, 
             CellMargins -> {{-1, -1}, {-1, -1}}, PageBreakAbove -> True, 
             CellFrameMargins -> {{1, 1}, {0, 0}}], 
            Cell[
             StyleData["SlideShowNavigationBar", "Printout"], 
             CellMargins -> {{18, 4}, {4, 4}}, LineSpacing -> {1, 3}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SlideShowSection"], CellFrame -> {{0, 0}, {0, 0.5}}, 
             CellMargins -> {{0, 0}, {10, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CellFrameMargins -> {{12, 4}, {6, 12}}, 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica", 
               "gridMathematica" -> FormBox[
                 RowBox[{"grid", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               "webMathematica" -> FormBox[
                 RowBox[{"web", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               Inherited}, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             StyleMenuListing -> None, FontFamily -> "Helvetica", FontSize -> 
             18, FontWeight -> "Plain", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.408011, 0.440726, 0.8]], 
            Cell[
             StyleData["SlideShowSection", "Presentation"], 
             CellFrameMargins -> {{18, 10}, {10, 16}}, FontSize -> 27], 
            Cell[
             StyleData["SlideShowSection", "SlideShow"], ShowCellBracket -> 
             False, PageBreakAbove -> True], 
            Cell[
             StyleData["SlideShowSection", "Printout"], 
             CellMargins -> {{18, 30}, {0, 30}}, CellFrameMargins -> 5, 
             FontSize -> 14]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SlideHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontSize -> 26, FontColor -> 
             GrayLevel[0.400015], 
             ButtonBoxOptions -> {
              Active -> True, ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonMargins -> 0.5, 
               ButtonMinHeight -> 0.85, ButtonNote -> None}], 
            Cell[
             StyleData["SlideHyperlink", "Presentation"], 
             CellMargins -> {{10, 10}, {8, 12}}, FontSize -> 36], 
            Cell[
             StyleData["SlideHyperlink", "SlideShow"]], 
            Cell[
             StyleData["SlideHyperlink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SlideTOCLink"], 
             CellMargins -> {{24, Inherited}, {Inherited, Inherited}}, 
             StyleMenuListing -> None, ButtonStyleMenuListing -> Automatic, 
             FontFamily -> "Helvetica", 
             ButtonBoxOptions -> {
              Active -> True, ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonMargins -> 1.5, 
               ButtonNote -> ButtonData}], 
            Cell[
             StyleData["SlideTOCLink", "Presentation"], 
             CellMargins -> {{35, 10}, {4, 6}}, FontSize -> 18], 
            Cell[
             StyleData["SlideTOCLink", "SlideShow"]], 
            Cell[
             StyleData["SlideTOCLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SlideTOC"], CellDingbat -> "\[Bullet]", 
             CellMargins -> {{18, Inherited}, {Inherited, Inherited}}, 
             StyleMenuListing -> None, FontFamily -> "Helvetica"], 
            Cell[
             StyleData["SlideTOC", "Presentation"], 
             CellMargins -> {{25, 10}, {8, 6}}, FontSize -> 18], 
            Cell[
             StyleData["SlideTOC", "SlideShow"], FontSize -> 14], 
            Cell[
             StyleData["SlideTOC", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]]}, Open]]}, 
  WindowMargins -> {{208, Automatic}, {Automatic, 70}}, Visible -> False, 
  FrontEndVersion -> "6.0 for Microsoft Windows (32-bit) (May 21, 2008)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[568, 21, 117, 3, 231, "Title"],
Cell[688, 26, 9287, 291, 1028, "Text"],
Cell[CellGroupData[{
Cell[10000, 321, 86, 1, 95, "Section"],
Cell[10089, 324, 283, 5, 60, "Text"],
Cell[10375, 331, 3705, 146, 159, "Text"],
Cell[14083, 479, 394, 12, 96, "Input"],
Cell[14480, 493, 831, 25, 185, "Text"],
Cell[CellGroupData[{
Cell[15336, 522, 166, 4, 91, "Input"],
Cell[15505, 528, 116, 3, 90, "Output"]
}, Open  ]],
Cell[15636, 534, 102, 1, 35, "Text"],
Cell[CellGroupData[{
Cell[15763, 539, 187, 3, 119, "Input"],
Cell[15953, 544, 75, 1, 90, "Output"],
Cell[16031, 547, 123, 3, 90, "Output"]
}, Open  ]],
Cell[16169, 553, 133, 1, 35, "Text"],
Cell[16305, 556, 212, 5, 91, "Input"],
Cell[16520, 563, 410, 9, 61, "Text"],
Cell[CellGroupData[{
Cell[16955, 576, 281, 7, 91, "Input"],
Cell[17239, 585, 1764, 34, 379, "Output"]
}, Open  ]],
Cell[19018, 622, 1336, 40, 225, "Text"],
Cell[CellGroupData[{
Cell[20379, 666, 799, 23, 146, "Input"],
Cell[21181, 691, 2412, 43, 718, "Output"]
}, Open  ]],
Cell[23608, 737, 287, 7, 61, "Text"],
Cell[CellGroupData[{
Cell[23920, 748, 403, 10, 119, "Input"],
Cell[24326, 760, 2360, 43, 591, "Output"]
}, Open  ]],
Cell[26701, 806, 217, 4, 35, "Text"],
Cell[CellGroupData[{
Cell[26943, 814, 865, 26, 210, "Input"],
Cell[27811, 842, 128, 3, 90, "Output"],
Cell[27942, 847, 167, 4, 90, "Output"]
}, Open  ]],
Cell[28124, 854, 316, 5, 60, "Text"],
Cell[CellGroupData[{
Cell[28465, 863, 542, 15, 146, "Input"],
Cell[29010, 880, 2407, 43, 591, "Output"]
}, Open  ]],
Cell[31432, 926, 787, 13, 279, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32256, 944, 91, 1, 95, "Section"],
Cell[32350, 947, 3382, 90, 447, "Input"],
Cell[35735, 1039, 3438, 96, 502, "Input"],
Cell[39176, 1137, 3101, 84, 508, "Input"],
Cell[CellGroupData[{
Cell[42302, 1225, 357, 8, 146, "Input"],
Cell[42662, 1235, 859, 21, 557, "Print"],
Cell[43524, 1258, 1169, 25, 396, "Output"],
Cell[44696, 1285, 869, 21, 557, "Print"],
Cell[45568, 1308, 1175, 25, 393, "Output"],
Cell[46746, 1335, 867, 21, 557, "Print"],
Cell[47616, 1358, 1174, 25, 419, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48827, 1388, 250, 6, 146, "Input"],
Cell[49080, 1396, 21212, 354, 557, "Print"],
Cell[70295, 1752, 12740, 215, 376, "Output"],
Cell[83038, 1969, 21213, 354, 557, "Print"],
Cell[104254, 2325, 12756, 215, 376, "Output"],
Cell[117013, 2542, 21212, 354, 557, "Print"],
Cell[138228, 2898, 12813, 216, 399, "Output"]
}, Open  ]],
Cell[151056, 3117, 514, 8, 109, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151607, 3130, 58, 1, 95, "Section"],
Cell[151668, 3133, 5753, 197, 510, "Text"],
Cell[157424, 3332, 3806, 126, 272, "Text"],
Cell[161233, 3460, 5612, 158, 307, "Text"],
Cell[166848, 3620, 44, 0, 35, "Text"],
Cell[166895, 3622, 2359, 73, 111, "Text"],
Cell[169257, 3697, 42, 0, 35, "Text"],
Cell[169302, 3699, 2017, 63, 111, "Text"],
Cell[171322, 3764, 70, 0, 35, "Text"],
Cell[171395, 3766, 1812, 55, 66, "Text"],
Cell[173210, 3823, 399, 13, 72, "Text"],
Cell[173612, 3838, 3292, 109, 644, "Text"],
Cell[176907, 3949, 205, 3, 108, "Text"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

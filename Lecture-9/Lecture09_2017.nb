(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    757465,      16426]
NotebookOptionsPosition[    707946,      15354]
NotebookOutlinePosition[    749886,      16193]
CellTagsIndexPosition[    749843,      16190]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["9", "Title",
 CellChangeTimes->{{3.4771495955030003`*^9, 3.477149597311*^9}}],

Cell["\<\
PHAS2443: Practical Mathematics II
Lecture 9: Integral transforms and Fourier methods \
\>", "Subtitle",
 CellChangeTimes->{{3.477149601207*^9, 3.4771496025360003`*^9}}],

Cell[CellGroupData[{

Cell["Introduction", "Section"],

Cell[TextData[{
 "As we know, there are many functions that are defined as ",
 StyleBox["expansions",
  FontColor->RGBColor[1, 0, 0]],
 " in powers of ",
 StyleBox["x",
  FontSlant->"Italic"],
 ". First, let us work through a problem in mathematical notation, then do \
the same problem in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", making the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " version look as much like conventional mathematics as possible.\nIf we \
think of the various powers of ",
 StyleBox["x",
  FontSlant->"Italic"],
 " as a set of basis functions,\n     ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["b", "n"], "(", "x", ")"}], "=", 
    SuperscriptBox["x", "n"]}], TraditionalForm]]],
 ", \n the expansion of a function ",
 StyleBox["f",
  FontSlant->"Italic"],
 "(",
 StyleBox["x)",
  FontSlant->"Italic"],
 " is written as\n     ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", " ", "=", "0"}], "\[Infinity]"], 
      RowBox[{
       SubscriptBox["a", "n"], " ", 
       SuperscriptBox["x", "n"]}]}], " ", "=", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", " ", "=", "0"}], "\[Infinity]"], 
      RowBox[{
       SubscriptBox["a", "n"], " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["b", "n"], "(", "x", ")"}], " ", "."}]}]}]}]}], 
   TraditionalForm]]],
 "\nThere is nothing special about the simple powers: the basis functions \
could take any form. Now suppose we multiply this expansion equation by one \
of the other basis functions and integrate (the integration will be over the \
whole range of x under consideration, so every integral will yield just a \
number, and we assume that there are no problems with the convergence of the \
integrals. Then\n   ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Integral]", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["b", "m"], "(", "x", ")"}], 
        RowBox[{"f", "(", "x", ")"}], " ", 
        StyleBox[
         RowBox[{"d", 
          StyleBox["x",
           FontSlant->"Italic"]}]]}]}], " ", "=", 
      RowBox[{"\[Integral]", " ", 
       RowBox[{
        UnderoverscriptBox[
         RowBox[{" ", "\[Sum]"}], 
         RowBox[{"n", " ", "=", "0"}], "\[Infinity]"], 
        SubscriptBox["a", "n"], " ", 
        RowBox[{
         SubscriptBox["b", "m"], "(", "x", ")"}], " ", 
        RowBox[{
         SubscriptBox["b", "n"], "(", "x", ")"}], " ", 
        StyleBox[
         RowBox[{"d", 
          StyleBox["x",
           FontSlant->"Italic"]}]]}]}]}], "\[IndentingNewLine]", 
     StyleBox["                                   ",
      FontSlant->"Italic"], 
     RowBox[{"=", 
      RowBox[{
       UnderoverscriptBox[
        RowBox[{" ", "\[Sum]"}], 
        RowBox[{"n", " ", "=", "0"}], "\[Infinity]"], 
       RowBox[{
        SubscriptBox["a", "n"], " ", 
        RowBox[{"\[Integral]", 
         RowBox[{
          RowBox[{
           SubscriptBox["b", "m"], "(", "x", ")"}], " ", 
          RowBox[{
           SubscriptBox["b", "n"], "(", "x", ")"}], " ", 
          StyleBox[
           RowBox[{"d", 
            StyleBox["x",
             FontSlant->"Italic"]}]]}]}]}]}]}]}]}], TraditionalForm]]],
 "\nor, if we define\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["v", "m"], "=", 
     RowBox[{"\[Integral]", 
      RowBox[{
       RowBox[{
        SubscriptBox["b", "m"], "(", "x", ")"}], 
       RowBox[{"f", "(", "x", ")"}], " ", 
       StyleBox[
        RowBox[{"d", 
         StyleBox["x",
          FontSlant->"Italic"]}]]}]}]}], 
    StyleBox[",",
     FontSlant->"Italic"]}], TraditionalForm]]],
 "\nand\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["S", 
      RowBox[{"m", ",", "n"}]], " ", "=", 
     RowBox[{"\[Integral]", 
      RowBox[{
       RowBox[{
        SubscriptBox["b", "m"], "(", "x", ")"}], " ", 
       RowBox[{
        SubscriptBox["b", "n"], "(", "x", ")"}], " ", 
       StyleBox[
        RowBox[{"d", 
         StyleBox["x",
          FontSlant->"Italic"]}]]}]}]}], 
    StyleBox[",",
     FontSlant->"Italic"]}], TraditionalForm]]],
 "\nthen\n   ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", "m"], "=", 
    RowBox[{
     UnderoverscriptBox[
      RowBox[{" ", "\[Sum]"}], 
      RowBox[{"n", " ", "=", "0"}], "\[Infinity]"], 
     SubscriptBox["S", 
      RowBox[{"m", ",", "n"}]], 
     SubscriptBox["a", "n"]}]}], TraditionalForm]]],
 " \nwhich we could write in vector notation as\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["v",
      FontWeight->"Bold"], " ", "=", " ", 
     RowBox[{
      StyleBox["S",
       FontFamily->"Arial",
       FontSlant->"Plain"], " ", 
      StyleBox["a",
       FontWeight->"Bold"]}]}], 
    StyleBox[",",
     FontWeight->"Bold"]}], TraditionalForm]]],
 "\nwith a formal solution\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["a",
      FontWeight->"Bold"], " ", "=", " ", 
     RowBox[{
      StyleBox[
       SuperscriptBox["S", 
        RowBox[{"-", "1"}]],
       FontFamily->"Arial",
       FontSlant->"Plain"], " ", 
      StyleBox["v",
       FontWeight->"Bold"]}]}], 
    StyleBox[",",
     FontWeight->"Bold"]}], TraditionalForm]]],
 "\nglossing over the fact that the matrix has infinite order, we have a \
means of finding the unknown coefficients ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "n"], TraditionalForm]]],
 ".\nIn ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notation, with basis functions\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"b", "[", "n", "]"}], "[", "x", "]"}], "=", 
     SuperscriptBox["x", "n"]}], ","}], TraditionalForm]]],
 "\n    the expansion of a function ",
 StyleBox["f",
  FontSlant->"Italic"],
 "[",
 StyleBox["x",
  FontSlant->"Italic"],
 "] is written as"
}], "Text",
 CellChangeTimes->{{3.604408735397275*^9, 3.604408760363223*^9}, 
   3.604408801804788*^9, {3.635063601459323*^9, 3.6350636097519007`*^9}, {
   3.635063650646137*^9, 3.6350642421021757`*^9}, {3.666939509415846*^9, 
   3.6669395505133743`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x", "]"}], "==", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "0"}], "\[Infinity]"], 
   RowBox[{
    RowBox[{"a", "[", "n", "]"}], " ", 
    RowBox[{
     RowBox[{"b", "[", "n", "]"}], "[", "x", "]"}]}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x", "]"}], "\[Equal]", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "0"}], "\[Infinity]"], 
   RowBox[{
    RowBox[{"a", "[", "n", "]"}], " ", 
    RowBox[{
     RowBox[{"b", "[", "n", "]"}], "[", "x", "]"}]}]}]}]], "Output",
 CellChangeTimes->{3.4461917949678*^9, 3.477234672828*^9, 
  3.635064880962434*^9}]
}, Open  ]],

Cell["and ideally we would like to see this displayed as", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x", "]"}], "\[Equal]", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "0"}], "\[Infinity]"], 
   RowBox[{
    InterpretationBox[
     SubscriptBox["a", "n"],
     Subscripted[
      a[n]],
     Editable->False], " ", 
    RowBox[{
     InterpretationBox[
      SubscriptBox["b", "n"],
      Subscripted[
       b[n]],
      Editable->False], "[", "x", "]"}]}]}]}]], "Output"],

Cell[TextData[{
 "To get the results displayed in this more familiar mathematical notation, \
we force a subscript style onto ",
 StyleBox["a",
  FontSlant->"Italic"],
 " and ",
 StyleBox["b",
  FontSlant->"Italic"],
 " when they are printed:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Format", "[", 
   RowBox[{"a", "[", "n_", "]"}], "]"}], ":=", 
  RowBox[{"Subscripted", "[", 
   RowBox[{"a", "[", "n", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Format", "[", 
   RowBox[{
    RowBox[{"b", "[", "n_", "]"}], "[", "x_", "]"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Subscripted", "[", 
    RowBox[{"b", "[", "n", "]"}], "]"}], "[", "x", "]"}]}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormatValues", "[", "a", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"MakeBoxes", "[", 
      RowBox[{
       InterpretationBox[
        SubscriptBox["a", "n_"],
        Subscripted[
         $CellContext`a[
          Pattern[$CellContext`n, 
           Blank[]]]],
        Editable->False], ",", "FormatType_"}], "]"}], "]"}], 
    "\[RuleDelayed]", 
    RowBox[{"Format", "[", 
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "n"],
       Subscripted[
        $CellContext`a[$CellContext`n]],
       Editable->False], ",", "FormatType"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     TagBox[
      FormBox[
       InterpretationBox[
        SubscriptBox["a", "n_"],
        Subscripted[
         $CellContext`a[
          Pattern[$CellContext`n, 
           Blank[]]]],
        Editable->False],
       StandardForm],
      Format], "]"}], "\[RuleDelayed]", 
    InterpretationBox[
     SubscriptBox["a", "n"],
     Subscripted[
      $CellContext`a[$CellContext`n]],
     Editable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{3.4461917951698*^9, 3.477234672984*^9, 
  3.635064895244226*^9}]
}, Open  ]],

Cell["Let us take a finite-length expansion to illustrate a point", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"maxpow", "=", "3"}], "\[IndentingNewLine]", 
 RowBox[{"exp", "=", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], "==", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"n", "=", "0"}], "maxpow"], 
    RowBox[{
     RowBox[{"a", "[", "n", "]"}], " ", 
     RowBox[{
      RowBox[{"b", "[", "n", "]"}], "[", "x", "]"}]}]}]}]}]}], "Input"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.4461917952178*^9, 3.477234673065*^9, 
  3.635064901432556*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     SubscriptBox["a", "0"],
     Subscripted[
      $CellContext`a[0]],
     Editable->False], " ", 
    RowBox[{
     InterpretationBox[
      SubscriptBox["b", "0"],
      Subscripted[
       $CellContext`b[0]],
      Editable->False], "[", "x", "]"}]}], "+", 
   RowBox[{
    InterpretationBox[
     SubscriptBox["a", "1"],
     Subscripted[
      $CellContext`a[1]],
     Editable->False], " ", 
    RowBox[{
     InterpretationBox[
      SubscriptBox["b", "1"],
      Subscripted[
       $CellContext`b[1]],
      Editable->False], "[", "x", "]"}]}], "+", 
   RowBox[{
    InterpretationBox[
     SubscriptBox["a", "2"],
     Subscripted[
      $CellContext`a[2]],
     Editable->False], " ", 
    RowBox[{
     InterpretationBox[
      SubscriptBox["b", "2"],
      Subscripted[
       $CellContext`b[2]],
      Editable->False], "[", "x", "]"}]}], "+", 
   RowBox[{
    InterpretationBox[
     SubscriptBox["a", "3"],
     Subscripted[
      $CellContext`a[3]],
     Editable->False], " ", 
    RowBox[{
     InterpretationBox[
      SubscriptBox["b", "3"],
      Subscripted[
       $CellContext`b[3]],
      Editable->False], "[", "x", "]"}]}]}]}]], "Output",
 CellChangeTimes->{3.4461917952178*^9, 3.477234673065*^9, 
  3.6350649014341383`*^9}]
}, Open  ]],

Cell[TextData[{
 "now multiply by ",
 StyleBox["b",
  FontSlant->"Italic"],
 "[",
 StyleBox["m",
  FontSlant->"Italic"],
 "] and integrate over the range of interest, -1 to 1 say"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vex", "=", 
  RowBox[{"Map", "[", 
   RowBox[{"Expand", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"b", "[", "m", "]"}], "[", "x", "]"}], " ", "#"}], "&"}], 
       "[", "exp", "]"}], ",", "Equal"}], "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], " ", 
   RowBox[{
    InterpretationBox[
     SubscriptBox["b", "m"],
     Subscripted[
      $CellContext`b[$CellContext`m]],
     Editable->False], "[", "x", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     SubscriptBox["a", "0"],
     Subscripted[
      $CellContext`a[0]],
     Editable->False], " ", 
    RowBox[{
     InterpretationBox[
      SubscriptBox["b", "0"],
      Subscripted[
       $CellContext`b[0]],
      Editable->False], "[", "x", "]"}], " ", 
    RowBox[{
     InterpretationBox[
      SubscriptBox["b", "m"],
      Subscripted[
       $CellContext`b[$CellContext`m]],
      Editable->False], "[", "x", "]"}]}], "+", 
   RowBox[{
    InterpretationBox[
     SubscriptBox["a", "1"],
     Subscripted[
      $CellContext`a[1]],
     Editable->False], " ", 
    RowBox[{
     InterpretationBox[
      SubscriptBox["b", "1"],
      Subscripted[
       $CellContext`b[1]],
      Editable->False], "[", "x", "]"}], " ", 
    RowBox[{
     InterpretationBox[
      SubscriptBox["b", "m"],
      Subscripted[
       $CellContext`b[$CellContext`m]],
      Editable->False], "[", "x", "]"}]}], "+", 
   RowBox[{
    InterpretationBox[
     SubscriptBox["a", "2"],
     Subscripted[
      $CellContext`a[2]],
     Editable->False], " ", 
    RowBox[{
     InterpretationBox[
      SubscriptBox["b", "2"],
      Subscripted[
       $CellContext`b[2]],
      Editable->False], "[", "x", "]"}], " ", 
    RowBox[{
     InterpretationBox[
      SubscriptBox["b", "m"],
      Subscripted[
       $CellContext`b[$CellContext`m]],
      Editable->False], "[", "x", "]"}]}], "+", 
   RowBox[{
    InterpretationBox[
     SubscriptBox["a", "3"],
     Subscripted[
      $CellContext`a[3]],
     Editable->False], " ", 
    RowBox[{
     InterpretationBox[
      SubscriptBox["b", "3"],
      Subscripted[
       $CellContext`b[3]],
      Editable->False], "[", "x", "]"}], " ", 
    RowBox[{
     InterpretationBox[
      SubscriptBox["b", "m"],
      Subscripted[
       $CellContext`b[$CellContext`m]],
      Editable->False], "[", "x", "]"}]}]}]}]], "Output",
 CellChangeTimes->{3.4461917952688*^9, 3.477234673335*^9, 
  3.635064906509727*^9}]
}, Open  ]],

Cell[TextData[{
 "We needed to ",
 StyleBox["Map Expand",
  FontFamily->"Courier New"],
 " onto the expression in order to force Mathematica to expand both sides of \
the equation."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", "m", "]"}], "=", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"-", "1"}], "1"], "  ", 
        RowBox[{"#", " ", 
         RowBox[{"\[DifferentialD]", "x"}]}]}], "&"}], "[", "vex", "]"}], ",",
      "Equal"}], "]"}], "//.", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "1"}], "1"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a_", "+", "b_"}], ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], ":>", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"-", "1"}], "1"], 
      RowBox[{"a", 
       RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"-", "1"}], "1"], 
      RowBox[{"b", 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "1"}], "1"], 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], " ", 
     RowBox[{
      InterpretationBox[
       SubscriptBox["b", "m"],
       Subscripted[
        $CellContext`b[$CellContext`m]],
       Editable->False], "[", "x", "]"}]}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "1"}], "1"], 
    RowBox[{
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "0"],
       Subscripted[
        $CellContext`a[0]],
       Editable->False], " ", 
      RowBox[{
       InterpretationBox[
        SubscriptBox["b", "0"],
        Subscripted[
         $CellContext`b[0]],
        Editable->False], "[", "x", "]"}], " ", 
      RowBox[{
       InterpretationBox[
        SubscriptBox["b", "m"],
        Subscripted[
         $CellContext`b[$CellContext`m]],
        Editable->False], "[", "x", "]"}]}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "1"}], "1"], 
    RowBox[{
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "1"],
       Subscripted[
        $CellContext`a[1]],
       Editable->False], " ", 
      RowBox[{
       InterpretationBox[
        SubscriptBox["b", "1"],
        Subscripted[
         $CellContext`b[1]],
        Editable->False], "[", "x", "]"}], " ", 
      RowBox[{
       InterpretationBox[
        SubscriptBox["b", "m"],
        Subscripted[
         $CellContext`b[$CellContext`m]],
        Editable->False], "[", "x", "]"}]}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "1"}], "1"], 
    RowBox[{
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "2"],
       Subscripted[
        $CellContext`a[2]],
       Editable->False], " ", 
      RowBox[{
       InterpretationBox[
        SubscriptBox["b", "2"],
        Subscripted[
         $CellContext`b[2]],
        Editable->False], "[", "x", "]"}], " ", 
      RowBox[{
       InterpretationBox[
        SubscriptBox["b", "m"],
        Subscripted[
         $CellContext`b[$CellContext`m]],
        Editable->False], "[", "x", "]"}]}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "1"}], "1"], 
    RowBox[{
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "3"],
       Subscripted[
        $CellContext`a[3]],
       Editable->False], " ", 
      RowBox[{
       InterpretationBox[
        SubscriptBox["b", "3"],
        Subscripted[
         $CellContext`b[3]],
        Editable->False], "[", "x", "]"}], " ", 
      RowBox[{
       InterpretationBox[
        SubscriptBox["b", "m"],
        Subscripted[
         $CellContext`b[$CellContext`m]],
        Editable->False], "[", "x", "]"}]}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]], "Output",
 CellChangeTimes->{3.4461917966577997`*^9, 3.477234674078*^9, 
  3.635064911707404*^9}]
}, Open  ]],

Cell[TextData[{
 "Now the coefficients ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "i"], TraditionalForm]]],
 " are independent of ",
 StyleBox["x",
  FontSlant->"Italic"],
 ". Suppose the integral of ",
 StyleBox["b",
  FontSlant->"Italic"],
 "[",
 StyleBox["i",
  FontSlant->"Italic"],
 "] ",
 StyleBox["b",
  FontSlant->"Italic"],
 "[",
 StyleBox["j",
  FontSlant->"Italic"],
 "] is",
 StyleBox[" s",
  FontSlant->"Italic"],
 "[",
 StyleBox["i",
  FontSlant->"Italic"],
 ",",
 StyleBox["j",
  FontSlant->"Italic"],
 "] and that the integral of ",
 StyleBox["b",
  FontSlant->"Italic"],
 "[",
 StyleBox["i",
  FontSlant->"Italic"],
 "] ",
 StyleBox["f  ",
  FontSlant->"Italic"],
 "is \[Phi][",
 StyleBox["i",
  FontSlant->"Italic"],
 "], then, again using subscript notation,"
}], "Text",
 CellChangeTimes->{{3.6350643187356873`*^9, 3.635064333897255*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Format", "[", 
   RowBox[{"s", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], "]"}], ":=", 
  RowBox[{"Subscripted", "[", 
   RowBox[{"s", "[", 
    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Format", "[", 
   RowBox[{"\[Phi]", "[", "i_", "]"}], "]"}], ":=", 
  RowBox[{"Subscripted", "[", 
   RowBox[{"\[Phi]", "[", "i", "]"}], "]"}]}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"vv", "[", "m_", "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"v", "[", "m", "]"}], "/.", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"-", "1"}], "1"], 
      RowBox[{"q_", " ", 
       RowBox[{
        RowBox[{"b", "[", "i_", "]"}], "[", "x", "]"}], 
       RowBox[{
        RowBox[{"b", "[", "j_", "]"}], "[", "x", "]"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}], "\[Rule]", 
     RowBox[{"q", " ", 
      RowBox[{"s", "[", 
       RowBox[{"i", ",", "j"}], "]"}]}]}]}], "/.", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "1"}], "1"], 
     RowBox[{"q_", " ", 
      RowBox[{
       RowBox[{"b", "[", "i_", "]"}], "[", "x", "]"}], " ", 
      RowBox[{"f", "[", "x", "]"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "\[Rule]", 
    RowBox[{"q", " ", 
     RowBox[{"\[Phi]", "[", "i", "]"}]}]}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "1"}], "1"], 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], " ", 
     RowBox[{
      InterpretationBox[
       SubscriptBox["b", "m"],
       Subscripted[
        $CellContext`b[$CellContext`m]],
       Editable->False], "[", "x", "]"}]}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     SubscriptBox["a", "0"],
     Subscripted[
      $CellContext`a[0]],
     Editable->False], " ", 
    InterpretationBox[
     SubscriptBox["s", 
      RowBox[{"0", ",", "m"}]],
     Subscripted[
      $CellContext`s[0, $CellContext`m]],
     Editable->False]}], "+", 
   RowBox[{
    InterpretationBox[
     SubscriptBox["a", "1"],
     Subscripted[
      $CellContext`a[1]],
     Editable->False], " ", 
    InterpretationBox[
     SubscriptBox["s", 
      RowBox[{"1", ",", "m"}]],
     Subscripted[
      $CellContext`s[1, $CellContext`m]],
     Editable->False]}], "+", 
   RowBox[{
    InterpretationBox[
     SubscriptBox["a", "2"],
     Subscripted[
      $CellContext`a[2]],
     Editable->False], " ", 
    InterpretationBox[
     SubscriptBox["s", 
      RowBox[{"2", ",", "m"}]],
     Subscripted[
      $CellContext`s[2, $CellContext`m]],
     Editable->False]}], "+", 
   RowBox[{
    InterpretationBox[
     SubscriptBox["a", "3"],
     Subscripted[
      $CellContext`a[3]],
     Editable->False], " ", 
    InterpretationBox[
     SubscriptBox["s", 
      RowBox[{"3", ",", "m"}]],
     Subscripted[
      $CellContext`s[3, $CellContext`m]],
     Editable->False]}]}]}]], "Output",
 CellChangeTimes->{3.4461917967688*^9, 3.477234674226*^9, 
  3.635064921346793*^9}]
}, Open  ]],

Cell[TextData[{
 "There will be one such equation for each value of ",
 StyleBox["m",
  FontSlant->"Italic"],
 ", so we may group these together to form a set of simultaneous equations \
for the a coefficients."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seq", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"vv", "[", "m", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "0", ",", "maxpow"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "1"}], "1"], 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], " ", 
       RowBox[{
        InterpretationBox[
         SubscriptBox["b", "0"],
         Subscripted[
          $CellContext`b[0]],
         Editable->False], "[", "x", "]"}]}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "\[Equal]", 
    RowBox[{
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "0"],
       Subscripted[
        $CellContext`a[0]],
       Editable->False], " ", 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"0", ",", "0"}]],
       Subscripted[
        $CellContext`s[0, 0]],
       Editable->False]}], "+", 
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "1"],
       Subscripted[
        $CellContext`a[1]],
       Editable->False], " ", 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"1", ",", "0"}]],
       Subscripted[
        $CellContext`s[1, 0]],
       Editable->False]}], "+", 
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "2"],
       Subscripted[
        $CellContext`a[2]],
       Editable->False], " ", 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"2", ",", "0"}]],
       Subscripted[
        $CellContext`s[2, 0]],
       Editable->False]}], "+", 
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "3"],
       Subscripted[
        $CellContext`a[3]],
       Editable->False], " ", 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"3", ",", "0"}]],
       Subscripted[
        $CellContext`s[3, 0]],
       Editable->False]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "1"}], "1"], 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], " ", 
       RowBox[{
        InterpretationBox[
         SubscriptBox["b", "1"],
         Subscripted[
          $CellContext`b[1]],
         Editable->False], "[", "x", "]"}]}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "\[Equal]", 
    RowBox[{
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "0"],
       Subscripted[
        $CellContext`a[0]],
       Editable->False], " ", 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"0", ",", "1"}]],
       Subscripted[
        $CellContext`s[0, 1]],
       Editable->False]}], "+", 
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "1"],
       Subscripted[
        $CellContext`a[1]],
       Editable->False], " ", 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"1", ",", "1"}]],
       Subscripted[
        $CellContext`s[1, 1]],
       Editable->False]}], "+", 
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "2"],
       Subscripted[
        $CellContext`a[2]],
       Editable->False], " ", 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"2", ",", "1"}]],
       Subscripted[
        $CellContext`s[2, 1]],
       Editable->False]}], "+", 
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "3"],
       Subscripted[
        $CellContext`a[3]],
       Editable->False], " ", 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"3", ",", "1"}]],
       Subscripted[
        $CellContext`s[3, 1]],
       Editable->False]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "1"}], "1"], 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], " ", 
       RowBox[{
        InterpretationBox[
         SubscriptBox["b", "2"],
         Subscripted[
          $CellContext`b[2]],
         Editable->False], "[", "x", "]"}]}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "\[Equal]", 
    RowBox[{
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "0"],
       Subscripted[
        $CellContext`a[0]],
       Editable->False], " ", 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"0", ",", "2"}]],
       Subscripted[
        $CellContext`s[0, 2]],
       Editable->False]}], "+", 
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "1"],
       Subscripted[
        $CellContext`a[1]],
       Editable->False], " ", 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"1", ",", "2"}]],
       Subscripted[
        $CellContext`s[1, 2]],
       Editable->False]}], "+", 
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "2"],
       Subscripted[
        $CellContext`a[2]],
       Editable->False], " ", 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"2", ",", "2"}]],
       Subscripted[
        $CellContext`s[2, 2]],
       Editable->False]}], "+", 
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "3"],
       Subscripted[
        $CellContext`a[3]],
       Editable->False], " ", 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"3", ",", "2"}]],
       Subscripted[
        $CellContext`s[3, 2]],
       Editable->False]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "1"}], "1"], 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], " ", 
       RowBox[{
        InterpretationBox[
         SubscriptBox["b", "3"],
         Subscripted[
          $CellContext`b[3]],
         Editable->False], "[", "x", "]"}]}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "\[Equal]", 
    RowBox[{
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "0"],
       Subscripted[
        $CellContext`a[0]],
       Editable->False], " ", 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"0", ",", "3"}]],
       Subscripted[
        $CellContext`s[0, 3]],
       Editable->False]}], "+", 
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "1"],
       Subscripted[
        $CellContext`a[1]],
       Editable->False], " ", 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"1", ",", "3"}]],
       Subscripted[
        $CellContext`s[1, 3]],
       Editable->False]}], "+", 
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "2"],
       Subscripted[
        $CellContext`a[2]],
       Editable->False], " ", 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"2", ",", "3"}]],
       Subscripted[
        $CellContext`s[2, 3]],
       Editable->False]}], "+", 
     RowBox[{
      InterpretationBox[
       SubscriptBox["a", "3"],
       Subscripted[
        $CellContext`a[3]],
       Editable->False], " ", 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"3", ",", "3"}]],
       Subscripted[
        $CellContext`s[3, 3]],
       Editable->False]}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.4461917968838*^9, 3.477234674359*^9, 
  3.635064928111247*^9}]
}, Open  ]],

Cell[TextData[{
 "In principle, we can use ",
 StyleBox["Solve",
  FontFamily->"Courier New"],
 " to evaluate this -- but the resulting expressions are enormous and not \
very easy to work with."
}], "Text",
 CellChangeTimes->{3.6350643762798367`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{"seq", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"a", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "maxpow"}], "}"}]}], "]"}]}], "]"}], "//",
    "Simplify"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     InterpretationBox[
      SubscriptBox["a", "0"],
      Subscripted[
       $CellContext`a[0]],
      Editable->False], "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SubsuperscriptBox["\[Integral]", 
                  RowBox[{"-", "1"}], "1"], 
                 RowBox[{
                  RowBox[{
                   RowBox[{"f", "[", "x", "]"}], " ", 
                   RowBox[{
                    InterpretationBox[
                    SubscriptBox["b", "2"],
                    Subscripted[
                    $CellContext`b[2]],
                    Editable->False], "[", "x", "]"}]}], 
                  RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   InterpretationBox[
                    SubscriptBox["s", 
                    RowBox[{"2", ",", "1"}]],
                    Subscripted[
                    $CellContext`s[2, 1]],
                    Editable->False]}], " ", 
                  InterpretationBox[
                   SubscriptBox["s", 
                    RowBox[{"3", ",", "0"}]],
                   Subscripted[
                    $CellContext`s[3, 0]],
                   Editable->False]}], "+", 
                 RowBox[{
                  InterpretationBox[
                   SubscriptBox["s", 
                    RowBox[{"2", ",", "0"}]],
                   Subscripted[
                    $CellContext`s[2, 0]],
                   Editable->False], " ", 
                  InterpretationBox[
                   SubscriptBox["s", 
                    RowBox[{"3", ",", "1"}]],
                   Subscripted[
                    $CellContext`s[3, 1]],
                   Editable->False]}]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SubsuperscriptBox["\[Integral]", 
                  RowBox[{"-", "1"}], "1"], 
                 RowBox[{
                  RowBox[{
                   RowBox[{"f", "[", "x", "]"}], " ", 
                   RowBox[{
                    InterpretationBox[
                    SubscriptBox["b", "1"],
                    Subscripted[
                    $CellContext`b[1]],
                    Editable->False], "[", "x", "]"}]}], 
                  RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  InterpretationBox[
                   SubscriptBox["s", 
                    RowBox[{"2", ",", "2"}]],
                   Subscripted[
                    $CellContext`s[2, 2]],
                   Editable->False], " ", 
                  InterpretationBox[
                   SubscriptBox["s", 
                    RowBox[{"3", ",", "0"}]],
                   Subscripted[
                    $CellContext`s[3, 0]],
                   Editable->False]}], "-", 
                 RowBox[{
                  InterpretationBox[
                   SubscriptBox["s", 
                    RowBox[{"2", ",", "0"}]],
                   Subscripted[
                    $CellContext`s[2, 0]],
                   Editable->False], " ", 
                  InterpretationBox[
                   SubscriptBox["s", 
                    RowBox[{"3", ",", "2"}]],
                   Subscripted[
                    $CellContext`s[3, 2]],
                   Editable->False]}]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SubsuperscriptBox["\[Integral]", 
                  RowBox[{"-", "1"}], "1"], 
                 RowBox[{
                  RowBox[{
                   RowBox[{"f", "[", "x", "]"}], " ", 
                   RowBox[{
                    InterpretationBox[
                    SubscriptBox["b", "0"],
                    Subscripted[
                    $CellContext`b[0]],
                    Editable->False], "[", "x", "]"}]}], 
                  RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   InterpretationBox[
                    SubscriptBox["s", 
                    RowBox[{"2", ",", "2"}]],
                    Subscripted[
                    $CellContext`s[2, 2]],
                    Editable->False]}], " ", 
                  InterpretationBox[
                   SubscriptBox["s", 
                    RowBox[{"3", ",", "1"}]],
                   Subscripted[
                    $CellContext`s[3, 1]],
                   Editable->False]}], "+", 
                 RowBox[{
                  InterpretationBox[
                   SubscriptBox["s", 
                    RowBox[{"2", ",", "1"}]],
                   Subscripted[
                    $CellContext`s[2, 1]],
                   Editable->False], " ", 
                  InterpretationBox[
                   SubscriptBox["s", 
                    RowBox[{"3", ",", "2"}]],
                   Subscripted[
                    $CellContext`s[3, 2]],
                   Editable->False]}]}], ")"}]}]}], ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              InterpretationBox[
               SubscriptBox["s", 
                RowBox[{"1", ",", "3"}]],
               Subscripted[
                $CellContext`s[1, 3]],
               Editable->False], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[2, 1]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[3, 0]],
                  Editable->False]}], "-", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[2, 0]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[3, 1]],
                  Editable->False]}]}], ")"}]}], "+", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["s", 
                RowBox[{"1", ",", "1"}]],
               Subscripted[
                $CellContext`s[1, 1]],
               Editable->False], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  InterpretationBox[
                   SubscriptBox["s", 
                    RowBox[{"2", ",", "3"}]],
                   Subscripted[
                    $CellContext`s[2, 3]],
                   Editable->False]}], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[3, 0]],
                  Editable->False]}], "+", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[2, 0]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "3"}]],
                  Subscripted[
                   $CellContext`s[3, 3]],
                  Editable->False]}]}], ")"}]}], "+", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["s", 
                RowBox[{"1", ",", "0"}]],
               Subscripted[
                $CellContext`s[1, 0]],
               Editable->False], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "3"}]],
                  Subscripted[
                   $CellContext`s[2, 3]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[3, 1]],
                  Editable->False]}], "-", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[2, 1]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "3"}]],
                  Subscripted[
                   $CellContext`s[3, 3]],
                  Editable->False]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              InterpretationBox[
               SubscriptBox["s", 
                RowBox[{"1", ",", "2"}]],
               Subscripted[
                $CellContext`s[1, 2]],
               Editable->False], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[2, 1]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[3, 0]],
                  Editable->False]}], "-", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[2, 0]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[3, 1]],
                  Editable->False]}]}], ")"}]}], "+", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["s", 
                RowBox[{"1", ",", "1"}]],
               Subscripted[
                $CellContext`s[1, 1]],
               Editable->False], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  InterpretationBox[
                   SubscriptBox["s", 
                    RowBox[{"2", ",", "2"}]],
                   Subscripted[
                    $CellContext`s[2, 2]],
                   Editable->False]}], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[3, 0]],
                  Editable->False]}], "+", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[2, 0]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "2"}]],
                  Subscripted[
                   $CellContext`s[3, 2]],
                  Editable->False]}]}], ")"}]}], "+", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["s", 
                RowBox[{"1", ",", "0"}]],
               Subscripted[
                $CellContext`s[1, 0]],
               Editable->False], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "2"}]],
                  Subscripted[
                   $CellContext`s[2, 2]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[3, 1]],
                  Editable->False]}], "-", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[2, 1]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "2"}]],
                  Subscripted[
                   $CellContext`s[3, 2]],
                  Editable->False]}]}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubsuperscriptBox["\[Integral]", 
                 RowBox[{"-", "1"}], "1"], 
                RowBox[{
                 RowBox[{
                  RowBox[{"f", "[", "x", "]"}], " ", 
                  RowBox[{
                   InterpretationBox[
                    SubscriptBox["b", "3"],
                    Subscripted[
                    $CellContext`b[3]],
                    Editable->False], "[", "x", "]"}]}], 
                 RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  InterpretationBox[
                   SubscriptBox["s", 
                    RowBox[{"2", ",", "1"}]],
                   Subscripted[
                    $CellContext`s[2, 1]],
                   Editable->False]}], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[3, 0]],
                  Editable->False]}], "+", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[2, 0]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[3, 1]],
                  Editable->False]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubsuperscriptBox["\[Integral]", 
                 RowBox[{"-", "1"}], "1"], 
                RowBox[{
                 RowBox[{
                  RowBox[{"f", "[", "x", "]"}], " ", 
                  RowBox[{
                   InterpretationBox[
                    SubscriptBox["b", "1"],
                    Subscripted[
                    $CellContext`b[1]],
                    Editable->False], "[", "x", "]"}]}], 
                 RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "3"}]],
                  Subscripted[
                   $CellContext`s[2, 3]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[3, 0]],
                  Editable->False]}], "-", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[2, 0]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "3"}]],
                  Subscripted[
                   $CellContext`s[3, 3]],
                  Editable->False]}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubsuperscriptBox["\[Integral]", 
                 RowBox[{"-", "1"}], "1"], 
                RowBox[{
                 RowBox[{
                  RowBox[{"f", "[", "x", "]"}], " ", 
                  RowBox[{
                   InterpretationBox[
                    SubscriptBox["b", "0"],
                    Subscripted[
                    $CellContext`b[0]],
                    Editable->False], "[", "x", "]"}]}], 
                 RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  InterpretationBox[
                   SubscriptBox["s", 
                    RowBox[{"2", ",", "3"}]],
                   Subscripted[
                    $CellContext`s[2, 3]],
                   Editable->False]}], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[3, 1]],
                  Editable->False]}], "+", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[2, 1]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "3"}]],
                  Subscripted[
                   $CellContext`s[3, 3]],
                  Editable->False]}]}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              InterpretationBox[
               SubscriptBox["s", 
                RowBox[{"1", ",", "2"}]],
               Subscripted[
                $CellContext`s[1, 2]],
               Editable->False], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[2, 1]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[3, 0]],
                  Editable->False]}], "-", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[2, 0]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[3, 1]],
                  Editable->False]}]}], ")"}]}], "+", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["s", 
                RowBox[{"1", ",", "1"}]],
               Subscripted[
                $CellContext`s[1, 1]],
               Editable->False], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  InterpretationBox[
                   SubscriptBox["s", 
                    RowBox[{"2", ",", "2"}]],
                   Subscripted[
                    $CellContext`s[2, 2]],
                   Editable->False]}], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[3, 0]],
                  Editable->False]}], "+", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[2, 0]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "2"}]],
                  Subscripted[
                   $CellContext`s[3, 2]],
                  Editable->False]}]}], ")"}]}], "+", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["s", 
                RowBox[{"1", ",", "0"}]],
               Subscripted[
                $CellContext`s[1, 0]],
               Editable->False], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "2"}]],
                  Subscripted[
                   $CellContext`s[2, 2]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[3, 1]],
                  Editable->False]}], "-", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[2, 1]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "2"}]],
                  Subscripted[
                   $CellContext`s[3, 2]],
                  Editable->False]}]}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              InterpretationBox[
               SubscriptBox["s", 
                RowBox[{"0", ",", "3"}]],
               Subscripted[
                $CellContext`s[0, 3]],
               Editable->False], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[2, 1]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[3, 0]],
                  Editable->False]}], "-", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[2, 0]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[3, 1]],
                  Editable->False]}]}], ")"}]}], "+", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["s", 
                RowBox[{"0", ",", "1"}]],
               Subscripted[
                $CellContext`s[0, 1]],
               Editable->False], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  InterpretationBox[
                   SubscriptBox["s", 
                    RowBox[{"2", ",", "3"}]],
                   Subscripted[
                    $CellContext`s[2, 3]],
                   Editable->False]}], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[3, 0]],
                  Editable->False]}], "+", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[2, 0]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "3"}]],
                  Subscripted[
                   $CellContext`s[3, 3]],
                  Editable->False]}]}], ")"}]}], "+", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["s", 
                RowBox[{"0", ",", "0"}]],
               Subscripted[
                $CellContext`s[0, 0]],
               Editable->False], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "3"}]],
                  Subscripted[
                   $CellContext`s[2, 3]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[3, 1]],
                  Editable->False]}], "-", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[2, 1]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "3"}]],
                  Subscripted[
                   $CellContext`s[3, 3]],
                  Editable->False]}]}], ")"}]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              InterpretationBox[
               SubscriptBox["s", 
                RowBox[{"0", ",", "2"}]],
               Subscripted[
                $CellContext`s[0, 2]],
               Editable->False], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[2, 1]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[3, 0]],
                  Editable->False]}], "-", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[2, 0]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[3, 1]],
                  Editable->False]}]}], ")"}]}], "+", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["s", 
                RowBox[{"0", ",", "1"}]],
               Subscripted[
                $CellContext`s[0, 1]],
               Editable->False], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  InterpretationBox[
                   SubscriptBox["s", 
                    RowBox[{"2", ",", "2"}]],
                   Subscripted[
                    $CellContext`s[2, 2]],
                   Editable->False]}], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[3, 0]],
                  Editable->False]}], "+", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[2, 0]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "2"}]],
                  Subscripted[
                   $CellContext`s[3, 2]],
                  Editable->False]}]}], ")"}]}], "+", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["s", 
                RowBox[{"0", ",", "0"}]],
               Subscripted[
                $CellContext`s[0, 0]],
               Editable->False], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "2"}]],
                  Subscripted[
                   $CellContext`s[2, 2]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[3, 1]],
                  Editable->False]}], "-", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[2, 1]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "2"}]],
                  Subscripted[
                   $CellContext`s[3, 2]],
                  Editable->False]}]}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              InterpretationBox[
               SubscriptBox["s", 
                RowBox[{"1", ",", "3"}]],
               Subscripted[
                $CellContext`s[1, 3]],
               Editable->False], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[2, 1]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[3, 0]],
                  Editable->False]}], "-", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[2, 0]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[3, 1]],
                  Editable->False]}]}], ")"}]}], "+", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["s", 
                RowBox[{"1", ",", "1"}]],
               Subscripted[
                $CellContext`s[1, 1]],
               Editable->False], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  InterpretationBox[
                   SubscriptBox["s", 
                    RowBox[{"2", ",", "3"}]],
                   Subscripted[
                    $CellContext`s[2, 3]],
                   Editable->False]}], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[3, 0]],
                  Editable->False]}], "+", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "0"}]],
                  Subscripted[
                   $CellContext`s[2, 0]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "3"}]],
                  Subscripted[
                   $CellContext`s[3, 3]],
                  Editable->False]}]}], ")"}]}], "+", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["s", 
                RowBox[{"1", ",", "0"}]],
               Subscripted[
                $CellContext`s[1, 0]],
               Editable->False], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "3"}]],
                  Subscripted[
                   $CellContext`s[2, 3]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[3, 1]],
                  Editable->False]}], "-", 
                RowBox[{
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"2", ",", "1"}]],
                  Subscripted[
                   $CellContext`s[2, 1]],
                  Editable->False], " ", 
                 InterpretationBox[
                  SubscriptBox["s", 
                   RowBox[{"3", ",", "3"}]],
                  Subscripted[
                   $CellContext`s[3, 3]],
                  Editable->False]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
       ")"}]}]}], ",", 
    RowBox[{
     InterpretationBox[
      SubscriptBox["a", "1"],
      Subscripted[
       $CellContext`a[1]],
      Editable->False], "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "1"],
               Subscripted[
                $CellContext`b[1]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "3"}]],
          Subscripted[
           $CellContext`s[0, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "0"}]],
          Subscripted[
           $CellContext`s[3, 0]],
          Editable->False]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "1"],
               Subscripted[
                $CellContext`b[1]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "2"}]],
          Subscripted[
           $CellContext`s[0, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "0"}]],
          Subscripted[
           $CellContext`s[3, 0]],
          Editable->False]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "0"],
               Subscripted[
                $CellContext`b[0]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "3"}]],
          Subscripted[
           $CellContext`s[0, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "1"}]],
          Subscripted[
           $CellContext`s[3, 1]],
          Editable->False]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "0"],
               Subscripted[
                $CellContext`b[0]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "2"}]],
          Subscripted[
           $CellContext`s[0, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "1"}]],
          Subscripted[
           $CellContext`s[3, 1]],
          Editable->False]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "1"],
               Subscripted[
                $CellContext`b[1]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "3"}]],
          Subscripted[
           $CellContext`s[0, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "0"}]],
          Subscripted[
           $CellContext`s[2, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "0"],
               Subscripted[
                $CellContext`b[0]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "3"}]],
          Subscripted[
           $CellContext`s[0, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "1"}]],
          Subscripted[
           $CellContext`s[2, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "1"],
               Subscripted[
                $CellContext`b[1]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "0"],
               Subscripted[
                $CellContext`b[0]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "3"],
               Subscripted[
                $CellContext`b[3]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"0", ",", "2"}]],
             Subscripted[
              $CellContext`s[0, 2]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "1"}]],
                Subscripted[
                 $CellContext`s[2, 1]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "-", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"0", ",", "1"}]],
             Subscripted[
              $CellContext`s[0, 1]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                InterpretationBox[
                 SubscriptBox["s", 
                  RowBox[{"2", ",", "2"}]],
                 Subscripted[
                  $CellContext`s[2, 2]],
                 Editable->False]}], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "2"}]],
                Subscripted[
                 $CellContext`s[3, 2]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"0", ",", "0"}]],
             Subscripted[
              $CellContext`s[0, 0]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "2"}]],
                Subscripted[
                 $CellContext`s[2, 2]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}], "-", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "1"}]],
                Subscripted[
                 $CellContext`s[2, 1]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "2"}]],
                Subscripted[
                 $CellContext`s[3, 2]],
                Editable->False]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "1"],
               Subscripted[
                $CellContext`b[1]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "2"}]],
          Subscripted[
           $CellContext`s[0, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "0"}]],
          Subscripted[
           $CellContext`s[2, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "0"],
               Subscripted[
                $CellContext`b[0]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "2"}]],
          Subscripted[
           $CellContext`s[0, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "1"}]],
          Subscripted[
           $CellContext`s[2, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "1"],
               Subscripted[
                $CellContext`b[1]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "0"],
               Subscripted[
                $CellContext`b[0]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "2"],
               Subscripted[
                $CellContext`b[2]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"0", ",", "3"}]],
             Subscripted[
              $CellContext`s[0, 3]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                InterpretationBox[
                 SubscriptBox["s", 
                  RowBox[{"2", ",", "1"}]],
                 Subscripted[
                  $CellContext`s[2, 1]],
                 Editable->False]}], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"0", ",", "1"}]],
             Subscripted[
              $CellContext`s[0, 1]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "3"}]],
                Subscripted[
                 $CellContext`s[2, 3]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "-", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "3"}]],
                Subscripted[
                 $CellContext`s[3, 3]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"0", ",", "0"}]],
             Subscripted[
              $CellContext`s[0, 0]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                InterpretationBox[
                 SubscriptBox["s", 
                  RowBox[{"2", ",", "3"}]],
                 Subscripted[
                  $CellContext`s[2, 3]],
                 Editable->False]}], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "1"}]],
                Subscripted[
                 $CellContext`s[2, 1]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "3"}]],
                Subscripted[
                 $CellContext`s[3, 3]],
                Editable->False]}]}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          InterpretationBox[
           SubscriptBox["s", 
            RowBox[{"0", ",", "1"}]],
           Subscripted[
            $CellContext`s[0, 1]],
           Editable->False]}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "0"}]],
          Subscripted[
           $CellContext`s[3, 0]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "0"}]],
          Subscripted[
           $CellContext`s[3, 0]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "1"}]],
          Subscripted[
           $CellContext`s[3, 1]],
          Editable->False]}], "-", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "1"}]],
          Subscripted[
           $CellContext`s[3, 1]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "0"}]],
          Subscripted[
           $CellContext`s[2, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "-", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "1"}]],
          Subscripted[
           $CellContext`s[2, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "-", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "0"}]],
          Subscripted[
           $CellContext`s[1, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "1"}]],
          Subscripted[
           $CellContext`s[1, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "3"}]],
          Subscripted[
           $CellContext`s[0, 3]],
          Editable->False], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"1", ",", "2"}]],
             Subscripted[
              $CellContext`s[1, 2]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                InterpretationBox[
                 SubscriptBox["s", 
                  RowBox[{"2", ",", "1"}]],
                 Subscripted[
                  $CellContext`s[2, 1]],
                 Editable->False]}], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"1", ",", "1"}]],
             Subscripted[
              $CellContext`s[1, 1]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "2"}]],
                Subscripted[
                 $CellContext`s[2, 2]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "-", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "2"}]],
                Subscripted[
                 $CellContext`s[3, 2]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"1", ",", "0"}]],
             Subscripted[
              $CellContext`s[1, 0]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                InterpretationBox[
                 SubscriptBox["s", 
                  RowBox[{"2", ",", "2"}]],
                 Subscripted[
                  $CellContext`s[2, 2]],
                 Editable->False]}], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "1"}]],
                Subscripted[
                 $CellContext`s[2, 1]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "2"}]],
                Subscripted[
                 $CellContext`s[3, 2]],
                Editable->False]}]}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "0"}]],
          Subscripted[
           $CellContext`s[2, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "1"}]],
          Subscripted[
           $CellContext`s[2, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "0"}]],
          Subscripted[
           $CellContext`s[1, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "-", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "1"}]],
          Subscripted[
           $CellContext`s[1, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "2"}]],
          Subscripted[
           $CellContext`s[0, 2]],
          Editable->False], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"1", ",", "3"}]],
             Subscripted[
              $CellContext`s[1, 3]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "1"}]],
                Subscripted[
                 $CellContext`s[2, 1]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "-", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"1", ",", "1"}]],
             Subscripted[
              $CellContext`s[1, 1]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                InterpretationBox[
                 SubscriptBox["s", 
                  RowBox[{"2", ",", "3"}]],
                 Subscripted[
                  $CellContext`s[2, 3]],
                 Editable->False]}], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "3"}]],
                Subscripted[
                 $CellContext`s[3, 3]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"1", ",", "0"}]],
             Subscripted[
              $CellContext`s[1, 0]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "3"}]],
                Subscripted[
                 $CellContext`s[2, 3]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}], "-", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "1"}]],
                Subscripted[
                 $CellContext`s[2, 1]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "3"}]],
                Subscripted[
                 $CellContext`s[3, 3]],
                Editable->False]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
    RowBox[{
     InterpretationBox[
      SubscriptBox["a", "2"],
      Subscripted[
       $CellContext`a[2]],
      Editable->False], "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "1"],
               Subscripted[
                $CellContext`b[1]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "3"}]],
          Subscripted[
           $CellContext`s[0, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "0"}]],
          Subscripted[
           $CellContext`s[3, 0]],
          Editable->False]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "1"],
               Subscripted[
                $CellContext`b[1]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "2"}]],
          Subscripted[
           $CellContext`s[0, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "0"}]],
          Subscripted[
           $CellContext`s[3, 0]],
          Editable->False]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "0"],
               Subscripted[
                $CellContext`b[0]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "3"}]],
          Subscripted[
           $CellContext`s[0, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "1"}]],
          Subscripted[
           $CellContext`s[3, 1]],
          Editable->False]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "0"],
               Subscripted[
                $CellContext`b[0]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "2"}]],
          Subscripted[
           $CellContext`s[0, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "1"}]],
          Subscripted[
           $CellContext`s[3, 1]],
          Editable->False]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "1"],
               Subscripted[
                $CellContext`b[1]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "3"}]],
          Subscripted[
           $CellContext`s[0, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "0"}]],
          Subscripted[
           $CellContext`s[1, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "0"],
               Subscripted[
                $CellContext`b[0]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "3"}]],
          Subscripted[
           $CellContext`s[0, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "1"}]],
          Subscripted[
           $CellContext`s[1, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "1"],
               Subscripted[
                $CellContext`b[1]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "0"],
               Subscripted[
                $CellContext`b[0]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "3"],
               Subscripted[
                $CellContext`b[3]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"0", ",", "2"}]],
             Subscripted[
              $CellContext`s[0, 2]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"1", ",", "1"}]],
                Subscripted[
                 $CellContext`s[1, 1]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "-", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"1", ",", "0"}]],
                Subscripted[
                 $CellContext`s[1, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"0", ",", "1"}]],
             Subscripted[
              $CellContext`s[0, 1]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                InterpretationBox[
                 SubscriptBox["s", 
                  RowBox[{"1", ",", "2"}]],
                 Subscripted[
                  $CellContext`s[1, 2]],
                 Editable->False]}], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"1", ",", "0"}]],
                Subscripted[
                 $CellContext`s[1, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "2"}]],
                Subscripted[
                 $CellContext`s[3, 2]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"0", ",", "0"}]],
             Subscripted[
              $CellContext`s[0, 0]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"1", ",", "2"}]],
                Subscripted[
                 $CellContext`s[1, 2]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}], "-", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"1", ",", "1"}]],
                Subscripted[
                 $CellContext`s[1, 1]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "2"}]],
                Subscripted[
                 $CellContext`s[3, 2]],
                Editable->False]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "1"],
               Subscripted[
                $CellContext`b[1]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "2"}]],
          Subscripted[
           $CellContext`s[0, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "0"}]],
          Subscripted[
           $CellContext`s[1, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "0"],
               Subscripted[
                $CellContext`b[0]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "2"}]],
          Subscripted[
           $CellContext`s[0, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "1"}]],
          Subscripted[
           $CellContext`s[1, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "1"],
               Subscripted[
                $CellContext`b[1]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "0"],
               Subscripted[
                $CellContext`b[0]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "2"],
               Subscripted[
                $CellContext`b[2]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"0", ",", "3"}]],
             Subscripted[
              $CellContext`s[0, 3]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                InterpretationBox[
                 SubscriptBox["s", 
                  RowBox[{"1", ",", "1"}]],
                 Subscripted[
                  $CellContext`s[1, 1]],
                 Editable->False]}], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"1", ",", "0"}]],
                Subscripted[
                 $CellContext`s[1, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"0", ",", "1"}]],
             Subscripted[
              $CellContext`s[0, 1]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"1", ",", "3"}]],
                Subscripted[
                 $CellContext`s[1, 3]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "-", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"1", ",", "0"}]],
                Subscripted[
                 $CellContext`s[1, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "3"}]],
                Subscripted[
                 $CellContext`s[3, 3]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"0", ",", "0"}]],
             Subscripted[
              $CellContext`s[0, 0]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                InterpretationBox[
                 SubscriptBox["s", 
                  RowBox[{"1", ",", "3"}]],
                 Subscripted[
                  $CellContext`s[1, 3]],
                 Editable->False]}], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"1", ",", "1"}]],
                Subscripted[
                 $CellContext`s[1, 1]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "3"}]],
                Subscripted[
                 $CellContext`s[3, 3]],
                Editable->False]}]}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "0"}]],
          Subscripted[
           $CellContext`s[3, 0]],
          Editable->False]}], "-", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "0"}]],
          Subscripted[
           $CellContext`s[3, 0]],
          Editable->False]}], "-", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "1"}]],
          Subscripted[
           $CellContext`s[3, 1]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "1"}]],
          Subscripted[
           $CellContext`s[3, 1]],
          Editable->False]}], "-", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "0"}]],
          Subscripted[
           $CellContext`s[2, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "1"}]],
          Subscripted[
           $CellContext`s[2, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "0"}]],
          Subscripted[
           $CellContext`s[1, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "-", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "1"}]],
          Subscripted[
           $CellContext`s[1, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "3"}]],
          Subscripted[
           $CellContext`s[0, 3]],
          Editable->False], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"1", ",", "2"}]],
             Subscripted[
              $CellContext`s[1, 2]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "1"}]],
                Subscripted[
                 $CellContext`s[2, 1]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "-", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"1", ",", "1"}]],
             Subscripted[
              $CellContext`s[1, 1]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                InterpretationBox[
                 SubscriptBox["s", 
                  RowBox[{"2", ",", "2"}]],
                 Subscripted[
                  $CellContext`s[2, 2]],
                 Editable->False]}], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "2"}]],
                Subscripted[
                 $CellContext`s[3, 2]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"1", ",", "0"}]],
             Subscripted[
              $CellContext`s[1, 0]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "2"}]],
                Subscripted[
                 $CellContext`s[2, 2]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}], "-", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "1"}]],
                Subscripted[
                 $CellContext`s[2, 1]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "2"}]],
                Subscripted[
                 $CellContext`s[3, 2]],
                Editable->False]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "0"}]],
          Subscripted[
           $CellContext`s[2, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "-", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "1"}]],
          Subscripted[
           $CellContext`s[2, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "-", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "0"}]],
          Subscripted[
           $CellContext`s[1, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "1"}]],
          Subscripted[
           $CellContext`s[1, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "2"}]],
          Subscripted[
           $CellContext`s[0, 2]],
          Editable->False], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"1", ",", "3"}]],
             Subscripted[
              $CellContext`s[1, 3]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                InterpretationBox[
                 SubscriptBox["s", 
                  RowBox[{"2", ",", "1"}]],
                 Subscripted[
                  $CellContext`s[2, 1]],
                 Editable->False]}], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"1", ",", "1"}]],
             Subscripted[
              $CellContext`s[1, 1]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "3"}]],
                Subscripted[
                 $CellContext`s[2, 3]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "-", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "3"}]],
                Subscripted[
                 $CellContext`s[3, 3]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"1", ",", "0"}]],
             Subscripted[
              $CellContext`s[1, 0]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                InterpretationBox[
                 SubscriptBox["s", 
                  RowBox[{"2", ",", "3"}]],
                 Subscripted[
                  $CellContext`s[2, 3]],
                 Editable->False]}], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "1"}]],
                Subscripted[
                 $CellContext`s[2, 1]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "3"}]],
                Subscripted[
                 $CellContext`s[3, 3]],
                Editable->False]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
    RowBox[{
     InterpretationBox[
      SubscriptBox["a", "3"],
      Subscripted[
       $CellContext`a[3]],
      Editable->False], "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "1"],
               Subscripted[
                $CellContext`b[1]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "3"}]],
          Subscripted[
           $CellContext`s[0, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "0"}]],
          Subscripted[
           $CellContext`s[2, 0]],
          Editable->False]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "1"],
               Subscripted[
                $CellContext`b[1]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "2"}]],
          Subscripted[
           $CellContext`s[0, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "0"}]],
          Subscripted[
           $CellContext`s[2, 0]],
          Editable->False]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "0"],
               Subscripted[
                $CellContext`b[0]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "3"}]],
          Subscripted[
           $CellContext`s[0, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "1"}]],
          Subscripted[
           $CellContext`s[2, 1]],
          Editable->False]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "0"],
               Subscripted[
                $CellContext`b[0]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "2"}]],
          Subscripted[
           $CellContext`s[0, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "1"}]],
          Subscripted[
           $CellContext`s[2, 1]],
          Editable->False]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "1"],
               Subscripted[
                $CellContext`b[1]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "3"}]],
          Subscripted[
           $CellContext`s[0, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "0"}]],
          Subscripted[
           $CellContext`s[1, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "0"],
               Subscripted[
                $CellContext`b[0]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "3"}]],
          Subscripted[
           $CellContext`s[0, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "1"}]],
          Subscripted[
           $CellContext`s[1, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "1"],
               Subscripted[
                $CellContext`b[1]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "0"],
               Subscripted[
                $CellContext`b[0]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "3"],
               Subscripted[
                $CellContext`b[3]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"0", ",", "2"}]],
             Subscripted[
              $CellContext`s[0, 2]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"1", ",", "1"}]],
                Subscripted[
                 $CellContext`s[1, 1]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False]}], "-", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"1", ",", "0"}]],
                Subscripted[
                 $CellContext`s[1, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "1"}]],
                Subscripted[
                 $CellContext`s[2, 1]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"0", ",", "1"}]],
             Subscripted[
              $CellContext`s[0, 1]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                InterpretationBox[
                 SubscriptBox["s", 
                  RowBox[{"1", ",", "2"}]],
                 Subscripted[
                  $CellContext`s[1, 2]],
                 Editable->False]}], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"1", ",", "0"}]],
                Subscripted[
                 $CellContext`s[1, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "2"}]],
                Subscripted[
                 $CellContext`s[2, 2]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"0", ",", "0"}]],
             Subscripted[
              $CellContext`s[0, 0]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"1", ",", "2"}]],
                Subscripted[
                 $CellContext`s[1, 2]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "1"}]],
                Subscripted[
                 $CellContext`s[2, 1]],
                Editable->False]}], "-", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"1", ",", "1"}]],
                Subscripted[
                 $CellContext`s[1, 1]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "2"}]],
                Subscripted[
                 $CellContext`s[2, 2]],
                Editable->False]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "1"],
               Subscripted[
                $CellContext`b[1]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "2"}]],
          Subscripted[
           $CellContext`s[0, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "0"}]],
          Subscripted[
           $CellContext`s[1, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "0"],
               Subscripted[
                $CellContext`b[0]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "2"}]],
          Subscripted[
           $CellContext`s[0, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "1"}]],
          Subscripted[
           $CellContext`s[1, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "1"],
               Subscripted[
                $CellContext`b[1]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "0"],
               Subscripted[
                $CellContext`b[0]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{"-", "1"}], "1"], 
           RowBox[{
            RowBox[{
             RowBox[{"f", "[", "x", "]"}], " ", 
             RowBox[{
              InterpretationBox[
               SubscriptBox["b", "2"],
               Subscripted[
                $CellContext`b[2]],
               Editable->False], "[", "x", "]"}]}], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"0", ",", "3"}]],
             Subscripted[
              $CellContext`s[0, 3]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                InterpretationBox[
                 SubscriptBox["s", 
                  RowBox[{"1", ",", "1"}]],
                 Subscripted[
                  $CellContext`s[1, 1]],
                 Editable->False]}], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"1", ",", "0"}]],
                Subscripted[
                 $CellContext`s[1, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "1"}]],
                Subscripted[
                 $CellContext`s[2, 1]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"0", ",", "1"}]],
             Subscripted[
              $CellContext`s[0, 1]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"1", ",", "3"}]],
                Subscripted[
                 $CellContext`s[1, 3]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False]}], "-", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"1", ",", "0"}]],
                Subscripted[
                 $CellContext`s[1, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "3"}]],
                Subscripted[
                 $CellContext`s[2, 3]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"0", ",", "0"}]],
             Subscripted[
              $CellContext`s[0, 0]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                InterpretationBox[
                 SubscriptBox["s", 
                  RowBox[{"1", ",", "3"}]],
                 Subscripted[
                  $CellContext`s[1, 3]],
                 Editable->False]}], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "1"}]],
                Subscripted[
                 $CellContext`s[2, 1]],
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"1", ",", "1"}]],
                Subscripted[
                 $CellContext`s[1, 1]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "3"}]],
                Subscripted[
                 $CellContext`s[2, 3]],
                Editable->False]}]}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          InterpretationBox[
           SubscriptBox["s", 
            RowBox[{"0", ",", "1"}]],
           Subscripted[
            $CellContext`s[0, 1]],
           Editable->False]}], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "0"}]],
          Subscripted[
           $CellContext`s[3, 0]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "0"}]],
          Subscripted[
           $CellContext`s[3, 0]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "1"}]],
          Subscripted[
           $CellContext`s[3, 1]],
          Editable->False]}], "-", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "1"}]],
          Subscripted[
           $CellContext`s[3, 1]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "0"}]],
          Subscripted[
           $CellContext`s[2, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "-", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "3"}]],
          Subscripted[
           $CellContext`s[1, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "1"}]],
          Subscripted[
           $CellContext`s[2, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "-", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "0"}]],
          Subscripted[
           $CellContext`s[1, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "1"}]],
          Subscripted[
           $CellContext`s[1, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "3"}]],
          Subscripted[
           $CellContext`s[2, 3]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "2"}]],
          Subscripted[
           $CellContext`s[3, 2]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "3"}]],
          Subscripted[
           $CellContext`s[0, 3]],
          Editable->False], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"1", ",", "2"}]],
             Subscripted[
              $CellContext`s[1, 2]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                InterpretationBox[
                 SubscriptBox["s", 
                  RowBox[{"2", ",", "1"}]],
                 Subscripted[
                  $CellContext`s[2, 1]],
                 Editable->False]}], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"1", ",", "1"}]],
             Subscripted[
              $CellContext`s[1, 1]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "2"}]],
                Subscripted[
                 $CellContext`s[2, 2]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "-", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "2"}]],
                Subscripted[
                 $CellContext`s[3, 2]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"1", ",", "0"}]],
             Subscripted[
              $CellContext`s[1, 0]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                InterpretationBox[
                 SubscriptBox["s", 
                  RowBox[{"2", ",", "2"}]],
                 Subscripted[
                  $CellContext`s[2, 2]],
                 Editable->False]}], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "1"}]],
                Subscripted[
                 $CellContext`s[2, 1]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "2"}]],
                Subscripted[
                 $CellContext`s[3, 2]],
                Editable->False]}]}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "0"}]],
          Subscripted[
           $CellContext`s[2, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "2"}]],
          Subscripted[
           $CellContext`s[1, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "1"}]],
          Subscripted[
           $CellContext`s[2, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "1"}]],
          Subscripted[
           $CellContext`s[0, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "0"}]],
          Subscripted[
           $CellContext`s[1, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "-", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "0"}]],
          Subscripted[
           $CellContext`s[0, 0]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"1", ",", "1"}]],
          Subscripted[
           $CellContext`s[1, 1]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"2", ",", "2"}]],
          Subscripted[
           $CellContext`s[2, 2]],
          Editable->False], " ", 
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"3", ",", "3"}]],
          Subscripted[
           $CellContext`s[3, 3]],
          Editable->False]}], "+", 
        RowBox[{
         InterpretationBox[
          SubscriptBox["s", 
           RowBox[{"0", ",", "2"}]],
          Subscripted[
           $CellContext`s[0, 2]],
          Editable->False], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"1", ",", "3"}]],
             Subscripted[
              $CellContext`s[1, 3]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "1"}]],
                Subscripted[
                 $CellContext`s[2, 1]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "-", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"1", ",", "1"}]],
             Subscripted[
              $CellContext`s[1, 1]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                InterpretationBox[
                 SubscriptBox["s", 
                  RowBox[{"2", ",", "3"}]],
                 Subscripted[
                  $CellContext`s[2, 3]],
                 Editable->False]}], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "0"}]],
                Subscripted[
                 $CellContext`s[3, 0]],
                Editable->False]}], "+", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "0"}]],
                Subscripted[
                 $CellContext`s[2, 0]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "3"}]],
                Subscripted[
                 $CellContext`s[3, 3]],
                Editable->False]}]}], ")"}]}], "+", 
           RowBox[{
            InterpretationBox[
             SubscriptBox["s", 
              RowBox[{"1", ",", "0"}]],
             Subscripted[
              $CellContext`s[1, 0]],
             Editable->False], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "3"}]],
                Subscripted[
                 $CellContext`s[2, 3]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "1"}]],
                Subscripted[
                 $CellContext`s[3, 1]],
                Editable->False]}], "-", 
              RowBox[{
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"2", ",", "1"}]],
                Subscripted[
                 $CellContext`s[2, 1]],
                Editable->False], " ", 
               InterpretationBox[
                SubscriptBox["s", 
                 RowBox[{"3", ",", "3"}]],
                Subscripted[
                 $CellContext`s[3, 3]],
                Editable->False]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{3.4461918014217997`*^9, 3.4772346828570004`*^9, 
  3.635064935194254*^9, 3.635065002409422*^9}]
}, Open  ]],

Cell[TextData[{
 "Suppose, though, we had been able to arrange for the functions ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "[", "i", "]"}], TraditionalForm]]],
 "\[CloseCurlyQuote]s to be orthogonal, so that the ",
 StyleBox["s",
  FontSlant->"Italic"],
 " matrix was a diagonal matrix the above expression reduces dramatically in \
complexity"
}], "Text",
 CellChangeTimes->{{3.6350645330915403`*^9, 3.635064560020811*^9}, {
  3.63506460727203*^9, 3.635064710000052*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"seq", " ", "//.", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"i_", ",", "j_"}], "]"}], "/;", 
        RowBox[{"i", "\[NotEqual]", "j"}]}], "\[Rule]", "0"}]}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"a", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "maxpow"}], "}"}]}], "]"}]}], "]"}], "//",
    "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.6350653064164343`*^9, 3.6350653260879383`*^9}, 
   3.635065358204729*^9, {3.635065389382948*^9, 3.635065390752306*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     InterpretationBox[
      SubscriptBox["a", "0"],
      Subscripted[
       $CellContext`a[0]],
      Editable->False], "\[Rule]", 
     FractionBox[
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "1"}], "1"], 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "x", "]"}], " ", 
         RowBox[{
          InterpretationBox[
           SubscriptBox["b", "0"],
           Subscripted[
            $CellContext`b[0]],
           Editable->False], "[", "x", "]"}]}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}], 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"0", ",", "0"}]],
       Subscripted[
        $CellContext`s[0, 0]],
       Editable->False]]}], ",", 
    RowBox[{
     InterpretationBox[
      SubscriptBox["a", "1"],
      Subscripted[
       $CellContext`a[1]],
      Editable->False], "\[Rule]", 
     FractionBox[
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "1"}], "1"], 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "x", "]"}], " ", 
         RowBox[{
          InterpretationBox[
           SubscriptBox["b", "1"],
           Subscripted[
            $CellContext`b[1]],
           Editable->False], "[", "x", "]"}]}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}], 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"1", ",", "1"}]],
       Subscripted[
        $CellContext`s[1, 1]],
       Editable->False]]}], ",", 
    RowBox[{
     InterpretationBox[
      SubscriptBox["a", "2"],
      Subscripted[
       $CellContext`a[2]],
      Editable->False], "\[Rule]", 
     FractionBox[
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "1"}], "1"], 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "x", "]"}], " ", 
         RowBox[{
          InterpretationBox[
           SubscriptBox["b", "2"],
           Subscripted[
            $CellContext`b[2]],
           Editable->False], "[", "x", "]"}]}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}], 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"2", ",", "2"}]],
       Subscripted[
        $CellContext`s[2, 2]],
       Editable->False]]}], ",", 
    RowBox[{
     InterpretationBox[
      SubscriptBox["a", "3"],
      Subscripted[
       $CellContext`a[3]],
      Editable->False], "\[Rule]", 
     FractionBox[
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "1"}], "1"], 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "x", "]"}], " ", 
         RowBox[{
          InterpretationBox[
           SubscriptBox["b", "3"],
           Subscripted[
            $CellContext`b[3]],
           Editable->False], "[", "x", "]"}]}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}], 
      InterpretationBox[
       SubscriptBox["s", 
        RowBox[{"3", ",", "3"}]],
       Subscripted[
        $CellContext`s[3, 3]],
       Editable->False]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.635065393881732*^9}]
}, Open  ]],

Cell["\<\
In other words, if our functions are orthogonal, the task of finding the \
expansion coefficients is almost trivial.\
\>", "Text"],

Cell[CellGroupData[{

Cell["Aside: The Hilbert Matrix", "Subsubsection"],

Cell[TextData[{
 "There is a rather more subtle reason why trying to find an expansion in \
powers of ",
 StyleBox["x",
  FontSlant->"Italic"],
 " by this method is difficult. Let us set up the explicit form of the \
solution for the case in which the basis functions are powers of ",
 StyleBox["x",
  FontSlant->"Italic"],
 " defined in the range from 0 to 1. Then the matrix ",
 StyleBox["s",
  FontSlant->"Italic"],
 " has the form"
}], "Text",
 CellChangeTimes->{{3.6350647507516193`*^9, 3.63506476624518*^9}, {
  3.666939714963009*^9, 3.666939715501815*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"spow", "[", 
   RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "1"], 
   RowBox[{
    SuperscriptBox["x", "i"], " ", 
    SuperscriptBox["x", "j"], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spow", "[", 
     RowBox[{"i", ",", "j"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "5"}], "}"}]}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      FractionBox["1", "2"], 
      FractionBox["1", "3"], 
      FractionBox["1", "4"], 
      FractionBox["1", "5"], 
      FractionBox["1", "6"]},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "3"], 
      FractionBox["1", "4"], 
      FractionBox["1", "5"], 
      FractionBox["1", "6"], 
      FractionBox["1", "7"]},
     {
      FractionBox["1", "3"], 
      FractionBox["1", "4"], 
      FractionBox["1", "5"], 
      FractionBox["1", "6"], 
      FractionBox["1", "7"], 
      FractionBox["1", "8"]},
     {
      FractionBox["1", "4"], 
      FractionBox["1", "5"], 
      FractionBox["1", "6"], 
      FractionBox["1", "7"], 
      FractionBox["1", "8"], 
      FractionBox["1", "9"]},
     {
      FractionBox["1", "5"], 
      FractionBox["1", "6"], 
      FractionBox["1", "7"], 
      FractionBox["1", "8"], 
      FractionBox["1", "9"], 
      FractionBox["1", "10"]},
     {
      FractionBox["1", "6"], 
      FractionBox["1", "7"], 
      FractionBox["1", "8"], 
      FractionBox["1", "9"], 
      FractionBox["1", "10"], 
      FractionBox["1", "11"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4461918024388*^9, 3.477234683974*^9}]
}, Open  ]],

Cell[TextData[{
 "This particular matrix is called the ",
 StyleBox["Hilbert matrix",
  FontColor->RGBColor[1, 0, 0]],
 ", and is ",
 StyleBox["numerically",
  FontColor->RGBColor[1, 0, 0]],
 " very hard to handle. We can show this by finding the inverse of the \
matrix, for various sizes of matrix, using Mathematica's exact arithmetic and \
using floating-point (Real) numbers. We calculate the maximum relative error \
in the matrix elements of the inverse."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hm", "[", "n_", "]"}], ":=", 
  RowBox[{"1", "/", 
   RowBox[{"Outer", "[", 
    RowBox[{"Plus", ",", 
     RowBox[{
      RowBox[{"Range", "[", "n", "]"}], "-", "1"}], ",", 
     RowBox[{"Range", "[", "n", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hm", "[", "4", "]"}], "//", "MatrixForm"}]}], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      FractionBox["1", "2"], 
      FractionBox["1", "3"], 
      FractionBox["1", "4"]},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "3"], 
      FractionBox["1", "4"], 
      FractionBox["1", "5"]},
     {
      FractionBox["1", "3"], 
      FractionBox["1", "4"], 
      FractionBox["1", "5"], 
      FractionBox["1", "6"]},
     {
      FractionBox["1", "4"], 
      FractionBox["1", "5"], 
      FractionBox["1", "6"], 
      FractionBox["1", "7"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4461918024667997`*^9, 3.47723468427*^9, 
  3.635064818389874*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tt", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{"Flatten", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"Inverse", "[", 
         RowBox[{"hm", "[", "n", "]"}], "]"}], "-", 
        RowBox[{"Inverse", "[", 
         RowBox[{"N", "[", 
          RowBox[{"hm", "[", "n", "]"}], "]"}], "]"}]}], 
       RowBox[{"Inverse", "[", 
        RowBox[{"hm", "[", "n", "]"}], "]"}]], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "14"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"tt", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Inverse", "::", "luc"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Result for \[NoBreak]\\!\\(Inverse\\)\[NoBreak] of badly \
conditioned matrix \[NoBreak]\\!\\({\\(\\({1.`, 0.5`, 0.3333333333333333`, \
0.25`, 0.2`, 0.16666666666666666`, 0.14285714285714285`, 0.125`}\\)\\), \
\\(\\({0.5`, \\(\\(\[LeftSkeleton] 6 \[RightSkeleton]\\)\\), \\(\\(\
\[LeftSkeleton] 19 \[RightSkeleton]\\)\\)}\\)\\), \\(\\(\[LeftSkeleton] 4 \
\[RightSkeleton]\\)\\), \\(\\({\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)}\\)\\), \\(\\({0.125`, \\(\\(\[LeftSkeleton] 6 \
\[RightSkeleton]\\)\\), 0.06666666666666667`}\\)\\)}\\)\[NoBreak] may contain \
significant numerical errors. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/luc\\\", ButtonNote -> \
\\\"Inverse::luc\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.4461918034268*^9, 3.477234684492*^9, 
  3.6350648350171003`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Inverse", "::", "luc"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Result for \[NoBreak]\\!\\(Inverse\\)\[NoBreak] of badly \
conditioned matrix \[NoBreak]\\!\\({\\(\\({1.`, 0.5`, 0.3333333333333333`, \
0.25`, 0.2`, 0.16666666666666666`, 0.14285714285714285`, 0.125`, \
0.1111111111111111`}\\)\\), \\(\\(\[LeftSkeleton] 7 \[RightSkeleton]\\)\\), \
\\(\\({0.1111111111111111`, \\(\\(\[LeftSkeleton] 7 \[RightSkeleton]\\)\\), \
\\(\\(\[LeftSkeleton] 21 \[RightSkeleton]\\)\\)}\\)\\)}\\)\[NoBreak] may \
contain significant numerical errors. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/luc\\\", ButtonNote -> \
\\\"Inverse::luc\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.4461918034268*^9, 3.477234684492*^9, 
  3.6350648350649033`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Inverse", "::", "luc"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Result for \[NoBreak]\\!\\(Inverse\\)\[NoBreak] of badly \
conditioned matrix \[NoBreak]\\!\\({\\(\\({1.`, 0.5`, 0.3333333333333333`, \
0.25`, 0.2`, 0.16666666666666666`, 0.14285714285714285`, 0.125`, \
0.1111111111111111`, 0.1`}\\)\\), \\(\\(\[LeftSkeleton] 9 \[RightSkeleton]\\)\
\\)}\\)\[NoBreak] may contain significant numerical errors. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/luc\\\", \
ButtonNote -> \\\"Inverse::luc\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.4461918034268*^9, 3.477234684492*^9, 
  3.635064835127787*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Inverse \
:: luc\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.4461918034268*^9, 3.477234684492*^9, 
  3.6350648351539593`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", 
   RowBox[{"-", "2.220446049250313`*^-16"}], ",", 
   RowBox[{"-", "3.157967714489334`*^-15"}], ",", "7.389644451905042`*^-14", 
   ",", "1.9705718538413446`*^-13", ",", 
   RowBox[{"-", "3.238811687980261`*^-11"}], ",", 
   RowBox[{"-", "9.740317033660807`*^-10"}], ",", "6.620147343827722`*^-8", 
   ",", "4.699756963340015`*^-6", ",", "0.00013936741429949537`", ",", 
   "0.004166503656481585`", ",", "0.056940033682952584`", ",", 
   "3.673315898090111`", ",", "1.0693583559315345`"}], "}"}]], "Output",
 CellChangeTimes->{3.4461918035698*^9, 3.477234684766*^9, 
  3.635064835193387*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 0.}, {2., -2.220446049250313*^-16}, {
      3., -3.157967714489334*^-15}, {4., 7.389644451905042*^-14}, {5., 
      1.9705718538413446`*^-13}, {6., -3.238811687980261*^-11}, {
      7., -9.740317033660807*^-10}, {8., 6.620147343827722*^-8}, {9., 
      4.699756963340015*^-6}, {10., 0.00013936741429949537`}, {11., 
      0.004166503656481585}, {12., 0.056940033682952584`}, {13., 
      3.673315898090111}, {14., 1.0693583559315345`}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 14.}, {-9.740317033660807*^-10, 3.673315898090111}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.4461918035698*^9, 3.477234684766*^9, 
  3.635064835323205*^9}]
}, Open  ]],

Cell[TextData[{
 "In short, if we try to invert a Hilbert matrix of order ",
 StyleBox["much larger than ten",
  FontColor->RGBColor[1, 0, 0]],
 ", the results we get are no more than numerical noise.  "
}], "Text",
 CellChangeTimes->{{3.635065506665257*^9, 3.6350655085325937`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Orthogonal Functions", "Subsection"],

Cell[TextData[{
 "There are many families of functions with the ",
 StyleBox["orthogonality ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["property wh",
  FontColor->GrayLevel[0]],
 "ich makes the expansion of an arbitrary function easy. The best known are \
the ",
 StyleBox["trigonometric",
  FontColor->RGBColor[1, 0, 0]],
 " functions, which form the basis of ",
 StyleBox["Fourier series",
  FontColor->RGBColor[1, 0, 0]],
 ". We know that these functions form an orthogonal set, as we can check for \
functions defined over the interval ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{"0", ",", "L"}], "]"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6350655990577393`*^9, 3.635065602135831*^9}, {
  3.635065822735683*^9, 3.635065911012986*^9}, {3.635065948341357*^9, 
  3.63506596084769*^9}, {3.635065998731862*^9, 3.635066030591385*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rr", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", " ", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"m", "+", "n"}], ")"}], "\[Pi]"}], "]"}], "\[Rule]", "0"}], 
    ",", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"2", "  ", 
       RowBox[{"(", 
        RowBox[{"m", "-", "n"}], ")"}], " ", "\[Pi]"}], "]"}], "\[Rule]", 
     "0"}], ",", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", "n"}], ")"}], "\[Pi]"}], "]"}], "\[Rule]", "1"}], 
    ",", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"m", "-", "n"}], ")"}], " ", "\[Pi]"}], "]"}], "\[Rule]", 
     "1"}], ",", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"a_Integer", " ", "n", " ", "\[Pi]"}], "]"}], "\[Rule]", "0"}], 
    ",", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"a_Integer", "?", "EvenQ"}], " ", "n", " ", "\[Pi]"}], "]"}], 
     "\[Rule]", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sinsin", "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "L"], 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "m", " ", "\[Pi]", " ", 
       RowBox[{"x", "/", "L"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "n", " ", "\[Pi]", " ", 
       RowBox[{"x", "/", "L"}]}], "]"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"sinsin", "/.", "rr"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"sinsin", ",", 
    RowBox[{"m", "\[Rule]", "n"}]}], "]"}], "/.", 
  "rr"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sincos", "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "L"], 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"2", "m", " ", "\[Pi]", " ", 
       RowBox[{"x", "/", "L"}]}], "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", "n", " ", "\[Pi]", " ", 
       RowBox[{"x", "/", "L"}]}], "]"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"sincos", "/.", "rr"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"sincos", ",", 
    RowBox[{"m", "\[Rule]", "n"}]}], "]"}], "/.", 
  "rr"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coscos", "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "L"], 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", "m", " ", "\[Pi]", " ", 
       RowBox[{"x", "/", "L"}]}], "]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", "n", " ", "\[Pi]", " ", 
       RowBox[{"x", "/", "L"}]}], "]"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"coscos", "/.", "rr"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"coscos", ",", 
    RowBox[{"m", "\[Rule]", "n"}]}], "]"}], "/.", "rr"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"m", "+", "n"}], ")"}], " ", "\[Pi]"}], "]"}], "\[Rule]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"m", "-", "n"}], ")"}], " ", "\[Pi]"}], "]"}], "\[Rule]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"m", "+", "n"}], ")"}], " ", "\[Pi]"}], "]"}], "\[Rule]", 
    "1"}], ",", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"m", "-", "n"}], ")"}], " ", "\[Pi]"}], "]"}], "\[Rule]", 
    "1"}], ",", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"n", " ", "\[Pi]", " ", "a_Integer"}], "]"}], "\[Rule]", "0"}], 
   ",", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"n", " ", "\[Pi]", " ", 
      RowBox[{"a_Integer", "?", "EvenQ"}]}], "]"}], "\[Rule]", "1"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4461918037078*^9, 3.4772346848599997`*^9, 
  3.635065636570207*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.4461918037078*^9, 3.4772346848599997`*^9, 
  3.635065638291465*^9}],

Cell[BoxData[
 FractionBox["L", "2"]], "Output",
 CellChangeTimes->{3.4461918037078*^9, 3.4772346848599997`*^9, 
  3.6350656385711193`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.4461918037078*^9, 3.4772346848599997`*^9, 
  3.635065639897134*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.4461918037078*^9, 3.4772346848599997`*^9, 
  3.635065640077216*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.4461918037078*^9, 3.4772346848599997`*^9, 
  3.635065641116536*^9}],

Cell[BoxData[
 FractionBox["L", "2"]], "Output",
 CellChangeTimes->{3.4461918037078*^9, 3.4772346848599997`*^9, 
  3.635065641286696*^9}]
}, Open  ]],

Cell[TextData[{
 "So expanding a function into a series of trigonometric functions is very \
straightforward. In fact it is done so frequently that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has built-in functions to do it.  "
}], "Text",
 CellChangeTimes->{
  3.634980995883848*^9, {3.635065696474965*^9, 3.6350657182683887`*^9}}],

Cell["\<\
First, let's look at a nice smooth periodic function with period 1.\
\>", "Text",
 CellChangeTimes->{{3.477839662051*^9, 3.477839665137*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"smooth", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Tanh", "[", 
      RowBox[{"5", 
       RowBox[{"(", 
        RowBox[{"t", "-", 
         RowBox[{"Round", "[", "t", "]"}]}], ")"}]}], "]"}], "^", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}], "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
hRR8qcR3QV31/+v/AcB4Z04=
      "]], LineBox[CompressedData["
1:eJwV13k0FF4fBnBrlMKvRIslqaSkbKVUD9qUKCrtSoVkCyMVZSlCZY0ie7Ym
SdYsuUqWkGUYjIkpy9hmUalEy+v965577jmfe8/943ueR/mci4WNkICAgJKg
gMD/V6bdnyuJIyzyFQPO2ip8pP1ze57SzSKea/OXaivz4fxwuD+tgUU0Rm7p
aCjxIVDbdvDZcxaR2+foJ7uUj1WrqGteubJIwWMv25z5fIy/VrIuO8cip4fn
WQRJ81FyJPphxSEWeXr355HTknzsD/AVqdZlkUrGKa/J2Xy4Dlj2tv7qJc3i
J8W+CvBRniocOebXS8yHD2wY5vJgrnT6l2JkDzkb7bLjXhUPfaW+UT1+PSSy
+KA9pZIHN8u0dfGuPeTopZNTh1/zEHl/zHqxeQ85EJEt+6+IB9r0tfoF0j3E
pUJr2/enPFh0xTwWD/1INNxkxo6Fznjupbq1Nz6SNpGIJSRkxpPqbQ5w+kia
qC8C5e/MeLtXigibfiSTi0hVuc+MV5Dv+EfiI0k8HR4efnnGi2jZ9jWYSZbu
CWe7HZzx1Cc6c68xiWWh4ewd+2e8Ojk3F3smufpC87/ZxjPeP6sMjjGTvODM
87iCGc+JKzkkxiTciCqB9nUz3r45n5gB3eSnOVcnQJyHQ8I7/av9GGTn/INz
pQq5aNK/fyrWjUHM38yNbXzBxT5Kx0an8wxiU3wh9CaVC6PBi2Myuxjk9/fr
R0gSF1q19w9fEGcQ+utT5GUwF9J3O1cJh3UR2fBw5s6TXNyrWibY6dNFgm3W
Fmw7woX4b3sm9XIXoahud1E7wMU/x99hFhZd5PaCg6sYRlzwzJR/pSzsIo1O
429j1LhonO/QYBDfSXRihR+5T3BgbFKQLnO/k0Srzd4fyuXg3a0/PsM3OolN
YZheHJuDsokwnfAznWR304BJQBcH1I6CBNbyTnJ83pu96WUcBMX9dbn5tIO0
8yIyv93kYOfySJnyIjr5sUmkanpyDIFWwRYmGXQiljlUspM/hvdxvuHd0XRy
eu+nX56DYzBb4DL3F4VOVs6yLIxvHcMxkf0iG7Xp5HXwkqLurDE4sEUnXrxo
J+8sDzmKHhpDzvI/mkhqJzpXhcU/7RnDuNWES1NoOxlun30+desYKJ19Yxyn
drItaGtez8ox3Kwj/Wrq7cTSF5prfo4iknqt7UlWG8k+Wn77x4NRtLMv/6f9
qI1YmpuXbA4ahZzKxQNv77QRhxSvRee8RhH/2LLhk20bubN3U5619Sgy7mlX
KaxsIxYjAgw59VGUOnPzHqbQyNKVu69sLR/BZy3ryLtxrcQsPt3yUM0wcm49
c7ULaSWOwSLu+kXDuN7+/eCO662kTG75HNGMYSy4EiI1fbyVRCqEqm4NGMau
kvx7lxa3kucNvc83Gg3jKWbd2fuohURKlzYYFQ2h75HlT0n1ZhLAej0gGMiG
15axwhqJZsIeHv7e78qGzEcfys2xJkKN5F5NO83GbqWnX7jUJnLUPjmlUocN
avr0WKNaEznT9sHkwudBuOUlfwpR/UA6tXLjLHQGIdw4+n6WSgPZqzK3oKWy
H5TMevERkQYi8E3hpSK1HwP+1D0N7Hoyslvy84GoflRvvlQdRq0nLWXta0/Z
9ONO5kjlIq16ohE6zlMU74fEreHiNYbvSXy0oaGNcR8WbGGnm52pJeWSLlLT
BZ+gkvXZL+ZxFVENXpNfFdONZXcVgvjXq4iY3kCu5vFuKDofDzU+UUXYutf6
/Jd2Y4lOa9zUoioSe+FmWVsSA/MrK/OtYt4SPc/04xaZXRDsShpcFfGGKItz
gjl5HSBS5ZHO8whZXGZ9oL+GhlK6dtKyxgpSpuk47BJEQ9HjZ89oIRVkt6o8
V2ofDTmqj99tFK8gmhds3SM+tCIR13/8FXpNjm2VYX+gt8DbRe9E2GQpoa4K
VspifIBec4Fybn8RWcu5ZMsJqEG/eJVGcUYRiV9jvI4mX4NQo1b9CvsiImER
kmpcUI3+Qu6RRn4hubtx2ur7wDuExq8KGZ4uIC/DONk5plXot3/0dZlMPllc
OC8kDZUIfZLxT7Uzj6w+NCll85ZAr6dg7vq4PKKRIXhCWowg9GDrqm3L8siN
lyac9dGvsXnTnJPH1V8SjV1GWw5Ul0Jh9mSgSnAOWawUUdBxvRBu3jIpmlI5
5MlVjRci3QWo428oQ/RzssGjMm2NfgHcOuz5J1OyyfeV5/Q8hfNR94R59EEJ
lfjfWjtVnp0LRblJ11RQSZmAu/wR+Vy4h8jcy61+SqRk2WfWyL+AoqtpZWNr
FiGH733bM54NynayWnQ0g4jEXX+zvikL9S+ZRgsuZxCqR2WoXGsmlFZOnlL+
kU7+Hb74LqMrA/USmhHbhNKJ2Zas3QPf06DESP3lseQJKRucZT1unwLKfrLg
dnIqKfCh7FSLSkY9Ya6LXJVK1GusSp77J4GSIXMuRyuF2Kt2tdkej8eDobnR
H6ITiZTt57Yy3xh8kvXszc9IIGnvdfHf2mis3f1ZNa44nlx/P4txiRWFt2mF
pbaMOKIbaiVkbRsByXYlEdPRWGIu+K9BbnM4TgiHmGpPPyJ9YXMdJdVD8cXa
6tM/+Yfk5UFTrk9PMLZG1Kmx18WQhd3MWAP6HQRVark3bo8m51IH/Jo+B2CZ
ktis2LNRxGRXWEfaZn84mrke8HGNJC/MBe/LBPii+AbzkY1/BFmfpaJo0HAD
Ca/OHL1gHEYYDhPySY2e0JHTGd1w6T6xpZW1qM7zQKOH+I0/d++S77WqQfZX
3XC+/aNU/fNgcm5Hvrav5GVMab1MjWm+Q07qvJqQSHJAZESA7vkvAaTP54Hz
Kk87qI0fr1u/4Dbx3gG+d/p5VJppnPyt408Khz6P6605i2PPhXh1lr5Ea1ZS
lIDECfTK5Qiu/eJNHFT0LEadD2Me3VL1nc41snqdglmXwAFsjfy3//RVD3LM
mOfv6bMblw5kuf0ocyXO+hK1CgXbobk4dYPSPwfSpbn9QZeyNkKjvnmZB14g
JTZLJfUjVqBjaUio2NIT5DFjrYnOE2ksUz6xr8tiN5Hd0nwVR4a3Z9N9lK8b
amBsy7ld5seLtk+L3n9eX2IBtuom8wVKgkgW95DIp5/FFHc4vCx7KXaEqlT6
ml1E/bWQ/Qu71MFeQKOY1bpAyrRsQCVDD+/2V8pIJrvj6deIBwGNRogJk+NT
Tnkiok4uZ3HqPtjRnN8zF3nB2j2RUj5iDr2FNU+M6DdxgvInRmnDUYhmS5J2
Yz9c+eFL/61yGs6mW9TFVW8hN0D0VXCfNTp4NrH6ogGQe+BCvR9sA4RHzHLp
D8RgUnhUX6A9sjRfu6e+CcLl+j/LT3c74RpFxmz2zXu4nXFp3O+NO/oWGpRt
PRWKU++iCvodriCdqSujpxCONxXeVL7BNUjesPZzmI4AMYn/HnzJB29Nf24K
GI3EpZBXg5fOzLxL8T4vkRGFrfGLnJ4o3gKLvDpJK46GkZjYXoGPgXgQbjaf
kxGDOYvVPH8zgmBsPVAnGvMQkWqek6WcEOQKSW/cTIlF7PQKh5UHw+C/y046
eUMC0h1rC8UCH6CRIX9PWCcRMtr5c+q/RWOhM03MblMS9KrkHfY7PcThhsR/
sknJgGtB3J5bcWB/m/2zJz0VbDUXD6/4ZMypGCgIU32CZyTcxMwvBeuDiJvh
0ydIWfyoJ9chFVflPXhp2WnoN3tEmTyYhjm7Pg065GfAM/timMmpLGhIlT1R
0M3EvyiB/445PsUhRrR1c1EmgrU/Loz2oyLeyaRHqzQL6WY5S53KsrE+pqj9
VyUVu+S9GOGFuTg8dK/qTlMObjeJF+h1FuLqSzu/zQdf4NnRKfWwgCIkeBlh
rPUFDF4bCc3bWIxvYt6nMy/lYr91/7yzCa9m/lWTMcf5JdolP7wNvl2G5nfx
La2UfBiU/jo23VGJiYXu5Ix/McwukmzhuFocE6tP6K8ohsbRR2lbRepQNrnM
2266GD6VTnETznXwZzbpuVBegffgvVr7rveQSlmTd9O2BIeHfb5PTNZjjXpf
WsK+mZFtcVaD5dqEs0bmIcz5BHacTbYyjTTYFj+kPjOvwiqtauHNEt0IWW1H
u+JWBaPQ2iDtvd3Iid04ZRhVBTn2Cov/7nTjpxd9b1d7FRxoMp9dhZgIMlgw
InLsHXiZaiczfjLx7H2oqpVVNUar90wNd/dgnBmQJu1QC46LSrkS+QQZ0yON
zLu1UB5gZlsyP0GvYsVERnYtZm22qrn88xP8kqt2bOPVgqEtt9N0/WfMtxHs
t3etw9X0hzFJCZ+hw/NWrvJ8j4O5vYOulD5cE6AketxugO4cNXjOHkCIccKt
zLQGyG8qmdRVHkBceM1FxrsG5MvXnWvTG0DpssXa20Qb8SiQLU61G8CUQUWt
SGAjvBafUK+uGoC3n/iXqDsfMDW21OeZxyBuCiXsyAtpxi3nt55bKtkI3Vez
eoDajO0Le2/WtrGRFMmfJ9vQjIuhLFftITbO/qfMKRdtgTGHfS5r3hB8U9yL
lu1uQdvotvvix4dQ+WaRyXBNC6wd/RQLR4ZgJHSe4lnXime/p+KufBuG1Wza
Kq/OVnAv72UIC43AS9qQcZPdijCFMT1P6REUKCptDxSZySFCLfXS60awUp8p
Fm1Ag+xrusl8mxGIUw49zntFg8HDoV92LSNY4fXWtKiWhnGWTM6FnhEY+msK
lHbQUBshdHjv6Aiuh0vZvJmgQdHQm1cvPIqx7AaNlg1t+MQ5VZinO4qmwR1v
uVlt+Jh4Lmx99ChGOXmUL8VtoCZ8rStJHoXYhLLq95o20K869K/LHoWBkMC9
3wNtSHf5oNf+dhQvFcuPSCi3Q/jltQ55/igeHNUZWR3bjvxf7Y4lO8Zw/P0K
6QvBdCzxWZ403TOT1xsHrbJj6bhxakl15dAYRFoynk88pSOdTvG9/GUMuR2r
TQLq6Vi6fI1FuAgHswbUAzMkOrD0jMhDuhoHBX91fg/f78D2jbbDDy9zMEfo
xz7NxA6cu5tkvOgaB2dEi2Ov5XSgj8+KC/CbOZ87k4CaOyApmJOpGsmB9eJt
bmulO3H+7I7j9/M4kNTZNewU2QkHNe19f/kcXNg0a1NRaicUirY8svrJQemW
2oC/eZ1IaTSUzPnLgY3hXpWwtk6cBu3XknlclJuZWuXKdOFsdcS1DTN9yt7+
SPvXmC4k36jrtLXi4l2iTaXnYwYWFDpv6XnNhYaoYDOVysAWjQ1bhau4eOQQ
39NTwgB1jv4XhTouHPXapnZ0MVDpvbxFk8aFDM1AV3phN87oT9Hpg1ycF5Wn
ZoV2w5S2SHO5BA+NDsWvmAndaE/Srk6Q4mEjzaJW8nk3atLnXZSS4WFOUvAA
paEbeu6/1tLlecjT+6loKM4E/1RHH2emrwo50qIYfkxoVqeaWJnx4EhzSp0b
wcQfWo3iTgseOvRmv0QyE5u1OvSULXmgiho0pVcw4R266O6b0zN9N+m5uNs0
E8ldkanxjjyk0IJuzPH4CIen4qKNQTwYbIad/sUeuNr/MLldxpvJ83falT17
cFc2w86mggeBnmZD8cAe6No0LTF4w0Ol71l5+pMeZFpJ3eyr4QF1fq3OrB5E
me3O/djKw/aj7/RTLXuhNdmkkcfmQfHp3KdBNr2wnTo2rjXCw9+pw7IulF6I
MbrlcsZ4qEgcHNeP7IW7seD7qHEetrFnZdA/9KJtm6GA4hQPWz32Ss/excKm
hXqMTXP5kK+NuME/xILfUMLlC5J8/F7UPUo/x0IN3WrFPWk+yssvVaf6siBk
dFXigwwf8ZL5WsFhM3tezyG2LB/eZ6eTXBJZUDhZ0je1iA99kXvXt5azUBot
+GehAh9LLNuHljewkMBtjZdX4mMqU/7I7G4W7p1nPVNU5qP714W3/GEWXnWr
6sirzNwX7//w0DgL4bL+kFvBx/8AqcsxDw==
      "]], LineBox[CompressedData["
1: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
eUpokTj2PIGcmhIi/oqr+HJtEv8Djo/uvw==
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1.5, 1.5}, {0., 0.9734077572538115}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.4461918236127996`*^9, 3.477234707039*^9, 
  3.477839288212*^9, 3.6350657547555017`*^9}]
}, Open  ]],

Cell[TextData[{
 "The function ",
 StyleBox["FourierTrigSeries",
  FontFamily->"Courier New"],
 " assumes that the function being expanded is periodic, and we want the \
interval between -1/2 and 1/2 to be repeated, so it is just the function ",
 StyleBox["Thanh[5t]^2 ",
  FontFamily->"Courier New"],
 "that we need to provide to ",
 StyleBox["FourierTrigSeries",
  FontFamily->"Courier New"],
 ". We do need to alter the default period, though, using the option ",
 StyleBox["FourierParameters",
  FontFamily->"Courier"],
 ". Start by forming the first three terms."
}], "Text",
 CellChangeTimes->{{3.477839687263*^9, 3.47783972459*^9}, {
   3.635066490235099*^9, 3.635066543592396*^9}, 3.6669394692044373`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"smexp", "[", "n_", "]"}], ":=", 
  RowBox[{"FourierTrigSeries", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Tanh", "[", 
      RowBox[{"5", "t"}], "]"}], "^", "2"}], ",", "t", ",", "n", ",", 
    RowBox[{"FourierParameters", "->", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sm3", "=", 
   RowBox[{"smexp", "[", "3", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4461935496008*^9, 3.4461935513408003`*^9}, 
   3.4461935931977997`*^9, {3.4778392334040003`*^9, 3.477839238118*^9}, {
   3.477839730079*^9, 3.4778397802139997`*^9}, {3.4778400633310003`*^9, 
   3.477840067922*^9}, 3.6350665342799883`*^9}],

Cell[TextData[{
 "The coefficients in the transform are pretty messy,  but at least ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "  is smart enough to simplify the coefficients of the Sin terms to zero (as \
they must be, as this is an even function)."
}], "Text",
 CellChangeTimes->{{3.4461933358908*^9, 3.4461933380098*^9}, {
   3.4461934539068003`*^9, 3.4461934762108*^9}, {3.477839801717*^9, 
   3.4778398039440002`*^9}, 3.666939926356389*^9}],

Cell[TextData[{
 "Still, even with just ",
 StyleBox["three ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["terms i",
  FontColor->GrayLevel[0]],
 "n the expansion we get a good representation of the original function."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"smooth", ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", "sm3", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "1.5`"}], ",", "1.5`"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4461935095928*^9, 3.4461935175118*^9}, {
  3.4461935633908*^9, 3.4461935784477997`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
hRR8qcR3QV31/+v/AcB4Z04=
       "]], LineBox[CompressedData["
1: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
6sirzNwX7//w0DgL4bL+kFvBx/8AqcsxDw==
       "]], LineBox[CompressedData["
1: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
eUpokTj2PIGcmhIi/oqr+HJtEv8Djo/uvw==
       "]]}, {}}, {{}, {}, {}}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
//u/M/z//53/B8THGTI=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1.5, 1.5}, {0., 0.9734077572538115}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.4461920554788*^9, 3.4461935490118*^9, 3.4461936723398*^9,
   3.47723476509*^9, 3.477839273933*^9, 3.477839320359*^9, 3.477840205263*^9, 
  3.6350662868709106`*^9}]
}, Open  ]],

Cell[TextData[{
 "Functions with ",
 StyleBox["discontinuities",
  FontColor->RGBColor[1, 0, 0]],
 " are not as easy. We will try to form the Fourier series that describes a ",
 StyleBox["saw-tooth",
  FontColor->RGBColor[1, 0, 0]],
 " function."
}], "Text",
 CellChangeTimes->{{3.635066619564123*^9, 3.635066628262249*^9}, {
  3.666940005365138*^9, 3.666940007114603*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sawtooth", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"t", "-", 
     RowBox[{"Round", "[", "t", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "1.5`"}], ",", "1.5`"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.477839928243*^9, 3.477839940421*^9}, 
   3.4778402509300003`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwBEQPu/CFib1JlAgAAADAAAAACAAAAY6+Q7///97+MvUK+///fv8CPHSY7
/Pe/AD92mOzw378ccKpcdvj3v3DAqXLZ4d+/1jDEyezw979YwxAns8Pfv0iy
96PZ4fe/IMnej2aH378utV5Ys8P3v7jUemHNDt+/+LoswWaH97/g67IEmx3e
v4zGyJLNDve/MBojSzY73L8gGuFwUQn2v4BohMNFJdi/cDxTUSkV9b/A8UxF
pVTUv2Cn9kbLJfS/gJ3aGy2X0L+8Tnp3IyLzv+B10rsbEcm/08RXqs8v8r+Y
Jr5SfX7Bv1V3FRgyKfG/UHVXgSGTsr94cgSbXifwvwA8OYJNr4O/rniaQL5t
7r8gdVj2GySpP0KF7MArZOy/8NWb+KHevD9OL/JFQX3qv8hCN+j6CsY/m2pa
9eqf6L+UVZYqVIDNP78egxoBmua/gsL5yv3L0j9acF9Ev7bkv0wfQXeBktY/
yzr84+mq4r9qigc4LKraPzo4JN/gouK/jI+3QT662j+oNUza15riv7CUZ0tQ
yto/hjCc0MWK4r/0nsdedOraP0ImPL2hauK/fLOHhbwq2z+4EXyWWSriv5Dc
B9NMq9s/pOj7SMmp4b+4LghubazcPxPmI0TAoeG/2jO4d3+83D+C40s/t5nh
v/w4aIGRzNw/X96bNaWJ4b9CQ8iUtezcPxrUOyKBaeG/zFeIu/0s3T+Rv3v7
OCnhv96ACAmOrd0/fpb7raio4L8E0wikrq7eP2JiNkkqoeC/PDuTbau93j9H
LnHkq5ngv3KjHTeozN4/EMbmGq+K4L/gczLKoereP6P10Ye1bOC/uhRc8JQm
3z+IwQwjN2Xgv/B85rmRNd8/bI1Hvrhd4L8o5XCDjkTfPzYlvfS7TuC/lLWF
Fohi3z/IVKhhwjDgv3BWrzx7nt8/rSDj/EMp4L+mvjkGeK3fP5LsHZjFIeC/
3CbEz3S83z92uFgzRxrgvxSPTplxy98/W4STzsgS4L9K99hibtrfP0BQzmlK
C+C/gF9jLGvp3z+isT401gfgv7ycgpdT8N8/1HqxSg==
      "]], LineBox[CompressedData["
1:eJxF091PUnEcgHECcdBYY0tbNaahzYu2WnNzo6FBpRdtXQQkrYuWoEQrkkEQ
s+XGYb3ILBvHkBZ0VKLS49hqNc06oUuZGhmB0gQ8MLPS9ELWugF63/L3vXj2
+QseoVov1zAZDIb0b/+kPDaXIpMeWTep/XmR+Ar6fhv9vQmw2bW86AuBjImZ
owN+sKKC3PXcAGZelapeqsHheqcroACPXLUWBKtAwydlKpJNISkvC1/FQFnp
yWwJTiM/vrB20hhoVPp2ewwgfnNVtU0GRvMtbzbzQflcl5vTMQ863td8syeR
ClatLYjFkbVleBE1GEMuVKrw9rsRJOvtylRheQhZ3reAdbnHkKLwM+HjxUHk
7SWec9pJIG11Wn7P3nuSdb8XXxg5ZRtCnh5ykQOyMWQLw0SYr4SQB5mNJstk
BHliaie/yR5DjhOaUYs7jtzD3hAmSfDOOQ9ND4M60Uzu0BxYFJVW8YsTyEa2
gOzrAJm6aGccSyJ10fNengP8IOI+kfSAJFv67kEAlHf7OcY82Btta91onkdK
90m04jM0ckf79VmhBWTQ4QOca+CotUEQuw9KJrFIcxrcf3xc7FWmkCX9vP42
Dfgrd2yL3gQGiM8ZMQ7WfCl8GJsGq82H+dy6NFIw4WhdU4A/tiZWYmqQos4G
vVbQs+lppf0WeLkh360nQHHBjUvVFLhdObtUFgJzjwT13ASYyDa9XlsG/3+O
/AMnRDAo
      "]], LineBox[CompressedData["
1:eJwBUQOu/CFib1JlAgAAADQAAAACAAAAorE+NNYH4D+8nIKXU/Dfv733HoXR
CuA/hhDC9Vzq37+tIMO7RBLgP6a+eYh229+/nUln8rcZ4D/GbDEbkMzfv4xy
CykrIeA/6Brpram93798m69fnijgPwjJoEDDrt+/XO33zIQ34D9IJRBm9pDf
vxyRiKdRVeA/yN3usFxV37+c2Klc65DgP8hOrEYp3t6/qP924QCZ4D+wABI9
/s3ev7UmRGYWoeA/lrJ3M9O93r/OdN5vQbHgP2QWQyB9nd6/ARETg5fR4D/+
3dn50Fzev2ZJfKlDEuE/NG0HrXjb3b8vuk72m5PhP6KLYhPI2Ny/wpvzj0yW
4j98yBjgZtPav3DBib4FeeQ/IH3sgvQN179Ibl93UoTmP3AjQRFb99K/qX2B
K/ds6D9cCfpRI0zOv8j7QLUHTOo/4BD8KuHPxr8RAUDJq1PsP3j3/7WhYr2/
4miL2Kc47j/gcUl3gnWsv+8rC7kbI/A/gPeVhdyNgT/MWp9wGSXxP8Cs9QmX
UbI/7brZJcMV8j9o180uGa7AP6PeM6C2GvM/GPWeAbXVyD+dMzQYVg70P3TO
0GBYOdA/9j8Deyv99D/Y/wzsrfTTP+QP8qJKAPY/kD/IiyoB2D8WEYfIFfL2
P1hEHCJXyNs/jzcjcU329j883ozENdnbPwhevxmF+vY/IHj9ZhTq2z/7qvdq
9AL3P+yr3qvRC9w/4ERoDdMT9z+AE6E1TE/cP6l4SVKQNfc/pOIlSUHW3D88
4AvcCnn3P/CAL3Ar5N0/tQaohEJ99z/UGqASCvXdPy4tRC16gfc/uLQQtegF
3j8henx+6Yn3P4To8fmlJ94/BhTtIMia9z8YULSDIGveP9BHzmWFvPc/QB85
lxXy3j9JbmoOvcD3PyS5qTn0At8/wpQGt/TE9z8IUxrc0hPfP7XhPghkzfc/
1Ib7IJA13z+ae6+qQt73P2juvaoKed8/E6JLU3ri9z9MiC5N6YnfP4zI5/ux
5vc/MCKf78ea3z9+FSBNIe/3P/hVgDSFvN8/9zu89Vjz9z/c7/DWY83fP3Bi
WJ6Q9/c/wIlheULe3z/qiPRGyPv3P6gj0hsh798/Y6+Q7///9z+MvUK+///f
PyZFwek=
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1.5, 1.5}, {-0.4999999387755103, 0.4999999387755103}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.4461920555818*^9, 3.477234765244*^9, {3.477840244612*^9, 
   3.4778402524309998`*^9}, 3.6350666455319977`*^9}]
}, Open  ]],

Cell[TextData[{
 "Again as ",
 StyleBox["FourierTrigSeries",
  FontFamily->"Courier New"],
 " assumes that the function being expanded is periodic, it is just the \
function ",
 StyleBox["f(t)=t",
  FontFamily->"Courier"],
 " that we need to provide to ",
 StyleBox["FourierTrigSeries",
  FontFamily->"Courier New"],
 "."
}], "Text",
 CellChangeTimes->{{3.635066657338729*^9, 3.635066680544788*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sawexp", "[", "n_", "]"}], ":=", 
    RowBox[{"FourierTrigSeries", "[", 
     RowBox[{"t", ",", "t", ",", "n", ",", 
      RowBox[{"FourierParameters", "->", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"sawexp", "[", "3", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.477839947685*^9, 3.477839948512*^9}, {
   3.4778400957019997`*^9, 3.47784010019*^9}, 3.698395367567155*^9, {
   3.698412536041872*^9, 3.6984125556649923`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "\[Pi]", " ", "t"}], "]"}], "\[Pi]"], "-", 
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"4", " ", "\[Pi]", " ", "t"}], "]"}], 
   RowBox[{"2", " ", "\[Pi]"}]], "+", 
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"6", " ", "\[Pi]", " ", "t"}], "]"}], 
   RowBox[{"3", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{3.4461920563538*^9, 3.4772347653529997`*^9, 
  3.477840205491*^9, 3.635066704561022*^9, 3.698412557209571*^9}]
}, Open  ]],

Cell[TextData[{
 "Again ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " spots the symmetry: as t is an odd function, we should not be surprised \
that our expansion contains only odd functions, that is, sine functions. \n\n\
Now we'll see how taking 1, 4, 7 or 10 terms in the series improve our \
approximation to the original function."
}], "Text",
 CellChangeTimes->{{3.477839846299*^9, 3.477839850967*^9}, {
  3.635066967982449*^9, 3.635066968606884*^9}, {3.6983942464923162`*^9, 
  3.698394246572893*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sawtab", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"sawexp", "[", "n", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "10", ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"sawtooth", ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", "sawtab", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "1.5`"}], ",", "1.5`"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"RGBColor", "[", 
          RowBox[{
           RowBox[{"RandomReal", "[", "]"}], ",", 
           RowBox[{"RandomReal", "[", "]"}], ",", 
           RowBox[{"RandomReal", "[", "]"}]}], "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "10", ",", "3"}], "}"}]}], "]"}]}]}], 
    "]"}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwBEQPu/CFib1JlAgAAADAAAAACAAAAY6+Q7///97+MvUK+///fv8CPHSY7
/Pe/AD92mOzw378ccKpcdvj3v3DAqXLZ4d+/1jDEyezw979YwxAns8Pfv0iy
96PZ4fe/IMnej2aH378utV5Ys8P3v7jUemHNDt+/+LoswWaH97/g67IEmx3e
v4zGyJLNDve/MBojSzY73L8gGuFwUQn2v4BohMNFJdi/cDxTUSkV9b/A8UxF
pVTUv2Cn9kbLJfS/gJ3aGy2X0L+8Tnp3IyLzv+B10rsbEcm/08RXqs8v8r+Y
Jr5SfX7Bv1V3FRgyKfG/UHVXgSGTsr94cgSbXifwvwA8OYJNr4O/rniaQL5t
7r8gdVj2GySpP0KF7MArZOy/8NWb+KHevD9OL/JFQX3qv8hCN+j6CsY/m2pa
9eqf6L+UVZYqVIDNP78egxoBmua/gsL5yv3L0j9acF9Ev7bkv0wfQXeBktY/
yzr84+mq4r9qigc4LKraPzo4JN/gouK/jI+3QT662j+oNUza15riv7CUZ0tQ
yto/hjCc0MWK4r/0nsdedOraP0ImPL2hauK/fLOHhbwq2z+4EXyWWSriv5Dc
B9NMq9s/pOj7SMmp4b+4LghubazcPxPmI0TAoeG/2jO4d3+83D+C40s/t5nh
v/w4aIGRzNw/X96bNaWJ4b9CQ8iUtezcPxrUOyKBaeG/zFeIu/0s3T+Rv3v7
OCnhv96ACAmOrd0/fpb7raio4L8E0wikrq7eP2JiNkkqoeC/PDuTbau93j9H
LnHkq5ngv3KjHTeozN4/EMbmGq+K4L/gczLKoereP6P10Ye1bOC/uhRc8JQm
3z+IwQwjN2Xgv/B85rmRNd8/bI1Hvrhd4L8o5XCDjkTfPzYlvfS7TuC/lLWF
Fohi3z/IVKhhwjDgv3BWrzx7nt8/rSDj/EMp4L+mvjkGeK3fP5LsHZjFIeC/
3CbEz3S83z92uFgzRxrgvxSPTplxy98/W4STzsgS4L9K99hibtrfP0BQzmlK
C+C/gF9jLGvp3z+isT401gfgv7ycgpdT8N8/1HqxSg==
       "]], LineBox[CompressedData["
1:eJxF091PUnEcgHECcdBYY0tbNaahzYu2WnNzo6FBpRdtXQQkrYuWoEQrkkEQ
s+XGYb3ILBvHkBZ0VKLS49hqNc06oUuZGhmB0gQ8MLPS9ELWugF63/L3vXj2
+QseoVov1zAZDIb0b/+kPDaXIpMeWTep/XmR+Ar6fhv9vQmw2bW86AuBjImZ
owN+sKKC3PXcAGZelapeqsHheqcroACPXLUWBKtAwydlKpJNISkvC1/FQFnp
yWwJTiM/vrB20hhoVPp2ewwgfnNVtU0GRvMtbzbzQflcl5vTMQ863td8syeR
ClatLYjFkbVleBE1GEMuVKrw9rsRJOvtylRheQhZ3reAdbnHkKLwM+HjxUHk
7SWec9pJIG11Wn7P3nuSdb8XXxg5ZRtCnh5ykQOyMWQLw0SYr4SQB5mNJstk
BHliaie/yR5DjhOaUYs7jtzD3hAmSfDOOQ9ND4M60Uzu0BxYFJVW8YsTyEa2
gOzrAJm6aGccSyJ10fNengP8IOI+kfSAJFv67kEAlHf7OcY82Btta91onkdK
90m04jM0ckf79VmhBWTQ4QOca+CotUEQuw9KJrFIcxrcf3xc7FWmkCX9vP42
Dfgrd2yL3gQGiM8ZMQ7WfCl8GJsGq82H+dy6NFIw4WhdU4A/tiZWYmqQos4G
vVbQs+lppf0WeLkh360nQHHBjUvVFLhdObtUFgJzjwT13ASYyDa9XlsG/3+O
/AMnRDAo
       "]], LineBox[CompressedData["
1:eJwBUQOu/CFib1JlAgAAADQAAAACAAAAorE+NNYH4D+8nIKXU/Dfv733HoXR
CuA/hhDC9Vzq37+tIMO7RBLgP6a+eYh229+/nUln8rcZ4D/GbDEbkMzfv4xy
CykrIeA/6Brpram93798m69fnijgPwjJoEDDrt+/XO33zIQ34D9IJRBm9pDf
vxyRiKdRVeA/yN3usFxV37+c2Klc65DgP8hOrEYp3t6/qP924QCZ4D+wABI9
/s3ev7UmRGYWoeA/lrJ3M9O93r/OdN5vQbHgP2QWQyB9nd6/ARETg5fR4D/+
3dn50Fzev2ZJfKlDEuE/NG0HrXjb3b8vuk72m5PhP6KLYhPI2Ny/wpvzj0yW
4j98yBjgZtPav3DBib4FeeQ/IH3sgvQN179Ibl93UoTmP3AjQRFb99K/qX2B
K/ds6D9cCfpRI0zOv8j7QLUHTOo/4BD8KuHPxr8RAUDJq1PsP3j3/7WhYr2/
4miL2Kc47j/gcUl3gnWsv+8rC7kbI/A/gPeVhdyNgT/MWp9wGSXxP8Cs9QmX
UbI/7brZJcMV8j9o180uGa7AP6PeM6C2GvM/GPWeAbXVyD+dMzQYVg70P3TO
0GBYOdA/9j8Deyv99D/Y/wzsrfTTP+QP8qJKAPY/kD/IiyoB2D8WEYfIFfL2
P1hEHCJXyNs/jzcjcU329j883ozENdnbPwhevxmF+vY/IHj9ZhTq2z/7qvdq
9AL3P+yr3qvRC9w/4ERoDdMT9z+AE6E1TE/cP6l4SVKQNfc/pOIlSUHW3D88
4AvcCnn3P/CAL3Ar5N0/tQaohEJ99z/UGqASCvXdPy4tRC16gfc/uLQQtegF
3j8henx+6Yn3P4To8fmlJ94/BhTtIMia9z8YULSDIGveP9BHzmWFvPc/QB85
lxXy3j9JbmoOvcD3PyS5qTn0At8/wpQGt/TE9z8IUxrc0hPfP7XhPghkzfc/
1Ib7IJA13z+ae6+qQt73P2juvaoKed8/E6JLU3ri9z9MiC5N6YnfP4zI5/ux
5vc/MCKf78ea3z9+FSBNIe/3P/hVgDSFvN8/9zu89Vjz9z/c7/DWY83fP3Bi
WJ6Q9/c/wIlheULe3z/qiPRGyPv3P6gj0hsh798/Y6+Q7///9z+MvUK+///f
PyZFwek=
       "]]}, {}}, {{}, {}, {}}}, {{}, {}, 
    {RGBColor[0.47682277810214835`, 0.7145523573416768, 0.7113739067585567], 
     AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
/79nhP//nnH//wHmP7/p
      "]]}, 
    {RGBColor[
     0.27304561382758985`, 0.2718517722260989, 0.059783155328901216`], 
     AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
cA==
      "]]}, 
    {RGBColor[
     0.030607865704075365`, 0.8306310839039652, 0.35547349474005063`], 
     AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
T+mS8gPXUSgXtlTV/0hCjpxgqdHTUVRl+29a7pGEl3uLz6s8HsW8zPEaLaMk
6G13bpW8P4pMf/m1QQeTILpZzpL/ziiy+gxV6PxJ6BMcHmPZUPjRL3F2fyJS
lkU41N8YxcSZ4a7ukkQ4chothsUown0PSgfEJ0Ljn6BPmOkoNDZ7r+/zT4TA
cPEGT+NRSDn465c/TkRTl/PXWwaj+FsnILfTIhERTXK7z+uN4she23CmTiJs
q4e/y+uMotQ742S9UiLkiyMURbVGIfHXPnhifyK4s42KeU6O4pDDTM3G7Yko
/yGk2682CudCz/92bEpEcHxJc4XSKHYotHTNrE6EabjLte9Hqf3ZeGbjg2WJ
kH5/ePTd4VG07L0v/Yg7ERN+I4+cD41ieM/xiNYFGrI8IrmvyVDzmX1+4dks
DZ5Oxt6ndo+iRyrV8vg0Defvr1m/f+coaKHydzmnaFA+sLVYatsoljK65rz/
0bBnWNpBfOsoPrKZMXkU3hQjt0d48ygK4960O1J83muqTKENo/iz52TJW0pv
XEzbj2/NKJjmDtdGZ2hoazFUXbx6FG/T/wu7MkdDeci1ifkVozh7wNG6YJ6G
n3p3oiZ5R6GXFJ49Q/UbIfDUYIR7FLmbI/KaORLhX+65opdjFJ/0T1drcCbC
yTPwd9vsCOQHtQI3UNhKPdS24d8IpIy2rdlN8S9yxYtVj49gq05GkQmlr/Y7
nV4yMgJaUVWcH9XP/kf5z/MGRmD9TfTCl0kaRGQr5X71jOD5ecGFm2M0LBtr
6kvtHIErU/5tVT8Nk3E97+OZI5juONGR2kFDp+W4VmTTCBSEIuwn62mo2MbB
+bluBBf/Pa1+WE5DZtvy5GA6pXfN8pFoNg3fPqy76lsxAsd009E/iTQE6ouv
8ywdgVidXq31Zxpc1uwlXYpG8P3H/AjzJQ02lfKPH+eNYIJnm+zq+zQYvlLf
fTdrBA/+U2n5a0yDxgmdVqvMEQzdvW11RpWGgzzGvlfTRvBF5evPAztoEM22
VDFOGYGVxC5ulyU08D2xZ+vRRlD3cqHlbHECusdf6mtEjeCDWq7Es30JqKIF
L1cKG8HrUcvJA43xgFXYr8OfR6C+on5ku1M8gjsztu4KHgGfcspu77Q4uH0u
rBZ/Q/WrMlXWqRmH25eqnwn7jIDf77aRan0sTtL7evlejKA+e8+zxe0xkPWZ
eLfYbQRmKu+MrxrFQPwUl9bC0xEIZt6Jzq+KxmzuhqSR+yPwqyPbImK+ISFZ
41H1tRE4GKXcvbouEu9v6UqXmo1A80CvxX7zCLzYZdKSd3kEJzeP/vaKCYfp
1/vK3y+MIMxsYKOZVBiE/COWvT0+gmtOq1J/DXzGAzvud8Y7RvB29cQdMwN/
fA7Y8OG9+Ahm19GcL772RWHank8NW0Ywz1M0Z+D0GmsXLn7VWz+CWC7Lbyp7
XiDFKy5Ga+kI3szUvPwTbAfmibgHT2qGseW2ufWBKDdir0+tw1T5MDYUadVw
GbwgHGs4ne0Lh6nzln/bysUvCWEzPQ/rNIpv+EE0I8yXuOiw8NYoZBgcFmZ7
DyYHE3/iz2YcNR6GDYf/2Y7qUEKE/RjpesOwtbBv5fL7Slgdicg9dGYYCrXv
/9ZohhHLiqZLdisOI8BrJ31LUjihz7+t4pvcMBy8HWINjSOIKN0z9G0y1Dq5
kquBJ5JQb/vatFlsGM37+w6oqkcRATvKmW83DiPLzryctzWK6LT+17lGcBi1
E7fss+2+ES7Tpwb5uIcRM9h4osEzmqhUvD/qMTsE6SLa7u0rYwhR9y9sHvYQ
LOR3BBz1jiF+C07MzXVR6936x7IdYgk+A1GuRy1DOMffViE9EEtc+nxy8UTN
EMKiUjxM9eKIaelP/EOFQ7i+YXqn+qZ44sQdUuBG1hAE35XyLbkXTwSns9Z2
pw2BvTqUN60knpBV19jS8m0In3iP50tdTyCevbQTNwgdAv/W0HiBhASCXvV+
R03IEKbJrYOyowmE+IbCXTr+VH8JL3ZeXEcj7C6P7i33GkLKJza79ACNyA7f
dPCk2xAWLwg84NWiEasG1OQKHIZgZT9vuNGCRlzeb6ugbD+EgyPv9QQdaET8
gxDF39ZDOHtmkQiPD41gZr2bCLo6BN8XsW9tv9IIgaUfYm8bDWE+50p4VAqN
UD370VTz/BA8Vx/1K8ylEfffflq/7fQQFNsN23sqaER02+fyedUh6GGF/M4m
GtG0M9StTmEIDlsMtSO6aAS/3Vf5pINDkL3L2eo4SCMUf4aNeEkPoWKK9K1i
UX64IiKuSgxhXPgaO/sfjQg/GXmJEB5Cq3/pVZtZGlHnFyWwQWgIBa8FZqfm
acSyxm9FY8uHgLiBx+4ciYSCeIxj6aIhTHr8VpTnTCRsbsYejJgZhOnKi1Ky
FP6cHNf3lDUI3kozj08Uv3om/rN+/yACO3yXv1ugEYtVaXoHOgaxp9Ej8jSl
L/cycQVf4yAeRce/aKLq36An5XRXDaJRBdNWMzTivXDKg6ziQVwfNj4vMU0j
ys1T94TkDEL6gs/fHVM0gjPue+edn4OYNNzT8Z7yc5D9I+R00iCe51hrRFHY
4mi69o7oQaDErtKG4gc/+7mYM3QQwnk8LUKUfnFZRmbD20FUu92+/HuORsyu
+WWX4juIMkZgnjflZ6/xb0lvj0HYPSW6oxYnEqYRaLnmPAjbnAzWHr5E4s1Q
1hulh4PYl0e/rLwmkSiQzTm56fYg9C6IlC/akkj8c8zlYF8fxMcLSRz+UomE
VGHe93KTQbS/vVzAL5dIXFpZYBV1cRBjh/V63xxPJLwvFIq5aA8i94+BiLJ+
IpH9qajOUGMQHmUe4zLWicT4X9L7kOIgvHhS8h1dE4nt+0pUV8oNYjWnUaTS
+0Ti4oPS6Z69gxhwNbvk9yOR8Mwqo+XsGMTc0UvH3RmJRCbvH4v3WwZx60yE
0aGJRGJYu0L43jpqXj2Km2gbkgixt5VVZ1YOwqjt+v2likmEblvVi51LBuFT
xt1w1jKJeL6TfmzRwgDKPbtWBwckEWm3GeNNEwPg/cfU7M1LIjZz1Zn4dA/g
2KuLovXSyYT2yfq1N1oGcHlNU4TH1WTCxa+hVKWG4pdyzl7/kkx0izXLTeYP
IMruZFaeWAqx/mbLUMWvAUgVNa9Xu55CaCa3hkWnDmA97wz/LC2FoKm0rzIO
H8ADj9/LuE6lEu1eHQX/fRiA6s++H+ofUwkheqfD6oAB2HbYnY9jpRIPzf/2
5LkNgOex66m0yO+E8rOBrF3mA7gTOf7g1IE0ou8dxzqfSwPQ+CpYsCYwjfBL
ErIe1x1ATxSv/N6ZNKKjVWHDL7UBHA65toi3NJ1wk391W2vHAHJeKKxZ9jyD
yB/eLXa7rx9MnVGHITUQNouVHzDa+/Fys6bDcA6ItZv1yg839sP4jZrcedEs
wuKk4yOu0n5sDthg3/Mxi1gcXl7lH9eP1en3c2gfsgkNg1uu3237ESKhK/zO
P5cYsXWt32jZj9jrXI+uVeQSwe5Be59e6cf7kIsWvivyiN4UNB7X6cfjY4eO
5rjkEZ4rVx2sP9CP3rWBgrxX84n92yU8j0r3g8wcvrn3XT7RoCDH/CLRj6E8
B2H1inxC6obJyxtr+hEnJW4n8F8BUZJH65yZ6APv5JnUaXYBcbcxT95kuA+H
LAOMrMUKCeGxOp+8v3042MZ79+npQsJqC+fRV3V9OJbkffnqp0JCSHaN/2hF
Hw5zSAVKFxQSmad29p4n+6A3vIXnUX8hseLR2QCRn30olv3TGiBTRKT4XO13
SerDQh6PgpFOEXEp8qHS3+g+qP0Q/f7+dhERR/8ymPCuDwPP+tqfxBQRev2p
KkJv+lDjU2IkUlBEzHMWv33wsg9lxJ8XB1uLCK29Y2pKT/owxaxIKFxBEkcq
EgZK7PsgbXKgqUuUJCRvW/vr2fRhn/aNzX4HSGKtwC75Nos+dHVkX69QJYlF
yT3Mm5f7kLGqzyRclyRGzkW4T1zow35+W921ZiTRMm62x1m7D7G/eo7stCWJ
koCtjOUnKH2P0h+dj0kiTbb1caAS1Z81D7/2c5IIr30vtlWe8rN43447r0nC
74EBGbO/D5avfbz0gkji6Yb1trK7+jDK+evyoo8kYfWTsTZbvA+mT+ZMXL+S
hL6h/y9N4T7cNzNvY0aShPqstnmNUB+uh33K3R5DEgc/8C+/wtcHr3q3eyZx
JLH1WGliP08f3Ef1R97GkwR/q8fFe/O9mD7R9K2VwrNPjy9wTPaiQJb37TEK
94ryRHgN9yJt5dddebEkUZOdc2ptTy8i5z2UHKNJItfUifWZ2QuRtsLtj6n6
tEXHQnbV92Iw5u4rkurvQ9iM4vdKit9o4v7gE0l4qqX/VSzuBcP39dOgEJK4
333PuySnF4GbXA7IBpCEufvBQ3oZvRCiXYg1p/aDIBNcbsb24hnaTJJcSGL8
VMTmQO9eJCh3V3dbkETboFmeqHsvzrP6A2ovk0S599abMU97qfeB759aL5LE
t4r3aVm2vdhjeEjssSZJBN42uKxpSfWjOWUso0YSbgLrF9dc6cWmaz8MVQmS
uJ3MiDUx6EX4ui6t/MMkYazrf65fpxcBGvvP5B8kCU229rS9Zi/K1II1z+8j
CblA/i8cqr24Mnl70XNpktj+X+lxL4Ve8HB/mb+2kyQE6zyG1hzqxQ2z3GfL
d5AEx8PjAZ9390Kp2yHEaRtJDG3gUdi1vRfLD9YN10iQROPPnPZUkV4s/pHT
vplaLzJ08lBc1wvVngg78+0kkTp7dF/Jyl7kXJGUT5ckidAPMzXneXtRIsBz
XYqq73Ms/QmTg9LrEknLp/p70npP4uZUD9wEEq2CZUnihtPBEvZoD2yMUo4n
HCWJi1vHbjv19eC8hr3bWnWSUMtJWL+8owfxly5X1p8hif1m1gho7IHtPY6T
3IYksYV7l4UovQfbp9Vvf75GEivCe1bElPbAIWtuV5o9SUypRSQfyu+BotWL
DN1nJNHdbWaQ9asHowXtaY6BJFHtvpVT83sPEr92rTz2jSSyJFsjGfE9uBpf
Pf32F0m8u2HA7vvUg3tJHZ2K/VTe+YZPVwf1INbSYFnV4mJCgeYakfG6B7ce
n843lSgmWtixF14+7YH3Nq0n/leLifhgJdrd+z0wCyvgPexRTDw9UsNrdKsH
L+w9FXvjiwlR54X03Zd7oP5VJv06RwkxIv5GYO2FHghLeycflC4hsgskb85r
9cC3JKGE26CEMF2hI/znWA/42LJPP2aUEGFBYY62Ij1oLDPmmwgoJe7KH669
uLYHokZfFyQrSwm15rK9Svw9EHuzo2Uzfxl1/5pkrp7/i629ckLrX5URkvEn
VJKb/6J++/k9oR/Kibi8oSUT7/9iPk2r1dihgnC85mrS8uYvPvsMB018rSC0
lq1PL3j5F5dGxF5UlVQQI2eUbgQ5/MX2/xYdlRCuJPY3+pfKXfoLrpGXR7J/
VRJcjpLbtur+xZ+iz+DvriSqRX89WXrqL7aFyszJ8lcRdy269zQc+QttQd67
bUZVxPdROd/Hm/6CdUtHattUFfH8TVmvmSCF+cUj/ohUExf+M1U+tfwvDgj6
6vWpVBP/HLxYwjPdyH+7iXn0ZTVRtEX0FA+rG6UiNGHjhGribU5K2GBfN/IK
Skx/VVYT8rwt5383dONifdmW5UJ0YlmMXXxEVTcKLmm6dhygE42nlyx5XdyN
Jt2XNeU6dMLBf1/a5Z/d2J2oH/D9FZ04LZu/SiOpG5Xeo+qfv9EJkXp9y33R
3WidWuN0P49OQMR1I2dIN5yHhL3KJ+jEYh8pwbt+3fj48p/3jxUM4hRn1fK/
nt3U+7L9k+CtDMLP7iG3gWs3yvYvdbY6xCDqOkTnSh93w9190+G9GgxC5HwR
m7jbDdV3fZlN+gziasGtoSSrbhxmEh9v32AQY1G/W4ONujF2VP6g+gsGIbfR
om65XjduueU/dw5gEE+9+CodtbohsTf83rsvDKJgNoUcVe9G+8qpTf6xDGKF
zaUcc6IbUrPX1lz/ziB0Whdl1P7XjRBLY4+NYBBvtWOST+7rxmZCcEdMAYNg
ZuvE/pLsxvrFOjs2lTGI7Qemw/Zt7cbL30tPW1UxCKuwLx++bujG3cRPXZ9r
GETymhOBawW6IZnCQ2bUM4jp5yPeHsu6sc7SXz+rkUEo/gtyn+XqxmOxUNek
Jgbx3JJwujXTBdFt/ZmBFC5t6H7QzurCP7GoRXYUX+CU9+3zA1241WLffILS
0/916EZRZxeyOKfOS1D1Pu9pNj3S3IUmLbW5JVQ/3Z/cDOMZXRC8tqR7ppRB
SK+W1t1a3oURl9tflxQyCDuX6lNvCrpg+apf/UAWg0hjPVJbgi5E73E3ck9j
EAvmYsce/eiCsrXc4Aoag3h5/PZek6guOCZW1le9ZxBVaeslqz93oUKm0WWH
H4PYIJUlqv62C1pLhGVrnjOIiBUrBaQ9u7C+YLrNxoZBZFXGjk/e7ELQgsvu
lv8YxGIV3cEb5l2YZZxccXYngzidMtPVfKkLO3bvNHHeyCAaAk/W5p7uwodU
rpKzs3SCZdiT/npvF1Z4JSgpgU7Il71O4pLsQluvq8VuGp1wOvZfjL1oF0rN
xgNOfqETK7Y+f2+4ugu1J6t26rrRCR2/3QHlS7tAO2ERZ3yPTrxdxHilxNWF
X4URVjXX6cT2bvGnO1idcNypH3niDJ2wulByP6S/E95mU/9MVehEcpGdLV9n
J1xCubdtk6MT04c3Wjo1deLZuSfkx910QjEm+wqL3ok6PiX9FnE68VzY0sCi
rBPCrTJrxjbSibJXq87V53fiSaoZT48AnRBa+KF56ncnXsRrj5UtpxMGtpdV
8b0TqwTXGSfy0Am3juah1/GdsBTjWUVw0Il4vUtvTSI6wcGccV47W03UkQ0q
Mh87sQhn3x6fqiY4j+oPcQZ24qn70ZS2yWpCilYbXPWqE8prND6zKKwrrqfy
9VknzH71+nhRfMdA+uCdJ52gCV5c+4PSi1p6LljVvhMXfr4QcuWkE1UOlcpr
rDuxj279c2YJnZgdPjPYZd4J+kfbh9KrqP0yKw/6fqkTUl/3zG2h/J2pOaXs
rtuJzOon4sxtdOLBiZKBC6c6MUnPGLenzpfQzBNBkqqd2O9j9b5XmU6U7i1S
mjrSiSYBaVNlXToxEao+QB7oROm7ydDn1+iE6Nr8wJBd1P4EVBZnONCJkx4q
SjfFO5G4Pk+r259O3J3N7j+yqRPSN9Uil8bRiQ+3FANXCHZiC8mpKVlEJwra
fys2L+vE6nd80SpddGLk/NH+OK5OXFztuvMSN4NQVZBXPDPWgbqdPX+cqPPG
JiGtb0tfB9ySyOsvrBlEsNh/ASNtHXAvO83h9oZB9PMe7POt7ID/o+x5pR7q
/GLsfkOndWCCtT9pcUQNkakReyw8qgPOe70edtTXEN0ZUr32nzsw3l8xYrWy
ljgcuuPYOp8OrOpTOXD6aS3BtNnao3+rA2GS6649tK0j9vCuUWjd3QHR3R2n
qp83EBcf+3cnbOsAn2eda3xpA+EytNrXaXMHpgcVzFsEGgkGnb97K18HTFWT
rhR+aiQcvvD6mA+0Q6J54Pr1tCYiQshd/lBnOzxvdNwPnmsiKtx5unia2tGy
2ntAXLmZkLDhko8saYfGROq6wqJmokR+tqM3uh1Z+QcN3IpaCHk5iVZmaDsE
K2x4cha1ElGHTjXUhrTjev+cp/7RVuL5vvcV+Z7t4OH5kCAQ00qwd+eVZLq0
g0yKyB9raSXMdw0UJD9qx9G7D1t0eZmE8naFX19uUP9ft8H/lSyTSBQ3Tws2
bcf9oeP1xZpMQnTry+TXBu24ELP0R/JlJuEtkhL/XKcdd2beR8jZMYm5TU3f
npxshyMz0fCkK5Ow2sAdfle5HQYOPmS9H5NoWCv9+aZ8O7zrZHbWfWYSJ4R0
35nub8dXcY0F2TgmkbbaIVBfqh1p7QfEen4wiR0rw3y1xah67zrQnMUkAleU
vjy+kerP6Z3ZsiImwb1s3P2YAFUvJXTGpIxJ3Fki7HpoWTuKM6tb6BVMop1b
1VGaqx1fSL4q/Somoc1l9VB8ug3P3Nz4OiuZBBb8724ca8OeLQNK1/8wiT1z
GbdW97XhgNXTD43FTOLDdMcN3vY2hNU2VxzIYxIr/i23WKhvwwMJ6sjOYBKP
2AeuTFS2oarj0U4rGpPoHTO8NEhSejFXrsp/ZRIXR1wvdGa34Z5odzzpzyQK
BmN0GtPbsMD95pmAC5M41F99uiqxDXhczc1vwyTCemY0yG9tqGi49zf1ApMQ
7BZXzfrSBlnr1V7cBJNw6dAkfrxtg9SnNaxxcSYxwrwjH+/bhh3b0ktcFjOJ
yy3vDoV7tIHb80i9blkrUd6Yu++9M9Xv/KPvlS9aCYX6/l3+D9sQ2SITcp9o
JTbSj4g5W7bhhs2S9Qc+thAelWabH1yh+uHPeaGu3kL8K/daf0u/DZkbriY5
9jYTNWQjv9GJNjC1RF5d39pMqBUuWqar1IbbKq/cxL83ESl5u3g0D1P9eYXn
rFFvInzxeEZuZxvEuP/dzbnQSHD8+jqxd2sbbHdvo/nWNxA2P0tGt29ogy5/
Sma2XgNxKnVTj9DSNsz5qd57olJP8MZk0Ed6mLDtvWah1FND3I/q+POXycTO
M11r+9Wp6zd8eUlLHRMj/W9feFHPD7mfDbNLi5jQ/94SLqRJp87PmbioKCbY
G3ZrHberJExNZU9IfWHi81MtU5+sCuL4ntudMW+ZkCjiV9q8ooJYVdC9McGT
ibK/9+WYsmXEV3ale6oVE3e+nfRUUSgkinSjruTsY0K3u1Ur7EgqESfaMauy
k4mNvbWP9eYTCb+BzcH5W5lQ95lIm38cRxi6+ZcXCTDx3V8gucTqM9F4be7e
x95WZCqZ5wm/8cf27dFSabdbUTqQ/oq38jdGfm25kmHaikr+2tRb81lIPx8Q
9PtcKx7q3zNx9s3BqWdO3PmHWtFcELJmZXw+bnfqtVROteBocv2X8vQSyDuU
CjH6WnDOhu9am0wZuIWUNesaWxC05I2JRHg5AlV2p7X8asFlD5bZrt8VyAxd
5Nfv3IKNmcMrs+9U45n8w6IhuxaUDbWs991Ah1bV0PyoWQs2n5npksyko42z
4eY/tRbodwvcvTDJwOIrNDWeZS24l+k78VClDhX/tjnwzjTDMKX3g2ZZHd76
vEtaPtCMb3n8fKfP1UM66/kWgfJmCF1P2htxrgFntxhNifg1I63ep+WSRBPa
fzr5Nzs3Y9XDT+vWBTXBTi9s9/vbzdj1ZfDuEHcz/F71X9lwthmZzu3n6yqb
IbZz5WytYjMOFkg/Zu5rQVLe/sDAfc0wVpNcMurZgqqZh8WCq5oRGX5HeMe+
VpgGfTCvWmiCfLSMitbjVoztz573GW6Cltq+xc7ZrXAp7ww+09qEp/ZLR65w
MiFwg/cA/58mPFx51dh7CxOhPNJlpb+bsLb22aMTR5jY/+XMNa/4JngIfQ0L
0mUiR+EO58mPTRhZsXToyU0mdOoC3/F6N0GfvnotlxMT7Xd+Hip80oS8otbn
Un5M2K1s+fPMugkWSo1n56lccsVw3lA1akLyGvauZwlM+Klv4150ugmqPxIs
C38yIdau8TFboQn2tJHpslwmkp5YyTlJN+HOrfcWocVMKG/wqTom3AQbg/l8
rT9MVKUkW80tb8Lc0QU0VzJhql27OHOmEVGHpd0MqpgY65/+/Ki/EUwTn/yK
CiZc3EWOHG5shOhFs9RTZZR/cWXGZHEjwtVezzUUUv5/X731/WcjKh1WZbzI
ovwbeCy1j27E1EWZB2Y/KP/s2K8HQhrxhgzb/jCW8u9bcXTMoxFPN7tsqPtE
+Zcer6U9bMSrcIkFb1/Kf9E6u1uWjQirGG2Idab8mx9ZsUe/EZY3eRcUbSn/
C8YRAxqNUEht5DE0ovy/c1GMkWvEIOevkmUnKP+yEQ2Wko24G6Z33eQA5dd6
kP/vkkY0pnx7doyb8rt09bfwyQYUbjNRr2BQ8w47qGL+twGSu9zdWZ9bIdD0
+H5bQQN+qOzaIyPTCp2Ty5iNzxqAk3uOKh5tQXvX7kch9g1oKz63kpxthp3z
WSH9qw3IC/q9QyaDymNasEaNagPiv+XwbDvUjKrtOxIrFjXgnNaLsgNbm3Bu
kapLvnM9LIbFbY+y61F+5NWlt3b14I23TFj5vR4n79bIWpvVozZol/OL+/VQ
7rreL6RWD6HqpQ2Zs3XYX/hK15y3Hju8LysdEKhD/ELNHrmpOlzYt0lfqaEW
UnKiS1f01UGPW7XC+Wsttn5L+pVcUgfjbAda5eFarPKq3b7odR06zjmnLblf
g5e5opy1T+vAH0VG856sAe+sZWO0bR1ceHMaA0VqsGA1+1pHpw4X6czhB6UM
PApXu7Gduq55Lzz9XR/OwESzt+r0gTqw4nZ9bXNiYEhr69SXNRTOPusweYSB
G+43qu0X1+EjHMqXCzPQjeS4E5O1MPs3OV49R4fpv1n3zT21KCy6L3y2jY7m
feqmo3W16NkTEen6/++lLV8r5JO1sJMIkrkZRwf9S93atz9rcfq4m8/iQDpK
BW6WKL6vxd+ryibaVnRoaKaEC72qheLd0Ox/+nTkuc497XlSi8OHrJkaJ+hQ
zFQ3yLSpBcuha+CIPB0Z468P+lyuRWT7+eul0nTI7q7nN9euhfeM985xUTqS
ror1/qdE1R/7cCV2LR17Pt7MXb6/Fv8dTf88yEdHdE3Kh1axWiSIXmlMWEzH
9pXz95MFaxH9OfFWHwcdoceP67hz16LtRofUm9lqiDj5SBuya5BzZErr61Q1
3qbVL97bXYODe4KC+f5VQ2hUrI2rtgaXDDjViiar4bPTKqOmsAZPNxHri6j1
FaapAdFpNfh80sSMc6YaL0Lmbzl+q8GexLZl1+erwV19/KROSA3Uhne/Guai
w2m5r8R2rxpILJVb6sVLx6xKw/zU4xo8IKXVdq+k476DeH2ZVQ0Et8qlFlH+
xlKskr8Y1cA3ytDlzBY6bAZTX9lr1aDr6jnfZEk6LIw1lDfvq4HxkbnG+qN0
tAf6Co+K1kA3wbzYkdpf4z8NE3mra+DxZJlNwXk6zitax1ixGJjzeRTCaUuH
qpifUOZ3Bo4UPY9/8o2O58YeOv//zviFwhAnPZ0OMsTJpyGAge8B4Wv1i6n7
jeCtFVN3qRwpyjBD+6k8cJ/ilj1A4SYz1R27GQhRVFHOF2OAufS1YZcCA80O
8k66Agzk2kxzEqcYMGVLztqN0uG4yPKtsyUDYTKi8lz/z5nMS9aJ+1Qerdc9
8K2g426F4G8rNwZudvOMJyRQc9UqGX72noF4sTkZ4hPF97ndfDmSgRHj8Vvl
3nToyCTqGiYysP9df5yRIx0v97i+ufmTgbu17f0D1nRssg544pZD+RBs2Olg
RAdH4K6gEJKBqTOV15afpuZg8knw6x8GFF4WhYco0HGzzJHuT2fAsQgdO6kc
5syr25jVMZDF/WNr+iY63MN+7lrayMAipfjLGsvpsOStXvWkiQH1J+Efaqer
EbhKs/kHhV+kv2+06KvGrh+5/Mn//16a7b9hor4aDjHO7dfrGeDb73XhGVkN
C+48PTqDAW0blwCh9GrIiaTsGq1gwC/6YfXXqGrMjAx1ZBQzQO+2XX0guBqG
xlF5MrkMrBO/fibHvRqlOywZ2pRfg8uXX529X40mm+ut62gMvH+nV8K0qEZ7
pbPV8zAGWmpPL7XVqwYsyPz3QQxsFVI7vqBWDSdujBp6MGCurfDM+1A1ph+K
JeU/ZCDi5YHczduo68LhhnPTdQZ6iqQ444SqcUKd+fqrHgO7eMQIBe5q3F9k
miWiwgDtyaoMg44qRLpveqS6noGx9CVTvVVVeOIlLDHNwcChiXnZhzlV4Nab
lHzUQ8dPm8GkoC9VuBMmdmMimZpDdOfIdt8q6jngZiJXMB3E38Y9352qUO58
23jqEXV+XC6Opl+uwoWptKkSKu/l2pGhq0WqULX6icuutGqsevWR+ZmvCgen
fY1i31TjHBkgsm+uEvL2H6xv2VajTsktRKupEskrFx8Zpny17b/i5xVSiZmn
AXonPKsQ7xpz+5pnJfyPSFziNavCIzpbW+VRJXYbp+17cKQKgvc8V87oV6Le
6mrjp/5KqKUnv7yxoRK8PQ/Wup+shMCy+ZvqSytx1GcgX0WsEi0GGppiUxVI
kwud2TRdgfuzTUsb6irgsWL3F53oCnwjFrufCK7AYe+tF/7jr8A9H22LbS8q
sHVl+6HLFX+g3BaixvmgAm2ngmgnnv1Bo8te7vQLFYh4O7zEbKwcfAUXnSXX
VUDy5yxPY2MZGtZ+NeFeUoFmuUzL6rdlOPWn4WnW4B8EBV1WN9Yvg6MA99ze
uD8wyVk1Y9FcivZgvUl+6T9w+cOmxU2X4LF8f2rB8j/QSNXO/lZQAqGmp3cd
+8vhdP380oA3JVDf8m10MLoci3m5XM/JlqA16ygt3LMcqn2q62SWleCBaZWN
0Y1y7DQQjRBgFiM6fKa/dGc5dD/k6vT5FkPluE+029Jy/J7dMN9mXYymHglL
hd4yvBF9lM3ULIa9Z/qO8aIyEEPtkZ27isEvrdUdE1WGXjyM6uMrRmRZe5jZ
izKIFkR+GxoloXjrvtmm62VgGWW79deSqF+1Qqz6eBlmSw4uawQJu6TPTM8d
ZQh8eXTx928kluse+qS8pAw+khvU7waQCGOTRtPdpbBU/PlhhSuJo0HGwkkF
pShTmRi8a0eiRo7VYBlB4VVSu0LNSNxqcH+79XkpQhzPmr/QI8HrIHyx/mop
Cr68Kt6oSeLL5sS1vmqlkDNfk66pREIeagyNbaVIbfD6teIwiWqTBn8OnlIk
+f34rLWfhBXXLZ20zhK8+Btwi3M3CZ6wRatt80pAqua7Ce0k8VEt+M+OsBJ0
CCn53dtO4r+/0t6trtQ+T1rGrNlGouJF9qkgsxIUpeueaZUgcUNKb/kZlRL8
sTa4k0WtLyrtIxeLl+BkW8er8B0k7kYW8/Zyl4DDRrRNWYpEp0v08ZLuYoh0
+Th/purrGns+jysqhtfZayFxMiTyD9/Ifx1dDJnhT+v0ZUnIrjnJbfeyGElR
MvG+R0hEjOxU0bUpxtFirU41yq97ZG/W+v3FOJUz/rrhNIl/LuTCtGAxRr70
2AXpkrhu/O1YM5tEyvFx5gtDEifWWGZ+SSfxRrGjINuSmo9rzw8pSsdU5vjG
t89IOBgXTawQJ0E7776a9yWJgcNRh4a5SbDsf7mJ+JG4tObF3cruInzqF/Uq
CSJRNnItObmoCA6Zm5/OvydxrPT4WEB0Ebz0inkiv5CIj9wh8+BlEdgpB9am
hpMQcV1ia2BThI9FDhwbqHy8Nv4br6BdBNW15XdzY0hwyBcOiuwvwk9/Ac/w
OBK2ayKlOYWKsNDtmEeLJ8EceX6zg12IDlXmploKny21iM6vLcQqDRrncgrn
RKr3RqYXovtQvwURS2K/63ZJz3eF2KgWkX2NqhdqvPia1ZNC3AwyE3hA9SMo
3x2udbkQEWlbe80/k3BbU9C5T4nSfyNxQzyExPhIuLigeCGspux1vlH+zUuf
mbK5C9HE2DQ74EGCEXn1S213AeIDuEy7npJQd1VjphcVIIwvRNzzLonvxtu2
vI8uAMcH8RfV10hsl+cxdnxZgE41mvNPfRJBa7rem9gUQDOiLEHuJJXv0bxG
Ze0C7G5lXtGg8vugNGzjtv0FGP+w520nlceeSDf9JUIU/8vrZUsFSei7mgf3
svPRK1e5JWmuCMXGqrUltfngs8j+10TNSV5eYm18ej6WXO++6V5ehE2jHf52
T/KRLOTIr/e2CC9Lc6t0L+ejXvGG40OHIsxGfl39n1I+Jt0+8m4yLkKzsdnr
Ge58rMs586tFuAha8irlzd152NopX8kzXYjfa8T5sory8GuOUZ7CKMSn0nZP
t5d5GGU9+pvxgppLVA5pYZOHhRLSSMSkEE6uobwntPOwzfqGzWbZQlyRN33O
J5SH+8tP7ORrKYB4VJtz4LtcyGoX2wWJFEDUa/OL4Ue5EE0vP2X5Nx8iNvre
Gga5WLR3MHmQet/feLAyZHp9LqJ0TgVoyOdDICsr2TgwB/uXzmdyquaBs+5T
13bfbPDEVX+e2J+D+Z+N/U9ts/HfwH+vm4ayMfth3VjdmWzsU/10/010Nv6Z
vZ735M+G99uQpOKt2RgZdlw37JWF5IAbOc6rs4CVmX42fIDQ+tYN6/gz8ZNx
4JNo6W8qz7tp5n4Z+P4uJqbK8zfkhB3FYtZnIH7HuzxZ3t/Q+5i6+N2un/hI
PJqY5/oFdq+rylKbNITwjHElZmdCmPVsrSRPGgJLLFeaOWXi8fJ7F/g+/cCr
C/qShXMZePOR671943c43JIzeP3vJ2qWnf5s+SAVDw7RLJR+/MSZJ8su3NmR
irszO+6w7H8i9/Ril9j6FNx0X/fyAisd7W2DLlnHU2Bx+nXw0qR0pC2Pd/28
KAWmgkvCM2zTMdxoevpnTjIMPk382jKUhmtikQzfk8nQu2pTXBmbhohgprW6
YDJ0dnXXuN5MQ06anIdYaxK0Ro06DklR2Pzo/s3xSTjxgzH8t+cHhlbyZe5y
SoLqk9OzbyN/QPzvClLpfBIUVfJ5T1n8QPFbd52zu5Mg9ydlK63jO3zV3SKE
uxPRwZu750fEd6juubA7pSgR3sqVR35bfkfpB+6Z8LhEyDm0auRLf0frw/f3
mG8ofurg+dLhVHTskGNpO1L84RnT6qRU3Pxnlt5hSfF3LrNtsE/FfvtFq90u
UHzT9U/a5FJh/TNGU/g4xX+/3bNnJgXvy2z+BMhR/JqDQcO/U3AjSUCsfhfF
X6kSNuGcAonS+PEyUYp/4mzinGoK+Ia+7TVcR/FdL//m5k1BrrbggsVKip9p
XbK8JBk9j7Rba3gp/sTjOgHvZHzj2Rj9ehHF3+fZteFsMia4sr/aL9DQYRk8
JiqUDK2Y7y+sZmnw/hqxsKM2CelNZ95dmKZBrjllxd6QJKxp+JW4YYrir83d
IGuUhFtfD6kG/KP42pXbj4omoViaeBxL4cOerQdUOxKRFrntmBLF78wdVNSM
SITyEhelQ5Se99zMaR1qXw401q25MUPx/1tmqC+diGNvVWWzqfqdtuuvmwzT
YG6xbZ3wPMWP3m5/LYmGr3Z/Dl6i+j3cedDFxp6GoZl9YmYciejcrPLaXo6G
XAHLIAHORGxOCJWbmkjASVUNp1MUthODzpInCVhmkLKMRfGLAhqt1ixKwHWb
nv9RcOXhUL1fHKUsJSFKIruQKKUox5ZK8UURSdZQJCFapFJJklRCdtn3sWTP
awvXvszYl7HvzDCWEL/7+/M853PO+ZzzOe87c5/nPjd3Es93hHnNW/hDBtpK
9DVhx+s5e3DFyO3LQOd3fLmkjfOrXZAthu/pyDRlXunNKo630iZpH05H3u47
3gQt4viOewsmMWlIyqRmw34Wx1/xZr4vnobeeaWKTY3i+N8/hZ+kp6K+C1In
ab04XhZd8D6Viuu9a7drK46P7b0ZWJiCOmyEbuj+ISB+nrVHPyEFRc/sCH2U
T0Auvlx+hD/JSH/H9OnyRBz/Tzah9Goy2nB0dzgWhOMfaZc1tCahyJQ5l+9e
BOQ6eq+n52YSkhZcfEF1ICDspjdtsj8RyTzqLpM0wPH1P9lWrRLR5Weur04o
4XhlJME4nYA0xU24F/gJqC6rV43TKQEFiGX9NaYjIAHRtduCK/GoY0eFX2Vp
JnIN4XI/4RGPqj8Hvl90z0R1rHJfLjDEI1F3RJKQzkQCL7VTr/rEIU/vu526
vRnIdfHeH2O2OMQh0W59810GEuj++fcxbyxK26PBXoalI9driPNt9E907Znh
KybrdFSHeo9/FfuJio6VSm2upSHXBC7LjJMx6JDZUWjiSEN1h+Q8Sgqi0eHV
iszE4FQk8Ek7qE45GjWNBTkK8aSiwIk93xu/R6Ir325+Y9uVgsjc7gM5CRGo
zyNezuVJMpLSHBIPzQ9Hf1JiUcNYEqqI+1Vk0x2KDl2wTQ7KSkRUizvkbb5g
JNgdPfhpXzw6/6X22PjxIJTCMm/+xSQO+ZSddGlQ/o6sf/5SkI+NRUcFdu/6
Yf4NravsCCeJ/kQRBWY3rS9/RrUtJj+r1iKQPI/8tOz9T6h+VDbSWD8cNTxm
evHv40dU+eTnlzfxoWj9ZNbPoOb36KHlOjudYjAySmeYrzV8haR+MnJwigWg
o4K3tLr0NRHLXOwpE31DlEZ6KfhMVQa2bnqn2Kgqwwbjp/S6Qn14ET5hHltg
Cer+wmWvdOzApG/9rb3GE7Btc8R6Dz4HkSySstyQL5w9UB2rRvIEvaqiM6Zv
/IExjQ0RL7+GV4uWn8/s+wId83d/KDG+gwqhzsb1iEB46sqlw+zpBzWDRRm3
XobB8AGV4vO3/eE9ZVVgUyIC4ntPc509EgDy++2VdzVEAtsLi9f2G1/ATobr
xeutaBhEBSZt+d+B6/Gd/H30cRAYoMMxmxAEGtf9LM7lx8Fli9FaxqBg+JZx
wHPJLh4IDOxnzrn+gIgMxtLU0gTwumjLHi0bAXsjPjYnyiZDQzef3w75SNBm
Ytkua0iGA45tu20VooDpkEHRsGUK3KiP3OaOiga+yCJFjhep8OT709+1R2NA
lVrweD99GkSY3Xj+7GcMCJ1Wltv0TIPxJebV/vif8GSrvSjMLh1YSkdzP4vH
gooAIfE2MR1O+CBn1eRY+DKsrC2omAE39ENllyTjQH73EP3ajwx4wvd4Pi4t
DtKC75svLmVA+Ph/aYYy8dBrLguilzOhnCB5n4kQD188DOKTgjKB5SJ5zD4n
Ac5m7rbx2U8AmX3FsUdOJ0KS238fQ2UJcL37u0VzXiJ8/Rv9gEubAE9inQRe
n02CHDf/cGZbAoQ/uNp/sigJ3hjqsX32JEC5gljYqFIyaPX84ir+RoBxenrj
oN/JcJh0WS8+gQAsDb3clyEFJAIbk2zyCXAiKI/4tywFgjwZzhyqJsAN8y9f
U9VS4dGNYqWuNryepIOuaVUqEP8z4i7rJ0AETZNtn2Ya9FbGSM+PE6CiVLCh
rCYNkiTYya/m8Xo+mx+cr6TDDqKPRzCNAKzXOy+J1KcD+3SwuP5fAsgeyWbs
uJYB/kayza2beL0Jv8r3TRlwZ3Gd5+w2Xi/L9vU53Uwo3bpwNZEuCyKeq8FM
ayZoYTYaavRZMPTT37PpGAFoS8p3pHF7abeHaeJ9Ahg+7zT7gON3Pbh3/lUq
AQx8Tt17gec72GZ42HiWAFw6vweltwggqaCxLnc8C/yvf75Vgtc/Hy7XzeKY
BRUx4f66GwTQoRcoGMnIAnXrCkW2dQJY2OwJLlnIgpGQRk5enL9r/d/H32Wz
gfPxS0LIGgG8ZSduOD7KBmupsMcZuB3ynXjqUnY2TBbu9nqJ41PWyzmOLmWD
pxV72Ak8f4lZJnXtVA68sGs6OPyPAM1V4S2trjnA71XdVoj3M3zMNzPlVw6k
+lbt6d6VBTR/d/83KzmQEb1tZbEX749m/eC2Qi6YLwSUuBzIgoPG+tdOP8kF
LoFLJ2QFskCyFKTYCnOhT428+ksyCy4IH2eZ+JsLI2M5VsJns0DXh3cKKf6C
vbEdZd8vZYHl3O7akOe/QOhxmfYx4yxw1V9OeFTyCwJTPY/9dcgC7/zhd1r/
fsHSsWcaAm+yIISvxVpYOQ/qr/Xo5YZlQerr3+qbnnlw9KVfYXNeFpSOpwiR
UB5cP7vm+56YBS1XQ+gz6PJBsNzGiULD+znggsy88kHjmj35qHI2GO2uixgp
zYeYGTZ1BetsKF476mG7kQ9dDtcYyH7Z4NXbdPahawGsRWfqc4xnw1iDKM8S
oQDGPOmS07lz4HKpx7LbXAHQnS3s27qSA/tiJLM9bQphwT3qbldBDjh/fR3A
EFsIIrcOgR0tBzredDl6DxZC7GD935KTuRBu4y3lb1QEf7Wco3/l54Kk9HBc
hFYxdCXOP4wY/gX+R869EXxfDCuy/FY88nlAZQuwiK8shkerWTtO++RBAfUC
f/r5EviYemlD7mw+XMz/EVwi8xv0H0l21v8qgKQkymMV+9+wM/SCC+PhQtgT
eulGVeJvWKN+tnfyKoQ2j2X2hqOlIFOc5vTxZhGYq+n59nIgsDTcX+FysASq
TiXZmf2HgPHRQ9EBvxIQF93WHPmIgP5xWVAFw29YfdPx+jFDGVj0KkZ+WvwN
pTZvlV88L4O0N4JRHIMIrkqT8/0elEPx6dMj2ZPlsBnHmtj0sRyaLFuniOIV
kHFEIYg9BbctgrfKbCqAY5+/a+B4OfB8qc/NH6mALqqSXLhZBay23Ayw66oE
m/zglFS9SljuO93VGvUHfCVs29ycK0F9m0VjqOsPZPw4s676rRL4nCv2xbFX
w+pz0pUuYiVM9q1ssnpUA99c3KPY5UoQmrNiCc6sBpU7rj8cuauA003dLGao
GnxUOKd2GlXBFAPBmEm1BtKyhtlbnlRBlj23oZ5jDbQKZZ8N+1EFs6//XV/8
UQO8jHo+cr1VQA4TLOOfrQFlt6OEzY0q0NtS/xXBUQuWEwudNXx/wN9DrcJE
oRZSMX/xO3f+wE6loELv57XQonjnv2Mv/8Az4rOR+dBaoKUed6fhfR0UxJL8
Cmrh4JF/kajsD0g9pBM3J9bCef+Gat+hP2DxsdXj/nwtmG+HzRswVMOQ6qO6
9F0YvHOy5xYUroYg5Ttyx49gkDKkqDyrXg2ylB/ts3IYNOmz2ORbV4OayY02
qgYGi5Xdn7zeVYMnD+s1NUMMuE8n/9JOqAb2jcO3xu5ioJjwpP9gTTVMazTs
HXHBwIznMuPoRDWEmf9x0HiFwVsfnuOZTDVwNIXpAedHDJL+jt94dqwG2IdN
KLcCMWi4n+dxUasGFq/KIrFwDCi97+LY7WtgtXDXmzc/MeDSNmjo/VgDluzX
yzwTMThbKkJLSKuBvxzDzf9/3/r2Cdph58YaKPha1embjsHr6Er1C/M18PNm
ZWVRBgYJ+7/ZM+2rhXvWZhdqcLvOy/Jb+4laMHS2jC3H8fNLcsWRurXQVLmD
vgTPx3GXfuTeo1qoTozfiSVhcKajheX011oo1pBd2YjD4Nal6JN0ObXw8ilb
ul00Bp4FD2/Vt9dCaHfrO+EwDGKPgVcQrRZEt7xuqn7HoDaULcXiAAbPg2Lt
Ov0xmGUdaJU+g0FP64TVxnsM5Oc9BCvdMXiQedLl4lMMjMyuXfEPwUDTMNIu
5BEGHi2HHxkX4nN53LDYdg+DP9lFZQvreF8OaqG3bmEwLew7WXS4Dr4P7O8l
6WPA9t2Y3ft8Hdz9eW8g8CoGhu5rZnyedTD795SpojIGzyZr3k9E1gE2+SdF
5ywGUcbBmfjTENR+8rvIcAqDqjqbzhfkOlgJ3Aiyl8FgUunM9mX6eugwii6N
lsRgTzqjOJdQPXDWfXmXL46BLD9JZ1CtHq5fp9P/I4rBjc9xbilW9bDhPcs7
KILBUzrXyMdv6yHWiPX2IdzvezniTWJcPUi8Z3X3FMMgNKDarruqHrhUu2UE
juH72LWgzTpWD1dS6i7vPY5B0dFDpy4wNsD7vhNzxidx/ezUDj4UbYAf+x0j
DpzD50iw/xd9sQHOT96V1FXF57EWONx2twEY2CRTD+L9r6uU1uz0boCEx6yu
L/D9ZfkwkXYmoQFuHKZj87PCgLeV/atddQNIyt6T0XPGQPKQonvoeAPQm1zI
7PLCQMnC6nbDrka48zns/XFcz2vJfqpbYo1wtr6uyjgZ3z/qLzHZS40Q153y
xgbher1mon573whO9u3CqlQM/DC5jj+JjdDgeMWIb28dhO83KV6taQRDr+2U
Rck6KIlJf2fC1ATnxS/QRzvUQcNUx/1PEk1Al/eMxSOgDvrk6HTR5Sb4e6xM
wTSvDv6V6/MKf2gC++5ymeNM9cDG4rF9I7kJiEbNhgfl64FfP37UG2sC9Tyd
O/SW9aA8vJoxzdwMcRebKgor68GTIUI927cZLoYoKNFFNoC/VrXEaEoz+NWq
efB3N0DU14W93PXNkNAgIbV2oBHM9wvOljC2QNyT1MGkwEZ4FeOSd1SzBZQU
Dp26GdcEZeUHr05WtwB7a+xLa88WqL2bfoG+swUeEB4exuJboIVZTZZ3ogXU
zorEODW2AFnP/sC13a0gVxZvbnikFeiHfw9mXmoFx6232VylraDGYOXqXtsK
blvHdVpW2+AOc5vY885W2FmkE1fH2w7P2VW7Pcdb4SU50E7rQjvk8gsoe+9s
gyVvOWLWq3YQVerd/V2lDZ72P9vFTkcENTWtopD/2qDzglCaCD8R7lwpdAi/
0wYy7luOLkpECLoZ3Brr0Qb7t998i3QhApPr9bDsgjaYSZZoM+omgsjzCu28
mjYQfkEeuEchgqqXHF1RRxuYSqkmeewiwbOAfXfLaW0g7SsY8/UECYKCPXn+
7GgHt/6Yl35qJMiOnMNqOdqhXjDH8/ENEsyk1cu0yLbDv3eBF3c/JgFTruJQ
O7TD6a9E55Q3JBApTv7WqdMOh1mon+W+kECl4qBmr2k7XPknwhoWQYLb2Pu1
AYd2OOAjRhxLIsGTlpWU4eftQNubYLo/hwTfO++ajvu2Q3hXUOSRErz+AHHf
9I92kDqpwslaRYKmMfWKuaR2sBbjLu2pI8H0bLYrNb8d4o4bS/i3kGA3TVB8
ubodQnk9LMVJOJ+NgO41UjssFP23M7kL58NA57c52g6J2UvS3L04H+aHynS0
dvgu5+fl3IfzYR+g7NhBBEnFErkK3A7k0Y7dzUEE3Sujs8y4ncVfYsAqSASD
S6IzOj04H1Eppn2yRHhUIT4R1InzkQ4t4gAiCPolHplsJ8EueeYH3DpEeDhT
efVKMwmElJ4I8JoSYT2DK70cI4Gy2kTrEQcinPV6+9eokgQmVwzfCj4nggcD
1ZIH7/+J7p8zor5EiJX48pUxF+dzU35K4gcReH4JJUinkoBwJzZMOokIO60H
pYNiSNBwl0NHNp8IKzWKIteCScDoSslWIBHhcGSuQ80rvP5zs7tKo0To2Psd
/XTF63s18cASEbJ4YzxXbEngFpDmobmfBBvjV64oaJPga/DhE1pHSbDOfVr6
ApAgM9J3SBvfkwsPnI7OyZJgMs1O0wDHZZ8bFnnFSQJjTITd+gMJzj19bLnY
QYSMhrE7aT9IMGH8z+ZlNc6zJSGdlkwCr6LqZqk8IhA6JK6+w3XcIfsi5ngQ
EXb1TP1oxOca28yYkeRNBJP+lMkDMyTI89h93d8d949KeyewdsAP1n0Do7eI
cHtijjh/uANEdK8ZP9cmQvZ0hrCCdAd8iMt+U6OCn4f5h84vz3cAV+wfYq88
EUypsuU11zqg/edwQN0xHE+j7mM37YBt1csoXgDHr2XfMXrQAesWgkdfcuPn
bcMlPfpFB8xfDBGyYyNC7pb85uSnDqj+sNLzaDcRWBhWtOQiOyAqsWMtjZ4I
Zoz5P55mdMDncvvfx/7h55vpyWR5aQdkWI5SV/+2A8uecwoszR1QOzrbL7bW
Dub71t/pD3YAt6Ch8p/VdsjjKCaGLnTAS6YxpSHcv4fbQ3hkuwMe5v5n6bPR
DhaHLjhLsXfCurNDcM02jufbKnM52gl3VYM5UhmJsOco2lci2wl2B/RvKO8l
gqXwqzs7VTuhTlWE3w/vp0BMNf2aXicMSv2+H4nvMZskw2agRSe8f3jHxlOG
CFbHK7X6H3WCpesXW/kLOF727Q9Rr04YvSU9WYPPl03+4uSDr51whjnFE8yJ
YK2wSyHvZyckb3d1RrsSoUix5t1WdicEPxslUPC9ZVf2IWpWdoKZenHryVgi
zvOK8Of2Thh26Nx9/zeO12Bx7hzphFvs9wVD8PuK/XJ9mQCtE9ZW5iZ/rxKh
REf7DoGrC+zcnr+eP0cCDn229DWRLvCfnMpeNiWBrUHzhsrpLuivP6k9h98/
HLf1frQadIGDgkpBKH7+7cw4Jg/ZdAGfjpOuBn0HlFq2n7F064KTcdwDf2Q6
4N49A+JiUBd8cmy5K/0Z9ztwCysldsE+h877m+X43jh1PnqT3wWPx1o8nq10
QJmb8T6uri4o1xGgaFl3AvdbU63Th7pBtHNPpo9eF1RF3i1zD+sGc0Mhp5cW
PSDDSN+cktINc+/umQr/7IEQ+/D+/sJu0JnLPCkw0gMOZ9vX1bu6wfjRu7iK
u73A1aZymv1ADxiSfAIP2veB59k+dXWRHkg8eZs0mNoHk5Hu+m6nemDrfXSR
4mwflNhnPOzT6wGXNz7lqvb9YMXIl5Lk3wPo+u+5GLMBaLDPL+iN6IGjyJmT
O3QAzrTp17Cl9wD3gQBfjfYBYIn6MOpa3wMk0w8nLFQHwZVRdCmxpwdm3tQW
8LgNwoB9GX3vVA+4vZu9fSh5ELLPrvKrMvWCWX5pRs1OMvBFfT3uytMLu9t2
WdkcJoM3o8z5RLFeYEy0KlqSJQPFHtPqOd0Ld7ZszlleJMOtNmvjvRd74XOH
5fs4IzJUnaWzU7nRC/9dEXJJv08GmagwNxerXhAOC199+JwMIYwK7xKce8Gt
JFpl0JcMDA5t37pf4/neuGfOh5DBoe3Bzz1femF14tngl3gydJxlzoLoXpD6
HJ1SQiCDSlQccs7sBfGl5eNWRWRIYVRpii/thUaPPU1PK8jA5dDb19XYC+/H
rist15LBs81thrW/F14qW7jVNZJh8izHuvJsLwRuHyXOt5BBPyqdyXmjFyTf
L9IbtZGhhPEKTzxLH1CepTJvtpJBzGFUtOtQHyy9em3Q2kyGgLaX8qzH+uBC
a1dOUz0Z1s8eVlc+2wf+Eiu3Zv6QwToqT+/RpT4wyvg6y19KhiZGffM4wz6Q
vq/71CKXDGcd5hw77/aB2MLet6lJZIhp83nB8rgPOBZ4GFdCycByTsTvwts+
IDgrPFD8SAbXKBTq9K0PJF+FJTk/JcMAo0ly7M8+mGKMEPxxlwyXHVbyO7L6
IG7WpDLpPzJkt32pZi7vg00V+c1wBVzPc8dJ51v6gM+FpezREVw/RuvFn/N9
4H1boPzOn0G45bBN1/GvD34UHU0QfTsIVW2h+5j39kN6m9J2sPIghES1Sj+U
6of5vjL/xwkDwLDrgdJPxX5odc7tGLg+AA4OTFqkK/2w4dNauLDZDyrnwFbJ
rh/WEg/Q7Vfrh6Mf3xMF3fvBjxg2I0nuA7r+ZlUm7354cpj2XfRZH5S9Mucj
xfbDrRWFDx0xvQC1r1sdB/sh+yL7FGd5N/Dz1ikbzPfD912amoegG7bsOdKU
/vUDNdDsvXZhF5Tui/VmOjwAio5khxf4vaV8s0rpp+EArNYLyzdeIQF/8p5k
n7sDADP6Q1ypRNhav8H90HUAfPPsRHiZiVAaOUZR+joAH/Nf3MorboML47sS
SI0D+HPqsbMJG81w/vEVduaLg4B2YlvsvFXAV/PlxcL1QRDNnJKx8quAzYM9
0yRLfI718ZaxG2VQUnL/z89Xg6DAKP50PLYYlHb6PTtfMgjp6m8jngamQ8QV
28X8Q2SQsvj41ONpAvJzZj0mJUgG4Sf7DpUvpyGPsEyzSAky3MtP5Q/Jy0K3
51Yb3uI6yvF9uB8jUoD4vvgk6hmQ4aa5ZpeoTQUK70q+PRNAhlHnEX5uhyaU
tO02RPcD95/bZ9Ow2ox+iWnYcMeQYVPPYN+v0hbU5DrwUDWLDCcl4hfiFdsQ
/X7ON8H4nv84Xr/XiImE2M6Sd6d343sSumuXTjYJ8Zql+1UM4edIr+irhlEH
kk+/FDRHJUOje/OvluBOZHPFI1mdYwgkwo1fbA53I2enKzLGvEPAjJbj393v
QS+DuXMchYag36ha4MFcDwoZI5T8ODkEotcG/I+O9aK4PZ6qmYpDYL13fZpo
3IeyTl2trlIbAnlWkfsFWB+qez3WvKA/BB9FrKvnQvtRR1L2DUaTIdDoZWw6
tdmPRppfdvNaDQGdfYj2F6MBRFm5dkfWfggebBxl3kkYQJtHeEcuugyBkH28
0keGQcR8ccLW5PkQUAolv4vrDiJuh9xZpzdDkPdF8mxvyCA6UaSzEvZtCIT/
m9nVsJeMzg8dfp4VNgQWkWV6HZJkdJlpars6dgjm9i5HuV8kI4MTeW/7Uofg
8Kv8t7mmZGRp+IZ5MWcIquSs4asLGTm+0PXfXTIEP+8/K+B+T0bP445wHqka
gh1Whp6XQ8jIp346+GTDEFwZJZTLJJJR4GI+32XiEJxVHddrzSGj6EPvYkz7
hiDRaNePs6VklK6iL+YyOgTq9pnBD6rJqMhWINVndgj0Y36RnzaQUbX/7IlI
2hB8kvsRaNtCRm2/CnNzNoeAJN14W7WNjAb7vM9hO4ehb2erDQduz+64UTqw
ZxgwGr/ZeDMZrUkKqtO4hoHpDdUeqyejnfrzNcxHhmHUcli89g8Z7X9afE1A
dBi0WO6GL/wmI/5on1b548MQaCpwXjuXjCRrDAy1Tg+D2KBQ/3wSGSnMC/Wa
XRgGl16mnOEwMtI4QDF7fHEYvLholxU+kZHu+d+jvtrDwP7k2fMNDzIytfK9
F20wDCUuT52V7cnovu/N+V+mw7D/dWfoPiMycssScam/OwwOPqejPdXJKGC7
1GPl8TDs+jm2w42bjMLF/Oj3eA7D/Y/GLhc2B1GytrG3oPcw+HDS+q5ig6gi
bOnztaBhkA6n3yliOoiMaemunRHDMJ9uqrFPYhBRrtkZW8YPg9GFi1au1AF0
ZKtP6EnuMLxX/cdy6NUAemJe/Su2bRjyM/KeVH7uRzKiP3rX2UaAf/PXx77P
vejPi+tl77hHoO/dWtWYTi+63bE3np1/BPz8HtQwsfWiD++9HMWOj8BEp6H9
ml8PGp2yp9e/OgLjLvme45+70TM1sfE+/RFo+qXw5ph+N9ofRq6zvTUCzAe1
Hsoe6EbK1wwCX9wbAb1BJrv2iC70I0NZPPn9CDwaNtx5pbgTye7+yyr/eQSa
Y9eWfN91omqzHEpp0AiIKY/K7dfrRDR2iSJi/AiU7BVP5pvtQL73hiPN0kfg
xr+BlYLiDiRYEf5mOncEzC8cKKjx60A6Lvu16apw/DnNHZanOtBYfb3cx/oR
uBDBor7F1IE8RLy5udtH4DVWYy5DJqFk0vqg1PAIiDZ8rLb8RkIqMr+q8qZG
ICtF6sajhyTU4f0wWZU6Ate2L12T0CahnWdHnW/SjQIt641K2F4SCguIvDm8
exQSmHeLm1CI6OSU0fkH+0ZhIddZt55IRLWqnIJr3KOgUFNZMVNERGahjYxv
+EfBi0OwovgnEa0svp/eKzYKnMw/28/5EZHfVbXmkOOj4H7NqMzKnYiE4zZz
hE+PgsTV0JAz1kRUtJkXknF+FEbPfMrP0CciPYNHL85pjMLV97PVNWpENJku
ZVl1dRRKxPdWesgTkeeucc3/ro9CuDHvdo04ER0wi5bquTUKJFXfY7F8RJSW
f4v9ruUoPN5Zq7ubk4jU2A8sL9wbhXrYPznLQkTdds3dzx6NwtvEtw1XdxKR
U/mHUsanozDw0Ezr8HY7Ejn4gHry9ShQapJL2DfaUaejroj5h1FwiZKmj15r
R75/Tt389GUU2izvzxevtiNlPh7foh+jMFZhl2OI+6nO6yUTMaPwt6OIbLHe
juKw/gWulFGw6v39qOlfOzI6Wi6klo33O7Kjw4+BiFjd4wweFo1Cdd3Euh8T
EZU2vvcJrxiFy6EXDUr3EZGziH0xVjcKq7H6M/sOEpHoc535lbZR0HEOuOMk
SERdrXKCIr2jYF1CWm6UwuctceCG3sgomLyyS+RWICJ4uebtOTMKmJ2I8Fl1
IkqQRrNdG6MQa+hzoNiUiG69+Smwa+cY5Pc+mVixJ6K9Pe/0T+0Zg90sT3XK
nhGR6/trBZ/4xsBXNMkl8wcRqQ53v1G7MAb0efKGkz1ERDv7O+/hxTEofWzQ
+WyGiJI+R0+Fa4/BXvZGrR2bRMR2wfa/VdMxCOs/vZHGR0J9wTTeNM8xiFb0
9XG9RUIB853a3d5jcJtmdLHajoTULxa/2vV5DLo25R68dSOhlbDInFPBY1D2
vjAu6g0JpSy+HjePGoNTsdf3MweQkOmVu4f8E8fA83CsWXYYCbFHX75WnDkG
59ZzsU8JJFS1IvVyMn8MpjQ6+PwJJOSuvS/7QNkYhNTvRwmFJCQZtziqVjsG
Bbtu5NaXk9DAOonHqQWvL3sqllpLQl/0CrUiusbg5V/j7r3NJKSRFP6ijjwG
mbe//cdNJKG1rZeE1ckxWDZxS6fvIqFUA6sREeoYjL0jXKvpIaE7aZrc+n/H
YPjevJJZHwlx7JC88pJ+HPZeslCtwO1q470eaczjoOM21DfVS0JPCZSM7v3j
EKWSfqWlm4SkdxOHdvGOg/eOqpdOHSRENs3nkhcah/C8fvnqVhL6lht6yUJy
HPwPbPc11pOQJqvnM/+T40AeSkl5W0VC6xYW6cWK49A3SPCfLCah9AIN8qTa
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
mE1QPSXBuQmPsqSJpSUKyYYm5Td1xbv+B+O3D7o=
      "]]}, 
    {RGBColor[0.33947851208757607`, 0.5746280997286977, 0.9224679870448731], 
     AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
3qlRtqAbWfFG96OOlpJ3r/8wjot2Q/ft2uJ/10rJreZryk6/uyCUeWvoAbWU
OPpuKRvjdWFuveaKmNFSYqE4fNm3pwvbLOlpvUo/ieY5F7ys78JuiXMi5fd+
EnnhdQ4KNV3Ik3mYtffrTzL/Q9f8xPIuuN84w0we+kk6Os5Z5ed24djX3TfH
bctIhKPVWM/bLtzW8r5YaFVOnMUHDatfdeFRzCV2RnQ50U31j/0W2AXRumHx
se5y0jSWdOKxTxcq5AL1M25VEIU7/7LXn+7CkfEtKmeSK8nQqhcLl5zoQvHr
utrB35Xke7Gq01+jLkh36e603feL2M43lf21qwvJvOZfG5p+kZhXMbfdVnbB
ZOuByWV+VcRDZzvTYkkXxj7fPm/6oYrsbazYuFuiC5eldP8UlFTxv18nOFJ/
O7Gy8ozAuBiNZBYFbJ8a60T+7MPFQWo0cv+CQnBLfyeUdCrvLDpAI6opBw2+
NHZiwQnn14/v0MikSVNERG0nQmRMy89F0kjpiPuof0UnWIp30tsyaCQ8ZI6h
c1EnVuetnBGspBHH7ZEfzHI78dlrTtaXNhrZ0aDxVzejEwtHKhz7f9PIfJ8i
89XJnejfbLA6TpxOGhStPol/4Oezv+HXKE8nyYUDc8YjO9H8STPrgQad3D7v
f6bpRSd056SGxhI6MZq7LLv4cSe+yte+22pIJ/LJSVKf7nZC2C50eqslnQwZ
73Z85d2JycCsm/Hn6CR/uLbAx4Pf3/7EqOfOdPLspeOKC86dMCqtffv7Cp3Y
av+7YmLXiXsZPWYtN+hEs/55ubZ1J96/CTQwv00ngrdVVyuadeLpvG1Bp+/Q
SbVC7i2xI514dWz7pJg/ncT8OMrgGXSi7I0G1ZbPHg4dG+p2dOLc6rdVnn50
skfM637B5k6YhnVZWPvSyeKkBZyEdZ047RIvKX+LTjqMYrSfr+rERVfPf9We
dJLJ037mtaITjzkKVwL59f33oqL73KJOhLXY9Tm40MmJbbb6R+bx602xnHvZ
gU5U68bDtwh1oiDEzaPoFJ1MegeMyP7pQLLZ7h/e5nRClVc4MnukA7UB6y6k
8vUKK0iP6e/pwPSPjuc399CJjmjT8by6DgQpSp7ZtYlO5ia6p8TSO5Bg+Fnd
VYVO6g3nzAn82QG1sOK3MXJ04v1cg3L6awc2BXXXPJ1LJ4ZaRZIH0jrwRzXC
xluATlayLS9qJHRgDpPW2DxJIwNeA9+XvevAzhezDtUO0QhW+i8XCO/Ay9zK
zZ7dNCIStHaRR3AHEhuehRq20sgRAfq8zkcdyBMRlutspJFg9xvCVv4duOWm
nmHJphFWq8JMuVcHrm0O/ZJdSyMrj1PHiEcHMg6fyFheTSP2xa4Dac4dyPb1
fBpIo5GkbUs7V9t3YO/nJdvW8nk4Lq851KYD50PFsv/wWXu5A2ueeQc6Ug+v
lK6hEZ8Acdptow4MWq4548ekkeLp9FLevg4UVm45YdbA399L1gV2pANnWwyT
QlpoxLRZ6BtzWwcm8879NOuhkTCTxC+HNDrwd90FWugIjXC+myblqvLjFxg8
cvpLI2s2T8VoKHbAVrTrZA1fP+eY6NfvZTrwROrVbvYyOvmy+GDIkoUdcNl+
rOC2Kp1M/Tf09OFcfr2OYd0l2+lEb/LV/WnBDhjuO7M78wh/Py4SX9c/7XD9
e6Hi4Fk6Ka/r8GwZacfM7845d67TiWXuVkdqWzuebedmlsfRSdSGRtsdje3w
mlC1Z/zg79/buydTatuh43BX+xKHTtz9qo+8KG5H0cmAIcWV1YQycnPvHLRj
n8ft3jWkmvyzU9p1M6sdTqtN9j0+W00e77+88UxcO//5aPpAJ6Ga0CnLVKuj
+HadG3vPVlUTmbX5CvvC2sF5c1klZqKaxM5fsFD9UTuqT3fsUz9YQ/JpSaMT
Tu2o8/J883OshogYmPU72rWjPLHp0BmlWmKY/qe90bodJhs9ho4Z15K6kEPM
H4btODH1bHFnfC0ZOdmVHbixHR92rM5+d4pBdCoC0wRV2+FzJUNhUQCD+O7a
lnhVoR1XhjLPzGQyyHzF/yJPSrVD0HphbPl8JjENXv+yUqwdGs6Bsje0mCRM
qPbJbsF2GD2Q899wmknWdKzyURlpQxBlXcuBZCZxPlF2Pby3Dc621CU36Uzy
heruJt7WhtX97R1HxplEL/H72ZGaNqTM361wczuL/Cd70cqhog2Tojb5cRYs
UvFE8hi7qA2fr7S9UrzGIlZup/cgsw0bD378EpfIIndbGwcCU9rgahL0+k4R
i6SYW4ediW3DLhIeK9bIIqzSOoNNb9ow3NiptWmYRQR2Wg4IhLThgD+W9wqz
ydpUZij9SRveXz0Uqr6YTcxWmRu8v8evL0/Ev1+JTW6H1PRfudUGYTPaEdUN
bBIndix0z9U27PjoJl2nxSZ0b5r+Ypc2zP318LPgTjaZHjTub7drg+VEX26M
HpusOVf5KtO6DeVLVCOLdrOJMeOI/n2zNuzzPurlwrd7HizrO3GkDUkWf098
1GWTdzkHX6nuaYO8tPWULz9/+Ubq7t87+P0P2/Pm8s8ff7evr3RzGxyPbg6w
WMUmCkuKQsLXteHeU5ufPkvY5NBDg91Oq9rgdtfHImwOm3hMf+/dsaINembV
V/PHWeS1q17I/EVt0F083r6wjUWKW/L0Gue24UJtPTv1F4sMHd/ZmyzYBmk1
AWZONovs0dXRMx5uxQhNUDD9IYtc+kTpke9pxZvK4YYBVxYJVdr2cojbipRw
P6bWcRbpFd3S84zWipxdx1Si5VgkuHb9i5rUVozuONUjmcgkOQeSdn2Ia8Vb
6e/b2E+ZpOPb2u6rUa1ws8qa0rzCJNvfqexaGtSK1mkf6sVdTGK7OLar834r
bFgHNVNWM8njB8rPKT6tqO+PsDOVYJLMP+92PrzeCoFtWaIPJxmEc0mxy9K1
FeLLV834tzHI3Ja3wWvPt2LTg+XyHnQG2XJ85c4/p1qRvE1O+mEBg5yiRnaW
mbdi72nWIl46g9zfsSI40qgVT+6Ep7HiGSQ1JUzXZV8rtv+6l+QYzSB1iss6
d+5qRZFb+udfEQwi/DLkmYRWK+qi7mzeEMYgG0QX6zavb8W7LrXNCXy28Hre
8Wl1K46KjkrZv2YQvwGpZ75yrfi3ctG5WzEMknQ2aMfRxa3Q9rkMiU8MUlsj
0aEo3opZh4IjNuUyyN/9T4KGhVvx8kKm/J9KBlH9Nm/Hj+kWVFe5Ct7i92e6
4VH789EWCKmW2xfNMIh3tGiQXV8LjjB3ZjUtZ5JY6fs6W9tasNX7QvCvHUxS
dX92++yGFtCPjsSGn2GSqSn/QEZ1C7xz7kTvesgkypcEdT6WtUDz6eDSzAwm
MeL6tl3/0QJGe6/nRDuTeJr9e3rgWwvqv879NyrDImU6063dCS0wWly8jvWY
RXS0lZs571qwoJn38fRPFonbeqSOGd6C9YKVCqvmscl/GpFVRY9aMNHL6Kh9
ySb6a3Rzox1bYB1w8pdlWR35vMqOEmrbAsdj8yOPrKwnCoqPvwRatSBxFY8n
eqWezKxoiL91qAXBJu3fuAoNhCLlHWK5tgX9U4Zpfv81EpUFMc9MlFowK+KG
xUFOIwmZX/54//IWpEn4VodsbyJX5sj6b53bAmabh5VndxNpEd5zW12wBa/s
DM+dJc3ERND5xqopLgpi16Z6PW8mG2a+uUr1cDE1dO6923IOeT3V6ijawkXF
XS3k6HHI/Ml5Dv/YXEwbP0u8ZM8hN8c2nx2ncZG+d+yM5QMO6R4+ad1fyoWo
ccOkcTyHWAz5n2j7zoXEQrtfq6kcUtyfaFqfzcWi7/IfUto4ZGtvtSH9Mxev
F47n5/3lkJiuPwdK47l4YzIktW4JlyzqWLUnP5qLYybNJqVrucSv9TDJCuPi
sMI3RTddLhniXNFJecaFxeF3WyYOccnppoitHx5ysY9i47DNnEsq639oRN7h
wuCSEWfuKS7RZfeue36Di+SGhG2GtlySyFik8ugyF5zPvIB6Pi+v2aF05yIX
f6s8Y16c5pKHtHNynme5iA38N9/SgksmKwOWuVpyISatvmmeIZecL/+yyOEo
Fz2uDdcCd3IJo7RewuYgF+f6t5woV+OSvSVCc812c/Fq4Pi1BCkuSS9cN/vw
dn7+/Jhs6TEOUSo4Nkt/Exdfap9bT1ZzyDN4/dFW42J8hCm0N4VDZuW+H9+o
yMWE+u/KPn8OufS1jLdGhovaiI0X2sw4pDFrpE9OigvekVsLVylyyJGMFV3S
YlxozR9y2ktrJt/SDFrnCfDnp3KpBubN/Oe/U5Pgbw7qHDNmvtCbiGjit5qh
Lg5G128MkE9pJNfjWn91cjiod9D7/km8kXR8mFfWxOKgiuFo23uugfyIOvm9
nMpBXyj8qkfriOYb/5wf+RxMNtpJFG2sI1ERiVlfKRxo3Loh3Hf2/98nf5Lj
4jhIldrl8zaJ/3yz1Tq4NpqDzatjPrrUMsj+DZfbEsM4GOxIumc2UUskizuW
f3rEwSplb+UjKjXk/RjtfoYzBzd2TqQW7qoiVLO4swUaHHyZmmGUbc4jyQqt
0wZqHOxL0NTaFJVNgvvkQosUOWh0n/fjgHAGOXn3eSV1IQfe5dqCglc+kvrz
M9fedDfjAvtx2YPxCKxZk7CWcrkZc//9Eg/8VYShXPmz32yb8baK4f1egIrs
4y9f5R1rxlRYc4So+k8cuecrXLS1GTl/trAUzlficpt5E+13ExYrRjGCNKuh
410uXdvThFmaNatklWsgLK1/mFXfhPTBN9VuC2oRYrCe0pTbBLbG0RV36Azk
vBMK7r3ThAjoaJsK1+Gezg3qgHsThDYWnluTVwcj+sBf3rkmqKdm9m53qwdX
oM5pcm8THlTnZMfkNCAhzPjdH60mfBgzX19q3giPTUWsvypNMJFef76kqxEi
Z1P3zp7LP7/lXLDMaBOqJld7i/5phFakwBZrl2aEBUWkzetrROynvrHjTc2w
VZXqlmhshMynR4Z3V3Ggnv+f/MLKRjhwFQVyj3EwdmL6+GI08t83++bX+XCQ
N3j58bLURrwZun+h5SMHD+53FqyIbkR+tINQcxkHR+Vtfq8MbsS6i8Lf6no5
aPnq+7zxTiOSJTUcF83lwt08Zn3k5UZE1MZvpqziQnC4pMTqbCOWv9i8r0mb
i+AnvWdljjYiyL5d8zX/XimpLZhm6jUi4dbfWglzLtIKNUNCNBpR4ae2y/gU
F/pnzDWOKzTip9uhYG9bLuh/bvxcJNmI0E39Y5l8tn312o7+rwEq8i7OCqe5
GNb8/jdosAEbXwx8bTjBhV9lW6hxcwOWP9lzUMqQi4WOopslfjVgnnyjQPsu
Lt7NVq8oz2uA47YqDd/1XGhGG58PSGlAbqK67Xz+vSzQvSJw6E0DvshGkXT+
vTNlhUSIPm1AWHCIy/tOfv9Xvm4tudWAzUKD50X4+rgvaPp1z6UBVQq2p+Ym
cRC8b7WwkGEDlC8OJSSd50Cp5cCb77oN6BC7EP1Rn4O0W87avuoNGHi67cn0
Cg7o6V+cZ+Y1oHg0WabxBX9+JkyRnD/1qHfMi6gizRjunYq62VuPl8GXt/R0
NWHhKv3aiZ/1OFwR+WySvzemz6p2Dj+sx+nCw0fFyhvQoj7KTL1RD82hczVf
LzfAnbrU3fViPe771Q9sWdaA4H+nYvsO1OO9w+IbsRfqoRThp5eoXQ/9wA8j
KovqkaYVW3dRtR4hnWKl91AHuku/ROecesTUX9tRtLIOtmJS8R8m6nA63Hru
YjobwzFbDOw665B+wPGM3AM2FjZ4XecW1+H13pJ7YjMsvLv+Vioqsw4y7r3b
dXNY0Fz0I/FUbB2W3ZNWLrrNgumhuZz6e3X4F07bdEiChZb29TfDr9ahajpb
z6OeCfc7R6Ut7esgHHnmlEkSE4JyV1OWHq/DHOmetb2+TARTQg8w9tTheM0F
TUNLJpTMclpebKmDn+WcqZtbmUgbbPY+plyHOh1fyauLmdAPEFq6ULoOihHl
itq/GaCvUflcJVQH3Y4B8VwOA7YFhw4HjrDRrpsr+LuMgWGbS+2GrWyM3H0c
2viVAb/fz3zmV7Ox/2c4zyKZgYUvM2TKCtiY77G44fh7Bt5psL88TGNjS8XL
8W+RDGiWTxseeMeGqm8fwzWMgYLzCl0iwWz09C3cfIzPx4T2+BXd4ef7vHT+
Xr5/5Y4n1mHufF1bB20/RjNwyIOh5XKOjQe323E1noHiJHmp3WZsCPmL5QV+
YUC//UKv9F42drupe1SDgTy5tKKurWzUDB0MlatkQMf8z9ucNWxoPnv2/mAT
A5lP99wMWsrGZuuB8U1D/PpKnpjZibKxY/ngv09CTKT8Y2zQ/s3C97Yhm8hl
TKzVVhCb38PC3gqXOb82MKEYn5b7pYyFuKGtCXanmJAMYK4RCmRBfodVOL2I
icc/FASYPiyktAwbXecwITp9sT7BjYUsjSPBK/4w8c95OtDUlAXtaKph0UYW
bn7Y67jGgAVfyeTpWwdZGG98umdqMwvHVD+0R9qyMGCk+Dt6MQvLfTuHbwez
4HjfsfqqCAtzqlaMzsSx0IEvyQcnmLh4NVn2ZB4LtpPT9+W6mHixM7rlOp2F
Ro19tjwWE3b7Lxtt+///Vy4G6haVMnHNx3rB7XEWaqJZS8K+MpEeOveppggb
JnWKPOdEJqIjb8zoSrNRvtCpTC+SicWp6xzvK7Bx4HD6B+knTDza8KRkZi0b
hf4zPl23mJhT8vjPk81s6OXss8q5xEQ17UyXig4b30YDtwSdZkLk3TWP3F1s
aK1nS9iZMGGl9ChIfzcbafZK3dt2M9H9qn1HMp83vHH6MU+TiXN9P/8bI2wk
MNJfNyvx5+Ag9nyxLhtrFvy9/mUREw80C4PFtNh4t3+/6X1hJnLfuBb9Ws/G
St8g9ZNjDEwcmX/lwio2wihskY0dDOTLxLfXLmFDmqfEFWQycLlw61lZ/tyD
1Jy/MUr4e4XPMvoTLMy3zXiZQGEgmfFDxbiNhQfhf11v8/fu+yOql+EvFoSr
9x8yDeffk10Ovw5Q+HOb90x5TQADiRZZL43esnDdexW7wpmB/2b9uJV1noXh
dOcv0TYMdPUL393Jn++l/ownV40YOG0Y+nqRGgsOpw7oy2kw0JT3n/rsNiZa
Qp7J8hQYqIiR3GkEJk79qhsvlGIg+Pjm8/phTBzXc0l0HqnFq8bowOCDTOxR
CpbOyaxFZrfQ+59v+Oeeemh6OLYWv9fKy0ZfYqA03Deo7mUt3mm6Px/YyYDR
Itf5vz1qsUf1hNbd+lpYCB8R1tpcC2llikjCklqE6xnoFynVYtnIiMC+jho0
euv4mi2sxZJ39sLemTWwHVOddufVIMVba7aOZQ2cOmaPfvpUgytrTq0wTaxG
itLMJvK2BnWvWX+W+Vdj6NSoa+XTGqgc33DSxroaHsyW3j6XGqxjvEtMXVSN
zEV1at42NchP3fyjlUfHb2Pa+XmGNRi+cuJhA42O21S0qqnXYA9Dt8TkFR35
wlmK2StqcElBMqfZmw6h3SmnD8yrwbV3Q0Yn7ejYd+vDa+ZUNe51vaspMaTj
QXZkvUNPNWT7Na+pbKfj59hzmXF2NRwuFG6+uYYOcc2AE/dKq3FXL747dzEd
Jpf8XkpnV+NwzZcTAyJ0BCfcqH4fV42/rylrZ0/RUNPhJrU5tBqRvhqiUwM0
LF11wbjgfjW8p3oiCtppsDp9+snR63x/j9yPpk00REaYl3EcqnFyZvniSBYN
TUxDMTfzahxoviUaWEODovTe/f/2VqOf+2hchk6DnYnuvadbq/HhUM1XNRoN
sY83/5BbXY1dhxRT4/ncRV0rkCxdDX8ZuZ/+1TSsm61EdIWrcabUODWKQcOl
3TK3ykbocEvaXddZR0PqLclvVq10cPXjkwiHhuHsOb+76XR0ZPm9etJBw9bx
v1o3Cui4eXBwS2Y/DZ6a4x6iaXTonf164fUYDV8v9ae9iqbjctZZ3zV/aZhO
aBta84yOnMBbx7bMoYN01m/I9KXj3h97u3hJOgpP/0yoOU1H/IIN50yV6RCJ
/N51zpiOJws7aIc20HGQRVkzsosO+tuW/M3adFSafHwntZIOFTL5xPYwHZJP
3nCixOlQP11j7GpGx7HSlys1Zmgw1PzxcsqajpDZT6zRR8OReVZ3u/nzZu2+
G27UQMN/FHFFJWc6lt/2YjWW0fD9b6VzgDsd1l/dl7h8oyF7k8MtcU863oxf
NJtOoGGj6tWXz/j7w9U8GxwQTkPyadEdgvw+UvwTL59/xJ/zf7kOBn58XWrG
TAxu0vBz1vfB4/78/VqtpyHvSIPzGidfNT4vuvZowR9LGpZcXLbl0x06OMU1
A4yDNEjt2hHDvk1H0lL5yrTtNPg5l45E3qTD88LF5KdqNNTjD2vAg4692V8e
O8rQ8LLd4kOxCx0L5/512idGg4+IyBE5ezqarA4cVvpdBV1PS4d+KzoSEoPX
/u2qgndqstZmvq7XpxvE6lhVEHPziO/bTcceQ5XuDGoVqO0BZjKb+Xq+uUx9
RqnCbSO2x1clOhoGvn10iauCqvmGHjp/XvFE5P7B0Cq4avluOs/X+VqQicPq
B1V4v+OGza0uGvS54XsFPKtgMX1JXI6/n/V+G4WzT1QhYHfH6MpoGuKqb7S+
2F+F77ZPfrz6jwYP5cICt21VaOiZVinh6yRebHFHdWkVhFQyr9zbSEPdkvdn
hOdUwVr2xJatkvw5/qrzye//hQQitLRxkF/nQuGZjcm/YGl61sY2qQotoeYT
Euq/YDZrZv1j2Sp46fRmFM/7hQerSw1uDfyCdIOPx+3eSlgbMYLXvf+FffLx
vP6EShzIYMsq8f0SPvzpLVerhHeAaXliXQUM9gcl3BWrxHZex4rHgRVo6FK+
qNtdgZlbYUnr91ZAQt2oIzGuAuVfQpfYfSmHe1oU55FKBc6GByrJRpVhntnW
t/pzKiB/QVYk4HQZYsZKbaY6yiEoAxGeQhkY2iN1F2PL4WFd931pwk+41t0P
U/yvHA6bi+XF3X9C1FvWgm1fDsntV1JtdX9CB3trD6wux11nExkvVimqz9Q9
nzWbz75fnW0SSuEs6GpKaSvD1Yz1v5pul2J2jJCUW2EZhDsM+uaYl+LN3tBf
KjFluDke+bRpYym2dao/bfYvg2nghdf280tR9eD7kVfnynDt8bTs614qHNea
zzM2KMN02RVNv/9RbN3xVLhfWL7JSBFCqCSEhDIrOVZFRFZlRoqKJKRhZCck
mkb2TJTtmsd2jcq9uK7ZtfcqLVS/+/vz+ZznrOec9/28/7wfifhfx2zrlv3t
OD11VoqjkIgeWW0sM5vb8R5RV5wUR8TxgJzT7ZNtOBvAZk8OJqKpTVhIHrEN
z/56WcvsTsSmozeantL7VNq3b++Vy0RU2nlms1tEG65F3L5JNSFi5rKklqlL
Gz758INgcpqIvB2sAUrn2pDNKwwaVIn4KGumlv8IHZu1BHApEPFXQOu/Ne42
1BWiWR08RMRrNm/Vhr63IlfOBO+PA0SkHn3sg72tSGS64mcuSkTdnderUspb
0cRWneW4CBErlnXWA+NbcWwUKb77iCjVIXHMwacVqx0Tp5np9rgslvs6l1pR
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
fo97Jn6zRu0qRDdvnpTDHO/xHI03p+JDARKX5CrhZR5+bdFuttUqQDfK9SXL
lFwUU9+b2m+fj8S0gQsvynNQSrnvgfiePPRQQwmm2UwsGd3JwfYwA9sKBjS5
XTPRQWpCYDkiHfeK/bLa9yMDCya5c+repGHb1sPRJxgz8I5C66HZhhTc25f6
+45AGn48uUrmufcGPfSROyg5Fd8H73UWaYvDNhw49Ew8FT3wbqeTeCx6ZPJc
fn8kBYNW+yjaDK/wxRT7y48vE9FJ6DpDlk4U0njvDhdlJmCk8CdMZorEg6dG
DsSVvcEgjus9x16GY316SYVDXxxetFeNPMryCLd37918djYWIy6W/7swH4QW
/4WdlV+Pwe6vKbVyCwG4YmdD+yf0Gm0VwuOaw3xRNZooOXnoFZpyPIs/fdQL
Q2uPuHeovcRQUysdqvA97F56U1Vo+AJNyYfvD6jfQeG9zFtibZ+jaL6sqF+M
Gzob3DZ8ePsZ1n5/va9e3BXLfAZirgZEY22j2QlKtxP+l3dyVO95FLoeN/E+
0OiICYRLF67oPEVb+ZU2Xf4rqMCnMCt34wmeC710o/CjLXbcYfH5Ex6OtSt/
3q/VWqJ99yBHW95jPHcxr34k5jyuHSlIffX5EdIeDAr8J2BMv++CFe1XgrFW
ZGOX+R19lFw2J8pyB6Efc+Ep+ZGTWGsgY7mhEIC0i5/51+zU8WIe4yLxvB/a
jh8VkKpXxmG+95sOrnijMF/4xuZIOdzWc/5Ao8J9VI953V+8IIaqz/7pW9+7
gwzrvFy8UoJ4wzDb7UflbWRgrmnNzN2Oh3elyu3954QMXu/fxyn/rYl8/s3L
KOQKMuT/bt/UO1VDEQyLZBa0QAaPc62/wok1wvsszlCNTyGD+rdXpqWRNbk9
D/c90JABBj8Ozp+7tdTWmZ7ktZUbAwNnzkTT3kK1ZJY7W4t6bIGh1qL8unG/
mlbk/lo/g2vAkCM/F9T6TW2Sm+xh0HILGE47e7nzbIFG/Vqe7cnu4GfQcVC6
kQdePeVb8rC6C7VunyXlHuwDR7JL6wC/F6hPm+a6Kx4ElZ3NaZo9vsBwZ/QE
bsgDE72nbh1/UE9x13vOowouZ49JsxwIBNtxyhAzqxZQFq/GHmcKhuQw+ejs
HboAUdFbbo2FgFyEgPj+3ecg+3C1e2pdKJyT2tb6W88UOLumaT1JYdDZ/6bW
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
/fWQjDa5p3iNf0+Au3CE/0VHMnL9J6X7cNMk7J4f7Uk7R8Zm823euayTkK44
2DV4nIz385ff9+2YhMFAx8b/JMkozdw9skVgEuov2PTy8pORZl3GoyAyCTIK
F6W4WMn4vDjutJ3UJBzTSCQtrZPw1FbfB5FHJmGtUG4sa5mEa3Z2eZXHJiGR
/1Og3BQJ8wjatGnNSfBtnv3u84WEthwS3Lx6k3CuOCgnoI+EPA5bT2mZTMLm
KzUmsj0kbKlavOdqOQlxlZK/3cgkfMBNfpdgPwl20jnbjpNIKHOjZLjNaRLY
tnWHuNPxSG3Mjl/uk8BSmvd9SxcJX/B5a4t5T4JyaUnyMD2ejsulu8ZBk3DU
mjNplJ4v5Ics2/dwuv+hwrT4YRI2+DIkvH4+CY7yvemy4yRkYCbJHoufhC2Y
Mxo6S0K1pyn1g6mTYPhNclv0Cgm9+dzMHuZMwsBmCYvDv0lYnqQ5va9wEoR6
YuONN5FRIX9sm2PdJARlOfSWc5HRTaU4mbV1ErSvapztFCTjh9og+dzOSXhZ
2z7AIkZGKZKY+cqXSci29ZLyVybjNfMfc8+nJuGPoWVHtDoZM0aafZWWJsE+
6vsdB10yCn91TPf6OwlnbLLMN1nQ5/1ARXnPlimQ9mN8Fm9HxnhG1rbabVPw
w0fkR8o1MlLD+qzsd07BtYf39zDcIiMvd84S0+4p6JnVuJbqQUbT+AcB2aJT
kD8Qs8XzPn3/9uvt1JOeggcCxVzXfcj46Z1g9oL8FByXEI+/4UdGdoX5Y1HH
p6CEtr/wRgAZz1RVfTyiNQUjh2sfWASS8ZH2E9ueM1NwxJlbUZqOGzusv901
ngKXCm3dLn8yMprJhAhYTIHPlZtG2vR9VR/6y19tNwVMsQYid7zI6HP187tL
16fAKKaLbOVJxoqFJDXG21Nw64Rl/Td6/b/uuJLS702BJnNTgjy9P6W/6ldO
+03BwqyaPd8lMrqH7Pg582gKXtqSr8SbkjF/++jjiKdT8E4zX7dah4yLrwqF
ZF9PQSGobvem77/03sAPpMQpUK/rY6RKk/F6lommR+YUBOj7tJKFyDhetupY
XjIFNSTHnoJfJBRRb1qzrJ6CrJepn5Po+3KJ+PLJ38Yp2KeU+As+k7CfqlSk
1T0FqfzaH8qSSchvx3xqcoA+j/NeoamPSGg200sNHZsCg5ZPOxxukrDz972/
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
WA==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1.5, 1.5}, {-0.4999999387755103, 0.4999999387755103}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.4461920604428*^9, 3.477234765618*^9, {3.4778402306070004`*^9, 
   3.4778402600889997`*^9}, 
   3.635066740643023*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJycvQd8VcfRPnz/EaLYjnuPux07TuLEiRPbsRO32GBM772DQKKJ3pvoTQIh
qiQ6iN4lelEXQhIIdYRQBVRAQkhCXfPt7DkzZ8+5Fznvd97fxXl179mdeWZ2
d2Z2drbdoIkjho0eNNF1yKB3Wo0f5D7CdciEd1qOHS/+5PT/bLbfXLPZ/t+p
d2z4v8Fmo3+M5zr+o/9lpPzfTuDi4kJfa18M/T/86F39+9JH9fx9pv63iuoG
/pv8eRNuZoj29tvyP02grLIeJu1+AL3X3oOwtKpM/c8n4yvln+YfLoXKmoah
DmiZov+0qrYBdoZXwMKjpRCfXZOvtf+W/E9TqBPEDfW7D93X3JOfHj73IK+4
LkN+7QwXkqv4K/zMP1Jqe3xnzrA9rIJ/23udbMp2V+3RCapqGqDXWtmj7Tfy
XyfwOVvGTaXrlG28UG7qGikrLq8f4qD3yfrfqgWr/TeYm/a7WM6/u22mJDaz
mlrnnw/zK4YGEyVOMG3vA7vfnU6o5GYHNULS1awau3dd/IsfR9LeKMZP/H/a
vwJD/nma/ruaOgTR/LtVpx7+TyR5nnzYaB95KklNYOkJ/jmCS0xcFJphpqoJ
3CyoVcVFPx2zveR/ImyYwMVKWHCK0Y2FsNHbSri3KXseUG+bgw2BE2HYCv10
xJZiarys0hiGAx9LWBNCWn56GnxtCC4RutKg0vam/I+zlA8qLL21/nwZi7/n
niT4OXMRBD6M0wl0hj2RxrhZdPQh9si//znGX/7+emW2Qyon6W3UChGqA2bm
/gd6G03g550x8ELyEJiWHwC1DXW5Zmpz79eZ3jyXWMlvdtiQBc0S+8BTSf0h
vCI1VX9l1aky/jkiPm5nCb/y0el18pXXUoZDPdQPaITm28XmnoVWGT1vzJTN
4Gdp0VELzXFZPHhhwMb7kH2vjpXmqWtD5VtfZcy0EcEz9vMghuNXK2FZkIHO
Pw4f5J4m393ZGMHXsmtM3Qro7Lr9d8Zsm4napogovzYpoETKqptPIRHwasR0
JiCuMjNF78x1Cw8IuJxRDbMvpjPN3+0K41d+ylzweJqbwvkkQ/sn7tY67+5T
9JjOc8yU77tsaObiYw/hQnkitPFLpZf/dGEtv9whe3my/hYuK6pcM8TM0Dc8
SHvLGTr6p/Nbv00aACV1Fbb+jXCw//IjY3gcK4WM6nxo63uDiPjioj83Nz0/
wMKBGHvqOIQBuWvh+13h9HL706f55WeSBhEH98rqTRzcL6+Hv0QtJw56rC2C
55KG8JsHSqMa5WCDQoSvWJL8is8LGNOIiIF7Mripf9ycZuEAl256GaHoneMN
nx88RrSMPWGgiZ+kqjxbkv5qer4xJYupCzKriuDpOFcnGmMp6/i1MXe2NMbB
IpWI6EcwNG8jtN6cSES4bCs0EVFYW2rLNrOBiq9MMfDZzanw58At1MKsgyXQ
XGlh0/3zOhvN4PJNY7Tj8nmw9LL8TZd1d3hEzEkK4XdF043xgqOAmsPRgZR8
tzuEKMGB/XLKMG7tcGm0lRe0E6iFyFuP5PT43oUV1ILb1mL4MXM+tzA1fzfz
gqYDvTpVmBbzCvbL3wgwbfT+luvZ/G6LxL7wQAyQfo0wpJITllEuyflzEEM7
fHMx/JK1mJucdHcnMfSK3mrZo2pu9Tc6pbi09VRWsaDsXG1iD5/BlOLaOC/f
mD//e2s+c7rPsGZgyfGH0DXbU/7m290h/H5AVJmcAuj9S+VJDjmdqLdZL4hS
V9bAnBydppncJtI8K38ft/nDLQ9i9yX5nyZQUlYFGw9fg5HLzyLrTnrrD4VF
oI5639xobWKIc9WneWfYezeeW34+ebBY4hpssTrFdYK8c1eyICjiluhEaxOH
uzr/fHTDXb77+cGjTLHPmTJcrbhdr3uBDlEYo//tzr1y8Nkfh6TbiPYHj8wz
ll+eNkaeiXUzaL9j0P6isAeQ9iwNmRflf5yhuqZOotJ/XqD8bA9K1LuwX65n
5R0SLIjGBLPd1xbw34Oz7zvJPztBWtUdpj5abya34CFMWxcsmx+y8CQUPXik
d9FEtU7BP7RUa90ZPgncxn+eJ5we19t+es9O0C/Xh7vog/9Kb2qU3uCBC2kw
eMFJ4kXrp7m0eFVW5t09LFFpntBXsFJIgonILTFNazer8wmwl3Ru9p1LZbAG
zQ9C7vQR5Awptw1zoc+6+7j22IilXluyDcCEgfpGqiuzhPObFbXS8moYvuQ0
97X+0FVGzeOwMTkvjbhJXXxwbjX/eeyOEth4/yx38Un6RDNqFlUbrXe7txH2
kvIM9vquvw8D89Yxe70V9oTnCm+lunHf+x5Ecj+3zGg+qqo1qd/SHZe5O3UV
QNvoPxlzuDuXfZn83eGYR2gxc3fzCw9yd1f0tk6EZ3AfA8TnZm6J3k8T00I1
7nI4dfFG6DyTMIU5zF08kdQPKhtqfhVNZG/0inPc9bJG2Pvm1lyDvf23+Luj
sY9wNue+Z+bvsaL5sj4nBF/N5a7wE5cq/X/FwndG3wleTxlhrFWB2fyd36Vy
GHtnK38nLA99rmsuzMh6mLTmErc9xzeMXGdccGhZ9oi/zK//9ZoHzUR55eWm
gXWtMsvW1wFwY3ROLsXlmDi5dqNA/kAs30ztZAsn04IMTraElKNtz991yV5J
A5nAamhogJkbQ7kLZA6ZPHjlETcz94h5PvAOKdC/awHLhKcsRhh/97d0GRaB
lJQYSE+/Bg8eFOmDuRnECkGo7IRekx4DBk3YoBmXFMht9cla66R3k1lUCx+k
jeGvdpWEylfT0q5CQIAn1NRU2Xo2gqSVzSlrg+W6dSTWYHPO4WITm2tC85nN
FUEPYUvxRf7ujzfGyw4ePiyBvXu9kFXbTQ1ZzbhoCqnZ903cHg+7CdtCyxnU
oHxTb0euPdR7e1JaSKEVKfwdWjZeaybATz89Kz7PQKtWz4OPzySora2xXdYH
kpgzuKuxnuehuKyWV8BuSYavIKwyGOx7X++rqQwIdcxezt9PzN4CM2Z0+w12
hI74zy/A1q0LZCfdHQA8VuF2gMKtMAYwAsfYnjBzeyze4BZDTdGPbppsv8mz
u0HLlhq3LVs+x9ze0DB+VWcazQHqEZeJVSdLWZyzzhiuNHrlYqYxIl7CnL5X
91DOJTSjfN3vDdkd8k3cL1s2gjmN1PvEhRzXBOp3y8l0Bvo/yYa96XPvFEwO
eMD0oPU/4e52/v6jwK5C37V+Wrd+EbKyNBe4mwOU3fW+1x4w87vmtMHvyKAk
k4kWnWHwi7ZwWX2lid+vBrxlx+/SpcO5z1Qz1PceCPdn0SnufpRfHnc98UIi
d/3FzRkYE+Oue4jJG53vN5Wl8NNJf+CunfR/jxzZaIG6CZou3N/AxSGE8tvJ
xkQg3BScg5gUdN03KPPRc+fai79qXQwf/jXU18ugn61rIyhLVhcarI7ebLDa
+7ThcD2XPAidfINVYYJjEOCF5CHM6ntr/2XHakjIEe5Tk7ntNZ3jQxdvcLc9
vTKp11EhUdxr9xwvKHxYr+tccxlm+DFzAX//4cp/yqFz4sRmGDr0C2MgPw9V
VRUmfNH/GbH0jOyt76IwmhLQqmkuBiG1eOVRBsw9VPobvcNxO0tkRIS+bh7f
C35s9SzMmdMLtm1bSFwGBW1jLrs4QHucTgTaqsRyL69bxHKbc8e4h7dTR2IY
nFkuelgPr6S48PevHG4l58Tg4MOii38Ry926fQAVFaWOcEaDf9yqC7LTHqty
qdP+YUZcZMydLShN7vRMQhW45fny929u/05OS/hcunSI2PbycrfosROcuZwp
e+qzOJLn3WGb75lmxLu1JWjRki4N3nQf8mruKyO2CfzQ7x0oKtJci+nTuxKb
AwZ8Kta3+l8FurJa5TmHCGkffJiJENaXaArQwaWVL+1urVjUJ/NPngntDGvW
aGZ0amoMqhpPH8uXu3GvWkzJ9rpOUGTiba3j1XcYgnYRe7jZhYWH5Xs9qeem
YrGsgPFXVhq+26m2kJ+fTQZrjx4f0siCrl3fu6x3hKs6ru59llzhjlx3GqsP
+t0YwF53roywxk0bfJ6I7cFYt13ckliBmzevk3QjI08yh50dYD1e/1tEwv/G
rjB56evI9GroGjvHmMPPdYCCglxit1cvnjOhTZtXUs3wog26cEskdPcu4P6+
jFrDjW0rCZb9DfErVo3D/hsMBXz6ah/2eY8f9+fO8CMQYEPjenoh9F4ax5b5
oO23eLb7WDeLziVW8ayIm1NhYcfgxZNt2bJ3DfEA9Zk4sQ0r0cyZ3f8niJHl
+ZsjBMuFzPK/ItfasTx93wNiOfBaJfT1NSa23yos4/qjsnz9ejhNGr/Tf3Lr
thFOx8+bETOZ87NlcjMVDUXmfGtwKfw46H1lDDtDUW2pifPBg//JnK9fP5W5
jNLF7u53k/vr4HuVuhNeoPydsQPgDJv8F8hJibgbddufubtwYT9zhsbGgwf3
HM4VE/Tfp+eaWX0nYi6zer48wY7VzRfvw3eD3zOxml/7wMRqly7vKqxO4z6T
zCiXWcJRz18Zy10nV8k9J9x94a7n7L4hl5/m13tz11EVN0xdBwSs5K5xIKE7
oKLsfcpwflttDqPueuaskq8/rGxglN0m9JVLLKHcMnMho1xV9Qg6dGAzEgID
tzSKsjV69fwVd2Y1tUpuk4L/JYPV8Ruj4MefnzOxGlaRamJ1167lzGrPnh8x
qxaU80vNoaDfXnXhrtEyxucQ+4DCdvKJkyw9e7Ejd727JMzU9e3bGWzjJCVF
Mbtkbqw5Y+wHfLfjDE21E+/u4Cb6rLtPg/WX3r/AX6b9iYF+P22MHl5sAgsX
DmaQBw36e2MY3ykxM/p03Ahm9EFdhR2jfZZckM0+E9yJGUXPz8zoLWY0JeUK
95moYvwE3CqsNXXdIqG/5OSJxH60h4qbf9RzrxXxsufX9v9kRHEKjCgOrQTD
h3/FzPv5zbms/3mZsmf99d4jhO7SoqNM9+jtJTRTthk0AL5wedfkdFU31JIm
7969wjQbFhfnO5yMNZSbSSPUxOp1jdWnEwfqdDeFS8qGdLelsRqvB1oSqzOU
iA6xKuxXJmHzZo9kFd8mkJBrROK6+xQQxy/EuXBMJj6nhuDt5pUj23l3/dcM
78DcdXZ9bt26kPscNuxLgneeEm387PAu6mxh2gmGd/ZBNt/auU6C7zq9ZJoP
aUTTg3MwadGmTTOZkI6PxfmxLL8cO4JZvq6wvCpXY3mDwTLuo1lZ3rJlPrMs
7GcLzGqIrtfGO9Tnq6GjISxem49z79fR/Njylzfhzws/U01Kfdg6i0nhskmr
hDHLU/BUI+EEPjm5iSPse3ZIkw6fVaceEmcdxmn6+Vx8f+bsZNlVO866dn2f
e5s+vcvjVbgJ+ssGm5tuEwGvhY5hNvOKTWx+sthYBr68OYPZRLNYZVNYcebp
twkcizP2w/puzqPO3jk3SQZv0FSvrGmgzn7u/E/4asqn3NnrKSO4M3RoO3Vi
Vx5OndrBmGISCvXy/oWVbNt674BTkTJqakSknKDj9J2yhU8TjFVo3f0zjWpL
376fNIapOuT7b88mAt49O/lxbHZc2dZw61KGmdjs3Pkd7vjkye1WTNVdlB7r
82nY/SFwljTF0c/EZ+DG+zzZ/9K7DfSb3dIUF6FFQWV59uye3POiRUMI36HK
DuSbIQuIva7L90m3Gt3r41crqbPOHmdlLKtXlhd31sduNDpDZmaySX2Ez2Pr
1AjImBdHVPTZfYP5PjFb8n3wosb3ABPfbWHu9kkmvu/Xldnxra6zixcPtQC+
QNkd777xNnX810MLeJersKQC3DlNxgnaDB4M23Yvx+WGO459dMsOA9Ua7979
92jFsBmB7hp1+1r4DEK9z4JjtN8F4Td4Ve269BpO4/DtLcOCfSPF1a5HtJOw
J1XBJOpyY2283rewFAyW910nlj89uFDd2AP3HQrLQ4bA2ZADGFFhAmLsWG6C
xiJ33qvXxxas5x0ysO7qm00d/3u/FwdP1uyPhZl7C7jjdm7TUHek4UQd73kQ
Ycd5dnaqSd9yc9Nt8ldiXcecLnVdf+nyRG1dT8B1XfQqfoPB0OAkRRVW34UV
K9xgEG+MOUmvm/ql/TuLcjWm4rsjjE31DgeimPt9BvcYCp6xJ9/gfuR0wX0O
vJc22uEWHHEvjFYT92jEmuy4JnJDiL2Dwxeo90kxB00B/gl+17n3blM1wwIz
A6j3RbrPr2KAISpj5t6pwd7czjF4NmaUhP2jNHcYteKshnxT8NgeZ/rZvsPb
YfW9IOoQY3j1eq4edWjWsj80Brqfsoff8vB5ZvuKme2J/irb62UbP2YuYLYV
A5SpEPqtOElbLXirfsK/jx6jjgNLr8IUH2PvrY/HYe540DJtnRqSt4E7Hpa3
0a7jefP6cscrVowkvNPumM3Xp+PcJN5fZ8zCTTjCu9/cY6afBcdch/Squ7Tt
n1tzz0698vJuWtTrVqMGnrdj3k+WXjPtO/aZd0jh/axsw+X2JuZ9xG1fO97F
GGMyli0bYQFddR8+Pb6LOsbYL247Uscdx60wdlHWykkKFZs7/ilzgV3HBw74
KN7aZxroT0FomjnP+sn4wRL09lnLoF7Zr+s10Ru6ed6iXqPTH0rv6Zmkgdwr
bpY1NrTOndvTGOiP4R1naXXPsuO4pXa8Lyk8ylS0zFxoR8WhQ+uZigED/mYB
XXUq/nTSjzrOqimUrSzbqe3ptRs8xJD2es2LEDM5d/z7tLGWju2NUNyIDde7
PXW9UkVea6YpDM7TRm9KlrZz2dV1InRZFEU9X0jS0pI/TZ/MPVOQTWXZw6Mf
97pqlXtjwKspHH8K2kz8Z1Zr/NOeZrshQw3+N2j8i7m8Uf5v3Lhqx3+CGX3V
5fjozFrqvaJeywq7XVQGA+YcgNbdv+Pee+pbPNGPbprSIGoa6ky919bWQNu2
r3LvYWHHGf2zSl6szLrR0J90dycxIRezjgN7QafZh6lnTD/Ep1P2Cu55TsE+
O/T37VvNvQ4f/nVj6E/fZ/D/h9Prif/yek3OuNEp+e/xvYl/DCiJoWHiv7qh
1sR/XV2tif/w8BNm9JvKbSR2Ts5rSXLPJQ9y0ttZ6R8Ardr/QfZLvWN+Kpqp
qtmKabFWDCZObMM9b9gwnYAXVqERgPDPJOCVdVnaq+16/Ac6TFpPnW7SD1OM
u7ONO+2vZF8Ry9evh3OnuBn16FG5rcNj0XfM/9NJA4n/FX6C/w5/MvH/oKIe
iuvKTfzfqL5rx/+kSe2YFF/f2Rbg1Qzrt4MXyY4/SBtDHR85KiyEls8rcXUn
mVGLz8vCI6OOz5TF23W8ZcsC7njs2JYEvJqM3WlbCgHvW3we1Kdj5w+g/ajZ
1OncA9qREZ97p7jTf2fMtgMeo66YpkAdX70a3CjwJv4vaRv2b6eOJP4PH/WH
n1q9aOIfw1v4vJpiRElPlV2z43/zZg8mY9y4VhbghefJHf8uTNvpeTPVjTrG
GJDczFqezB3vCy+SPXxxcwZ3vOn+OTsMrlw5p+4Oifmn2hamE4W7HtRtm51x
hL6Sbgfl5aXy1bZDhlHPA9Zp8+yJh7HcM6ZRUM8UinVz+5Z7DgjwbAx4lX/M
K0P+/54+xY7/ZYnM/8EIe/7VmATxHx19xo7/62b01QTaVyKm6REGF+odt53w
7c7zL3DvbmsTZfCpV85q7n1a/m673ktL75vWGrH2MvoHow2P8YeAMEL/YnkS
o5+YGClf+6VPO04l8M6H6KS7kFSVayPzUg1MkMKtXTuZe507t09j6PdQTC06
/iCsNeJ/xoxuGv8e55j/kWsTJP/dc4yIxVQH/D98WMzZOsS/jr62QdlMHlNT
jb0XL0+QFLybNspGJPTt+4l8vdOMACah9/IEmVw8PT+ASeihb8uoaihsK+7+
2DFfQh8PAVKXX+89Q+jHV2Yz+qdP75Jv/dzlczrUMn51MJTWmNNlrlZm2qF/
5kyA6rI7Qn+8zn9ljWNHWvCi8P9n2VTH6TsN/pddt+O/pwP+Bw78O5Ny5MhG
C/qlj/EnW2cu5vhDdXWlDE9hCx3Ge/KuxMo0cBMehk/BGSbg85vT7QhYssRF
8azcSACqE/nFweMkgDu1fBwQ/P3nybdatnmbBNBvwQU4FnoT3kkdxZ0eKDV2
lEjxcnLSTAPv/v182x/ld82hoTIPoo/5w7JZk8VcPA7GTZwBi9bvh5CMcuEV
AzUBNflwYd0MGDtmCngF5kBVg/yr+K6F+O4uHPeaA1PGj4QRw12kYF1chsOI
0ZPBY8MVKKnHgfV4oZdUOIZdeGcMe01NlQH7uOUG7KkS9jUFpxmBf940Nk0f
A7tF7oWlZgLotNbsgr1MAOadUQvtXCezpeel5axMu3iCCXgpeagdAaqD4+Ly
L5K76sd+dmQ/Ben0dGH5zJ8/QNuobAq91tzlX/ddFAYui0/BN+lzqd/lRcfs
RI8ZL+pea0REkO1j+d0TUF+eAns9RsNwtyngG5oHj8QcVlMUBwFzxN9GTgf/
6BIQ9jr56DW3D8JMN028I6ZsgawqxE5Xj4ZKuHVwJozE7yauh8SyBqFbjxe5
dbvxt1eHNY74iAlWxKdePM6I4/lFK+KHDxuIDx36hUXk2ffMBDRP6CcJWHUv
iAnALBZqoZvbCF50VmtJK9089/Gio0aFCXpar8jSFQaYTabjCkmaXOlju2XX
zycPphlzxIh/G7RvyDI2XaNlz/+JNBLY3W7727GuGrZbty78AwupDBL8JoOr
ywiYtCkJyhuMsGpVzgEp3BHjPCGsuI7DvWUJ4DvZFYaLV8atjpJDmWUu5oeS
qEUwRsjXbfpeyK2GRmWead3n1Tc/VciFejLlXUa4GJDf0Vxtr70MOWaCWSFP
SDAgx9ni0aMyW7wq+CaQqsSwuq3NpxG33fDQMRCjjbhm4DZ1JP+6x5oiLQVw
/nFokdCPJYBJuVZC0NhGmRMxgjCWverN/zlwi8RAuOYk+/btf8evTd6eZaxw
12Tvn+1fwj3j0V+r7IUjw69PndrpD/qfa4vOwYLRw8HFdSpsz6riab22AE7O
HSnk5QYzD+SCcOl1WThBXVku3EjNgpIaGsv2Ms9rVOZNIFk55CIPtWpo7ygJ
cYS265RRioYg2kE62saeQERFmh3awoc0oX3tWqhV7PHK4dzOG3KIkOMPY5mQ
1avHESGLVkw2qWq/+dqpk+ejDceGcutV8NWcg4MH15HE1QjCx6c20k4oDbJ7
9+6alueVx+8acRxvLdP1my0+3POHae52PWOyLL3fufM7H7G86uDepfkwWshm
+LjVkFzRwKgBVEH2jqliOhCynHkQhKj0se0E9VWFcDs3R1gOOeL/w3+bi3+z
ITlormzLdYo/xGTg97lwt7QWo+fOjaiBUk4BuqzP+xX05y+zon/ODn0lqYYx
UNMg9u9fY9EAdX++nW860aAmBol5k2jYtXulaQdtwoZYScNbF8c7zDohGlas
GKlEj4eTBkxQTpV+eNZHakCrzIWkAWpQBPPO9kYa2UyTdhXKnn9Zu9VhLI22
fnEXR9WiO3cybR+SqBvKIdFznJjGXWDk7OOQXwuKGoghHakNaZfRCyG0uJ6t
NfyuNNYLxg13EXaekKyU70iYE1QAtUAWoGOZh98w8G7ve5PwDlfwnjKlI+G9
c9cKM97rdbwvTDDwLrTHW2DMHC9aNMQic7W4w8+brxMNCZU5TIPwJoiG8+f3
mSpH7A3TArx/PGbsiQ7Sg78qDUePblItDZI5HvS1Rq6ET0IyJ4dKD3kjrSxz
950lsGBLBHRbeoDXu5tKBI96VvM2QkKOvqGLAyd7j1EuLDApvDGLILKE683I
mT9ozkgpujFLrkBpg9FsZbo3jEdDXiwWO7KrmlGfNbch0MMdpu24ARUNbBf+
X9eEi0rhmNb+SSQUSlrUhPIJCQVTMtUEjYDQe/+TUFTzb9CgzyyKoR60/nH7
FaKBtqYwLi0WFKIBk9fmKjvLGKzA2PPnAUaQ+Zubcy00OENycrSdBRiia8cQ
XyPK85YeXhQOD4G6bdsifnXatM54WtRGh7/w4AEm2Q7wCIInrw0gCvCwgRUF
YQFwM1u2LCAFqS+Jgo1LPMDDw0P8f/hvC/BY4gfxDxUFqcqCrVNcpSfn7pkG
FUqzVdnbYIqrUJDh7rAytYIVRKwDlRl7YeY4Dwi8U/P/V0HUfZeWW6+ScMgZ
rq2tVoWDIC84YgjngBCO977YXxWOap6TrXjNrCVHYpWg1M4Iag2PCOGDM6yT
TgXGtrBUEf0cizpglLyVv6/hF8YbvLJfW9cgk0wL8LfElJNkin56SdeYfhuU
uKgeF5yav5tQVl1cb+/xePrDRoGC4vJ68D0SD6+EGYECr9snLdQ4yfALnn7e
5IunZzVSpk/vyr/7gCRamQHrJ46QujHB5yZUKrhW5wbAdOkmjoWl13ATksyK
J+Q6lLR5Kkz0kq6E/thph1QOZ9QNdxrNMYYk/rs9mnigPajc3BssiQcPikwF
okgSLTcb+74vxxsRWgoroUtaWCINSeYd12X6XZyqG03Vckzw7e5gKY2nkvpT
FufVq8EsDbTo8dl3uYImePQB8FkVEqpP8E9CSn4hjz0UAg5z6Xf4CG9/zlag
Y43HjvlqswhJ99WIGbJ7bZNV63/cuFbc/7593rI2Ah9XcYIU4QU9KKuCj85Q
wPhJaBXiBerjf6mcSmbB0I158HO3r2VzPXp8ZBgWQhE2/C+KEK8pgjbsW0D9
g2hYM3kabEur0DMy/y9TRFNTUSQH6KtxbkL/0JVHVvQ9L4UY6N810Mc44JyD
pYx+n9n+8JMefBJmvXmaaArbQw1t+2qfdjTqjVRXIubkye1MDJ6twyc0tYpm
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
lSoGwvcdNJdXeKwcrhP/UfV/TVgY3yeH50sWLBgoBP6mTCBp5fZnLCOtZSZG
zKAro9w8Q5mXpTsu0zUvaKLptoX8tGv3uliTa2gtCcvMNK0Atx88sC3Vv7Pm
SL3n+w0jIfTdTmOxlrPqkFXV1nLaLG4cYL5Pjx4fYpUbaau/ve9ncld+2W0c
R5+66471tnbSIZlqLlNPhaHRpTsMExo0fPRMSK5oYH2FKsjeMVXMxi7gNvMg
LA8OY33FWBcRTdNqXXEUbJg0BmbuSgAxbVKRLke6aSfLhP7wTddXKHhEsmyw
BKYxDZfqAZaUFMor2fB6aox8fDPzn3wo9ZWIaabmBy/G7W4NCNdlxoU1VCQf
lzM133/QoM9wtSXJqiF4nAjRrdtkVs40ByUyfvxZW9nmzx9ADGXcv29nJbyl
w4cnMCkDstOmTBpYnsfNl3vHpORzZq01TrJ8uSubNjjpqfE6YW+zOlrv2v7A
27hoRHWladdyg1btVH72XbtGFKv7DB+dWUuXreIJr/GrLzHFeLe8kCRpHZqx
I0Z8B+37DZS64TKsHdyuqjW0rh5KIhfBGPxq9ELYmnCLtU7f6lO0Dn/fIGyD
M+A1wR0WHEwR7rtRTMaR6qXn20vq+3YvSPwWLhxMkkpTNokRxnvl5Sypf/FF
jkJSvrdIUtO23zJJ6kRYBlO5desCk6TOndvDkqoTWr5I2evCREWTejnblbl5
IqEPC2zNmol2AjOZbWFhb+t/jn10i2+i+sfhgxrhT4L7jhIpJCS616Ij8MuB
jTK2jpdxYd4O3o2D9yB07foe94pDjpwqmr/VFHfhMJK2LbSkcn244p82R24v
pVPgJTnqIMH8Z42DZtA1R8sIQTusm0+h1u7KozBeeOQyK1VYlS6jXOCTywPk
bSGBD+MgMf40dB04RGrD0AF/hsNB21guleneMF5fq7fclMl7rG1HEhIsc5yu
bblnYfUEMc/5h8Gd6gauC+xI21TBaVfS9xG+3bN6dGMKxUPUA/6bIiNJXngH
Wwt7eY3bWSJNaZRX1+X74Ptjq6BXtre8vuLllGEyBzKy4obcK1GzFc3yMidA
YmQHbeSNZsWLyzLSODA57Jk4Q/HUKtAkOzwnNNdiatEZObyRAzl5OWqKjUKF
Iy6EwkuRrphmL95uJis94p3zyyLXmcyFs2cDuC861pdoOQyCfvcSXU9Mt5ef
2gAfL/o7hUkcnrGVWwLirxryLeDUw2s8teH9jNhOD89zMGLyLOg/eRT0mIKh
ia7Thwp/uuvswfD+FWMT550ENxjpqvnXQ/v/XkIvJj1ORMjeBlPw6+HusDK1
AkeKTS0ZbmazqaZyeedhzcSRMHbRHogtkhXqqPK4vdY5w/Ucc0rfk/GG1NRU
4cdJDfP5SGp43y5y9UrkNJbaxIgL8GLUCH211aSGE8WWtCNoBSs7wzst7DjD
XUuiJmbaW5TOVL9n0014IcoIwODekJX8KxZrCcPX7+hDCPOvKO2jw4Ysvndu
QxbJS0Cs/Ysj7T97uvMcjYYVWwHm2U1MDaRpdoV85v5Fvt29++85QmS1Y4TN
zQfTh+o3h759aQnj+94FvgxEx1fQGNcf2rijVg2Dof0+gFaij0uXDpJWVecG
wHQZ1BkLS689lKYSaRWuX+ihGmNf16rbZ2HFuBHCpV4Ox9LK0XSWnpczKtVo
R8LwTYenY3uxME6c2GwnDLWCLJmuqjDoOrhWW6+RMFpujbMTBmYC9N9oxAUx
MClgJGGoB0zEYmdRIDWjqK3vDXgp2MixuHjxgIXmJvIqGGptz9WrVKMET+5h
7t4XB4/b6Daaj09p4sIiEG9eHA9fRy2AXxJ94OnrQ9n8xCX2Cz36+ZOerEaL
vZougge1MWthsa5K1kSzv075I/HOqnTLYkEWlpVxTRW86wkt6Q4b6Qjw02L4
46KjXeL1dOwQeOvSeOiXvgnejZ2uYR7XD1q565OVrlajRv1AxppJreIf4v0/
GC8lzbqUkcFgGppVD6WxvjBZzHHDx8yHfSlSs+jaDUfzVaSpTtMNeC7CuGtA
LVpO8lLPBQQY8squKZLT0AfnVrG8MAubJubfBbvDTxEr4LsET3gqfgjL6+XE
IdLnJ3lduXKO5RViKbuO6T0bLNqWas5fe/mMsezGxl5k6k3b2UqTGCyigluZ
NYXwc8Yy6MZZXc7QYdMt+C5kPXTxPAW9lydAT69sDkdgWUVi8YXLvRzlDtPE
W2ZJdcANfNI8tYgQJq/9fbzm5mK9VwoFqgkG68LDqWBgSHkydDwaKukhpWsf
ECtcmAPQe2kc9PJMh95kqa0pgjYbg+G/4zWFGzLsU6lw2FVaWhy5Y1VZxgrp
maadIApMTialw80jYo7EBPUlcNlznAxUu072h+TyBltjGmfNOXwy1riO7do1
o32SGZ50UaMKmKJCMsuoLoD/pM+Hrj6GzNA2/eGSL3RdeUamXPVcZZFZkLaq
vhTRk7qdPr2rncwwFV7VPmGxWbVPTXVqteUavHysNXOilr8kTkw7Hxjybmjg
AqF4UwxVZmyuD6BuQmbCudOieq7v6dulz2FmDZ98VvfTd8fFkVZZU93+MeoD
+bqHR3+OdNRYkn7RYCRyMJQzYKOZnO7eadDd3VVTnym9oLXi+pL+qEb9jhxt
dyPvwQO6LUC/p4OnK1oOyxNXa68JtVseW4pG1uPja87ysL8BfDw8EWdYKXr2
hAl4debHvYZ6Bfi9MWxEGJwqwH+86G8MfEFBLgOvFggVBoZFNU5dN2fBvbbv
J6awqOiOhcImXM8VP8eSkqgeuHJniE6ck9Tv18Nmw+tB7bnJLVvm2ymw1RrA
I4SLdPVQKwi9EeoBX7hoSXbCoWX1ULNXKdGXClcn5tXI2pYE1z3xVnfvHOg9
3l1Xj0Hw75Hv85bio0dYdsQcXQgrrucdBk/lRPzp1FTKfKktPAPzRrloG70B
v7bRa597+OQV45pNtcANoa4WtzluoD7nYKlj1MNnidnKULVdu5bZoR6keDaz
9Az09WbdMFcPioA3dv7ATVZXG4ef6CxYniX/B50turkFpw0s32gsAU2g14pk
6Ls4AoZ5J2I+IMWGWvsnSROFNocxGVPY2OSRoiOiVnDCzQtSF2vhINqE27p1
Icc91NNs22NiiMAHFfWwMuihcm1YC3mVbJ8lMdBHEDlmK9ZTLoCe8+ZIkQ4b
NQ7+upc2FZrqB+eqIGvbFI6G3q4BumhNPY+8THMk5YTyKPMUbFqyBHYkl+Pf
yFSvL4mAhaM1hZq2+9cVSr2zB/MQXzphJIHqlTZNorIehcMiCaqo9CuTWFTC
npCiGipE1c8Q1S9CVM0T/j/avgMsq2P5m+dv1xSTmHJvejfNaBJTNMbEJPYS
uwjYBcGKBXvDLoiCCNJUsIsIFhQsiIoiICKCHQuiomDviDjfmT07u3vOe0C9
937v85Drhffsmf3N7O60nXGCn/rqy7J799qogROrML1GtRk1I8woY5VYKUMi
HBPc3lvckDvO/yU4pvogtAX4JR+96PETphWeyC+GU3k3sRmEHfULCNwkK1Uy
q2trILwb/rtVtWoqFKXKhfZvJlLk7cfCQg266PemoqICyI7BbDtVFA9dvMh7
kpXHlodMg7h2pwQzTXXCXgK32dpuvEbTpOZshN79XLSDZBj8ubU31Hd8m42O
KUNQfBk2T9SDQOOiLiDzSYwKTX4vzCsAeABngkdAP2cXcPfJgNtPhBgVX46F
if3xuBoI05Ku42lZhhhVskk3fDdCj0pjFXXihtp/RuEG3lHCItDoV8i5eBOD
CYIbCzYaufH51gB4Z+kfxA28RGLmhurtCk1JMUmNufrQh0G/Mjq7dftWGJlP
TNcD0GVai/8tJCZTuGCdZ8TB1JgbQi3TVDSodtgJbyKxMWfOdBYqpJptg4xH
w5X15dW2X6v6Qr+3fYONsXXrCiIr3eK009txVmetSzH8SaT5x5zUdK3z4OAx
XGNXP+g5IQxq+v/Cj/nqcO5AGI93z4W91x/rDsgqhkoWeo+0J3Ani1tb2oEW
d/mRSJXEw+5mqhcMcUFLbCYkXn1chlJsRP63lTvh/dAGFA4xIK+6MjCrjpAP
VpBH/6QB+QWXNZvLUUTsZs92sbOKr6CSffvhQ14QVwhFRJIxwewTX/2ayYAB
fwjSzppMY7yWQqTdvKMdUTPiBXlTV5ywoyxVjIB85fktbU2YSytcpHgnTQ0d
Y344CYVNRlfqUGjUUo8kpKTEk7G62Gisfst+/TK78aKGxftgS8B5qdBt0EBw
7jcMmkV0hcZNXoHGzb+GiUNcwKX/OFicdgMeA3mjq0OSolJyXR6T3ODMRi9w
1zaggZOWQnLeXU18H8GNnG3gN6yfNrY7eMdfxHy2smQBaxurgH8UoFcfGzy4
cemA370rAL9x+wFbfTTFaSuOGwGfpAPeuvXbqG8IwB+bMmnxhoRJFsylaz7z
rsuGGj26nfAQqOXS/ZOSavPRNyblGKLU3QKvCglFx8MbsS2EF2DXrmihZy9X
Mrg1vWIqSdV9m3wncTKrFXRIlcTYlWpF4iV1XR5eYjfmsGs6kTcs7IQ+ru8R
cBgfAB08XKGXc0/o3dseevdsCkmnmVulAhcnc9IPXnLUPyVwL3c/xCzyg9me
Y8Fj2BAYNnoSzFywRhviNhMn6vZqJQfGzkRb4JN5PzF0Jk7s+jSw8UadCraT
Aja6dV/f0soS7HXK/eyg5GQT9wN3GEvRfDHjO7GhkKmFGYtqCa3dZ87YEVXF
2l4+zG+noMwlMMe4SR3qI9QB7G5Em5RaegotEXQyT+F/M2cJvbpP3hDF4iBm
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
ce+Fe+EAwYGoLEFRERAUFRQRFPX87vvc8zz3uR8+0PR/v69r+uXz+dzzrHvO
sx+tqjV4Sf04sa3e87GZfrB1rWq/OE/1XpKrWk0+pWouWKJ+tXeIpZcMt0jv
BM3+snWd+k16X5Xx4LrP24Y0UKylbC8/dYqTCjp1sntgIB9XxInRoqec4Fmn
4s5RPbSw9J50Ut154ihcJRfmqP4BXfVBujyzlKpBtMxl7VOzB1j7Vni0uvbg
CTu3y8tcZZnDz+lWeMTED2d9rinzozOd1F83blNNwzJV8IEC1WlGvGo4c4N6
a/8g9fS5dsgaoMPytdhhqmeOzQEijOwHSB5ukr8jR7Y6+2R0M1cOQ9xFJ249
3lBAlkQtJ9/Jc/p8ZZ7Wf0m9dqaDhvzX++bo9mH9dqWpseuyVOtJservK2eo
XxwcoH63L5ig/nDLetUma64qfFTsYqe0k45fvcrsxCgrYmcF+4hLFssb23cs
Y5uCZVOmBDAN/hJSo4roBPl8cgekevnYf6ume8Q3N2190M8Jx8qPk9urSw/y
fH5plpLFBdBzwF0CvFmzd9hN/7vdId7yFVgOLUtzaZBlaXYNUH1npKliofiX
ZkaooG6WHAb0VdPPFz9jNgAth9kH1NyBPVSfCWtUfP5D2AuUcyZF8SXzJJnJ
ILwHSBWnHGYYo7892t5H0uXFpM6aLv9n6PJy3GCmC25IK8Z7riw4ynSB1iNd
+ztTUznFAN1b2ed4oqUrtU4mwow335fOd7zz94U/RrKz5qhP9dxqgv2nqQE6
dc+ZxVAN/ioXT59N6KL+fvE7LYwEu/T/0HrEU8ylx1p/HPme3FtkiaqHMEJx
GSsUl6OikwkKL8ki029T/CCf6gZS2/WXy9D+OXKFfsv+dGGQgdTdTs/6388J
4hNDfzf+A1fW8NgtTpYFS19JhlowMFBL34B5F1UJS5+vepC1Wg3TvpE+avKZ
u9okdYlgzj41rV+gZeFOVdvStFtOJ7/pAYOkvEn/LjLIZNka5ZRr6Wv6hvrw
QhDToOYqZ6wPBp8g+fjZ5HZo7u3zlvn9pVu3XPtrLr+B7vTgZxNauQobz151
sptI0h54lCsgj0zmTUhefRrfj+H8SUI3F69+vytU8+qdtD5eeWUdlpSlQRsp
+GT9zNsmYQRqifmFrJydS6mGfuq775oxbO3bf6jW3z6mfp3Wp6oZNPH6kT7q
k+WzVLc5u9T0nXcozgeoaXjb5jsn3jTIFj94UK7UjYhK/Zhwo7mFJZhMVJn2
IaVr4Q+RrrO2dP2IpeuxuhMfqgZbe19A77FqXaqWLirdKr/Bma5bXiv0/Fy7
Du7JwX0d+viqp8+2Va/G9FBfhC1UG45kogCJg6G/jLInZv/N2igePXn8pmGE
LCucFx1N0f0FC4bwIvgVtEhvOSgTzGNkvGh+TAzxc8SIFi5+Ds9drX6U3Jb4
+cyZdurj1VNVj9l70LqKQLUMFmfSdN4q4mdRaamr501Sbi7zE9kRtBBKGORu
IfnpEsPy2TyOXvOMOn/+lIvWcP1ZhFNLbkcp/6x5akDucrUs8ximHVhLtf1+
h/UmTd10xXWqvH1wqplt2F89eFL2C7OsLKkeZ7KlCJOsrAu85Duz/+YqIpcV
sPLUjajo1L3inLoz0oppCfW4QB03lkq3weEq5R7tZG6JfNk8ZrGo9+Watad1
P3WCFEWEGKp6uuSS6pS9UM26uVMdK05TM9adsGnjqwIn71VjNhcybf615oAP
deRdbNGUVv2ZgdJTnbLMfE4Lo/gyXGrWE0gru5DnKZnlt9brXEfwjEpJOeFi
MaqPHz55pGKKz2uQwOItV88gSsUsDtmR4WLxy8cHmQGabdFrllgsG8shq7dM
sBg+TGbxnL+7Np/J28sJ61KDtEcOJ7ekMllnuJFPmJt7hbem8G3n2LWILFWn
WXx15IDxWzY2MUx380dE8e7dAhy+r5tVZc3YlqQk2iBkSsjboZ+5uoLI7Bxp
pNiuO8tImWgZKY8rMFKulj5nNg+czPeSZtsfWRI8Nf4O9lZvHruXzSpSy6II
ldOr4Ci3wcC9YMFQptON28U6BM7xpbUXmU7N519HYZX9Hqf1U5Hbw7Xhiiq+
oqLC180jZALxCFPtS+JK0VA09HjmbEdvSWAkrvDwyNoHi9E+3jiNU/z8+fgK
Od19Cc1RqKbtGeJ0cOYWtXVrqK41gaS8YUCUeRNbHTZjnA4t+cuQf7l2I8lm
l6i6w7haV7Kkn84wZACgrJoe279/bcgbuUruFj/QSR2c4BGSzWdY06VpjMgL
e+vReL2aNX+iG74ePbrN5zXzGE+LFelbhJSsv/z1ym8qbBDg3bOzTeU+rNiz
E337Ma9TdmOv+r5nVztmu7rimC1JL3a8MR7uwXLNgWAjWGrxmTNHmffr9jsZ
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
6X11GA+VuQQ7pk4T8ZHzTbh/vGaq7k645VQxoY2m7zItsnHjt9j2Ti5xqrBq
LU7io0OEIA6Zr65cOZUf0avXV0T46OLz/ATMMMN0iaNnsmDyMOHRUEUSfvv2
xeUI//EmJ/27wgPA19Lz9vFjEKWw6MLJi1mmJIVuywZSvabtxwx7BgWdzaEf
0jPsuIwNCrWd/PX+OV7DB3Lrj6ho67/ibP0z0oqfMuy3FAmVHzVFDfp+G1j9
g9lf1zxWViutXTuLON8529lffxc50s6Z355JyAZae9WGDfP4l927f86cjxOd
+0SevIxJHDL4ynGxaHny6FEZ05wymOhuCppP36/6Li9gmiNOD9eaI7tRTHPK
VPjnOqeLtWzS6cF+z1oEWIkECtwiMie/VvASTZCei68xKBGH3N0esrIuMCiU
miA3IjlHRuqEtuPB0gknWjrh4wp0wquldoO56lon3D52kJp84IYlCN43+Ao4
P2dOf4Z2zJi2xHlZDfGzqH4a0U5ToglP6LKz5zhVlOPGdWDOy7LDJgu4jCzB
8Q4z5z1LGS5cOMvkfuJJ7vk2uXsvcci9/Ij799euXWZyU8XCXzY7TRwCRZtH
w/lUA7UsEd+7dxXR4QNTHoD704g5GoLW01MJgPHrnQRKNNItK3vIAFCawh93
LGEAZFGk47uUtuE2lfuwYtsw2rINmekWgUozN6vvg2ar2IKH/wvTZTunNm3e
I2TJ/4H7hZNd7Sj52L1kGwwe6SRoLlkylvhNxfS4m8/LJ1RlRj7p/MhZoyfs
2LGU1kURLRN5GRE5hYm8welAjUgF9gciMlrXeRJ5nCCyB5dlazuhw1HaM+6/
bp1k95Kccoa8WX3D0/lX7dq9T707qN/K+9tW89rTdjp+WGaweqRuHSZ30SyV
fM/tLroSEeRyFz1j3gAEMC5vGK2GhZ5RWbE/dDP3LTeu3drU+K1CRSJhigqp
lhM3a2wdz3VV5d/DUVf37VtNpKaC+KfOtWfHy5X88kyW2i4P/vWj9kP2YbzF
0HhyAi3aJ/wC/8qywojG1KLw/W2rmMayINWDv1J769nzS1qb+v3h/s8Ze+3W
k47T2h2Cnbd42LAmJNjYgahljBhUMU+M96AX6lH+QTVe+5CDVMRl4UPOM+Z9
dzV8Y7b2If/IwPTk/kW1ZtRwFbx8hJaM//ra+tpZQqInWFzcLuegLLvtOigb
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\
\>"]]
}, Open  ]],

Cell[TextData[{
 "What we see is that the Fourier series ",
 StyleBox["never",
  FontColor->RGBColor[1, 0, 0]],
 " quite gets to the saw-tooth function. A bit more experimentation shows \
that as we increase the number of terms we get a better and better \
approximation to more and more of the sloping line, but that there is always \
a deviation near the ends of the slope. This is a consequence of the presence \
of the step discontinuity in the saw-tooth function. Perhaps we should not be \
surprised that a sum of smooth functions cannot replicate a discontinuous \
function.\n      \nWhat happens as we add more terms is that we get higher, \
but narrower, 'overshoot' regions at the ends of the slope. This is quite a \
general behaviour for discontinuous functions (you might like to experiment \
with a square wave), and is known as the ",
 StyleBox["Gibbs phenomenon",
  FontColor->RGBColor[1, 0, 0]],
 ".\n      "
}], "Text",
 CellChangeTimes->{
  3.4461936253688*^9, 3.6349808157973747`*^9, {3.635066765495775*^9, 
   3.635066818930005*^9}, {3.635066851159481*^9, 3.635066854211666*^9}, {
   3.635066890185294*^9, 3.6350669170248127`*^9}, 3.6350669952777433`*^9}],

Cell[TextData[{
 "Fourier series often form a systematic way of solving differential \
equations. If the general solutions can be expressed in terms of sines and \
cosines, then particular solutions can be formed by ",
 StyleBox["linear superposition",
  FontColor->RGBColor[1, 0, 0]],
 " of these trigonometric functions."
}], "Text",
 CellChangeTimes->{{3.4461936305248003`*^9, 3.4461936313428*^9}, 
   3.634980827385613*^9, {3.635066930097053*^9, 3.635066931675153*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fourier Transforms", "Subsection"],

Cell[TextData[{
 "The Fourier series we have just been looking at have been applied to \
periodic functions, with a finite period. For example, if the period is ",
 StyleBox["L",
  FontSlant->"Italic"],
 " then we have a series in sines and cosines of 2",
 StyleBox["n",
  FontSlant->"Italic"],
 " \[Pi] ",
 StyleBox["x",
  FontSlant->"Italic"],
 "/",
 StyleBox["L",
  FontSlant->"Italic"],
 ".  In the limit as ",
 StyleBox["L",
  FontSlant->"Italic"],
 "\[Rule] \[Infinity] the spacing between the different values of the wave \
vector, 2 \[Pi]/",
 StyleBox["L,",
  FontSlant->"Italic"],
 " tends to zero, and we can regard the wave vector as a continuous variable. \
 Then the summation in the Fourier series becomes an integral, and we have a ",
 StyleBox["Fourier transform",
  FontColor->RGBColor[1, 0, 0]],
 "."
}], "Text",
 CellChangeTimes->{{3.63498083044831*^9, 3.634980832056553*^9}, {
  3.635067022915683*^9, 3.635067062578143*^9}, {3.635067119149617*^9, 
  3.635067123162838*^9}, {3.635067155703705*^9, 3.635067197209859*^9}}],

Cell["\<\
Note that Mathematica has a built-in function which may or may not be more \
efficient than writing out the integral -- but at least it contains the \
relevant arbitrary constants.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ee", "[", 
   RowBox[{"\[Alpha]_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{"-", "\[Alpha]"}], " ", 
    RowBox[{"x", "^", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"ff", "[", 
    RowBox[{"\[Alpha]_", ",", "k_"}], "]"}], "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ee", "[", 
       RowBox[{"\[Alpha]", ",", "x"}], "]"}], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"I", " ", "k", " ", "x"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.5620159999999998490238795056939125061`6.679756717389813", ",", 
   RowBox[{"ConditionalExpression", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["k", "2"], 
          RowBox[{"4", " ", "\[Alpha]"}]]}]], " ", 
       SqrtBox["\[Pi]"]}], 
      SqrtBox["\[Alpha]"]], ",", 
     RowBox[{
      RowBox[{"Re", "[", "\[Alpha]", "]"}], ">", "0"}]}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4461920663157997`*^9, 3.4772347744370003`*^9, 
  3.635067232533038*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"ff", "[", 
    RowBox[{"\[Alpha]_", ",", "k_"}], "]"}], "=", 
   RowBox[{"FourierTransform", "[", 
    RowBox[{
     RowBox[{"ee", "[", 
      RowBox[{"\[Alpha]", ",", "x"}], "]"}], ",", "x", ",", "k"}], "]"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00884599999999999969668706967240723316`3.9673468483132086", ",", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["k", "2"], 
       RowBox[{"4", " ", "\[Alpha]"}]]}]], 
    RowBox[{
     SqrtBox["2"], " ", 
     SqrtBox["\[Alpha]"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.4461920664198*^9, 3.477234774567*^9, 
  3.635067273151445*^9}]
}, Open  ]],

Cell["The inverse function works as it should", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"InverseFourierTransform", "[", 
     RowBox[{
      RowBox[{"ff", "[", 
       RowBox[{"\[Alpha]", ",", "k"}], "]"}], ",", "k", ",", "x"}], "]"}], 
    "-", 
    RowBox[{"ee", "[", 
     RowBox[{"\[Alpha]", ",", "x"}], "]"}]}], ",", 
   RowBox[{"\[Alpha]", ">", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6350673628046*^9, 3.635067459323246*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.4461920664648*^9, 3.477234774682*^9, 3.635067286787096*^9, 
   3.6350673710497427`*^9, {3.635067417226923*^9, 3.635067459956551*^9}}]
}, Open  ]],

Cell["\<\
It is interesting to see how a range of functions of different widths \
transform. Generate the list of functions.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ll", "[", "x_", "]"}], "=", 
  RowBox[{"Thread", "[", 
   RowBox[{"ee", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{".1", ",", "1", ",", "10"}], "}"}], ",", "x"}], "]"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.1`"}], " ", 
     SuperscriptBox["x", "2"]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox["x", "2"]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "10"}], " ", 
     SuperscriptBox["x", "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.4461920664948*^9, 3.477234774744*^9, 
  3.6350674887639303`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mm", "[", "k_", "]"}], "=", 
  RowBox[{"FourierTransform", "[", 
   RowBox[{
    RowBox[{"ll", "[", "x", "]"}], ",", "x", ",", "k"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2.23606797749979`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "2.5`"}], " ", 
      SuperscriptBox["k", "2"]}]]}], ",", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["k", "2"], "4"]}]], 
    SqrtBox["2"]], ",", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["k", "2"], "40"]}]], 
    RowBox[{"2", " ", 
     SqrtBox["5"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.4461920665368*^9, 3.477234774894*^9, 
  3.6350674932857523`*^9}]
}, Open  ]],

Cell[TextData[{
 "Define a plotting style to give each of the three graphs a different colour \
(or color -- despite Stephen Wolfram's thoroughly British education at \
Oxford's Dragon School, his brainchild ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " uses United States spelling)"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sty", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"1", ",", "0", ",", "0"}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0", ",", "1", ",", "0"}], "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0", ",", "0", ",", "1"}], "]"}], "}"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4461920665688*^9, 3.47723477494*^9, 
  3.6350675177835197`*^9}]
}, Open  ]],

Cell[TextData[{
 "Use ",
 StyleBox["GraphicsArray",
  FontFamily->"Courier New"],
 " to plot the two graphs side-by-side"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"GraphicsRow", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"ll", "[", "x", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "sty"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"mm", "[", "x", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "sty"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}], "]"}], 
  "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {}, 
       {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
/v///b8ZAksN
         "]]}, 
       {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1:eJwUl3c8198Xx+09Ph8flZ0ZoZRVxufedyp7JpJRCFlllFIpM8ooiTQkIzt7
Jnlfke1rJqNsUsbHXomf31/vx/Nx3vece87r3CVi73HOkYaKisqVjorq/9/7
vwyWdndJSDebuVItPI98M4VndXCbhK5MU/Vn3M8nu9uMr5dvklDY33BuTL2A
bN3t+89jmYTq/2vt/6BRSD7/5DSV/gIJ0cv9S5luKSTr63DQSs2R0PBW37Tx
xSKyOp7KNDJFQk847NYOBRaTFe9eZ60aJyEt5Mj7nb+ELKukwvFyhIRKxC/c
P/mphMyf8x/JeICE9tEzv0xkKiNvvdgUQm0klLVQeld4rIK8ZFInktBMQtLJ
Aup+6R/Jf9ieivs2kNDT1rjxOs9K8kCQuPSxGhKy/sUm13mgitxFpsiyVZPQ
p8uyqksrVeTmjY9y05UkBHsc2D71fSZ/vG6klFRCQsz3rq2zl+LkgsN8J/0K
SYiiLW1OdQGRMycmVC3ySCjRo1hV+Tsiv7S8ixEyScibpbhQe7yG7KuZphfw
hoTqbr1mNjxSR/ak9jS0fklCtV3/8c8215Gdq1RNTsaRUIpZNyO89pVsId9h
vvCEhF5H7md7hurJxnOvL7ZGkJC82Kl7/V4NZO1MR+vMRyTUht8OcJFqJJ8Q
+mtnG0RCNRavP+6kNZGP9n91UPcnoRUdtjWza83kQ7HRV3n8SKgx88Xvl6ot
5P0sh651+JCQGzeP8PNfreS1VWNfzIWEupJY9dS1O8jzBfz3BJxIKEiPEi1a
30Gecpu6v2G/p+f6c6YarU5y7+i94AJrEpLil1GJM+8il7alPxE2JqG7j/k7
2tJ6yB8eeT3b1ieh2DKnT6lnvpHfn1aP7dMhoTH+b0Hi09/IsR87X0WfJiGL
lNefC8jfyTfTtt9TnSChwW2D4sVDA+QRPWXGVwoktKMW4ihHNUjWX/JwOX7s
//P/omUyMkgWh+NH7A+TUFHjYK1g2U9y9KRA9JYECV33TExQ/TBE3o4wX4oR
JaFju6bqwtnD5J6+prJafhLyjwr8ITQ8Qsb8aXmteUgIU9viv+c6Sv4gQb63
wr1XP7f56+pbo+QQ7wIowUFC/GT53juS42QFtvjGUCoSymF6JTdbNUlOLOqQ
PviPCzEnaOG3PKbILBdZoso3uVCk7UfZ15K/yGNp902ml7iQdqzACeusabKh
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
         "]]}, 
       {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
     GraphicsBox[{{}, {}, 
       {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
mUFHnaccm14SMUcu0b0j+lOosNxOVUISEdMQl7j0y/wvak1kPeKwn8uVWe2v
LrhPomORMlVM+zmeodExWqhiAhU2Vuca+Lzfj9Lj54snx1FrQZO7HyER8/yn
qRPHO46OFfoe1v5OxPjY24x1E0fR8R9Nd1783eevj3LU/TOMiiQOwpvzRIx7
U2RiS30YtbVe4JRcI2KPlpw3XM2H0InlQ7CNTMKcXnaxGfEOoCL/iXKmMJKw
F3dLDzMz9qO2Tyn2LmwkLN6f2+wBqQ+d4LTkYOMnYY1XPDX5mXtQkUG32yMi
JKztrbdH5bFu1PZdUGXhaRLWU3WvoV3+F/rn/Ec7fQUSRiyZey8V8hOdvL7+
JcaAhJEKbrw08elAT/IzstmYkbAGkx31A9/bUbtJ3lsy1iRs8+OJCyeF2tFJ
D+WDXS4kzDK3T1YPb0VPKhrYvvMgYdK1xE+az7+jdvS3K9x9SFjdjvGTG7Yt
6N/X4TaHn5OwyyeVzXVkm1Axy5TyP9Ek7DpB9aSzZCNqL1Z0oCyehLX4yIac
k2pAp8p7PhtmkbDvUiSeS1fq0Kk+YZb4qn3+U4XvN5ar0PrUjoHVBhKmdVaw
lRWtQt/d9v2o37bvj/Nwnufzb6jlWt9l5gESFnZe2vsO+hXFKkN47EdJ2G3V
/9jCkyHK9/TCTO1fErbM/y5KhgaivWzRYb6rJAw7OSaQX/sfWtaDmQxsk7B5
rQtai4Vf0Li3s2LyVFTYJxt5766sClRPQrNx6QAVdnjXXYSS/xlt0CDS3xKl
wrzOjlQcOF6CvmPN6646Q4U5yEcG/r5WjAb8Ms3iP0+F/XjCmkoOL0IxmzK1
XiUqjJJSy6rE/gnlO2V7+IIGFVbzXV9k9GYhur3I/idahwrbbBqfHyksQMt8
nQK1TKkwb/YhE4E7+WicGq9BtiUVhqjwlk4n56FuLE3HaW/v850mW793y0Ul
E0Vq4H0qLG3cLn4I+YBmlQ5QSb+gwuqOOzDoqmShgd5hPyJiqTCN7nvHk80y
UWsVubR/CVSY3mHNPk3vdyj/jxilzCwq7KHr6fCIX+no7mslNnIeFfagbmg6
8UA62m8+/9u8mApbOZDoNaWdhr6aveR39BsV9kt+7IbaSArqXryh+6CeChN/
FSncJ5OCXn2cyd/5nQq7OCDwp+zFW5SVgQo+76PCtMfKT45mJ6FBx8t3CStU
2M/KgqZzqvGo9cyt72ZbVFjQ7RsGVqqvUaVPnEnlRDJWFdP4gaD7Ct3FXBA3
ln3cNDh5xjsO7ac9xtzOQcZ6s3cy+VJj0fLvzf2nuckYMipYLP09BnU3Pfn4
zwky9uvOUbNcJBq9KtR16aIEGQuOMhUO8I1CpaaecKdIkzHXXx9u2TRGorMP
hsqNFcnYzpLeX3XXCNQ2Om6jxZiMtb8dW6Xheoaaf7HoY7AgY0wTclZPacJQ
4/FT/6ndImPunjGPufdCUK0LVb5f75ExM46CJX7mYFTVPNxy15OMvYx0uvhb
IAjFQowuKviSsfth5kvGIBCV7pujLX5GxuKbBqMp0QGoBLni70IUGVO1kHRh
aniCnjwd2CTxmozJdLVcs6F5gnL78LzIyiBjU+Vj8klxfihJSONQYiUZwzvy
UtWYvNHtSxzr3dVkrGb5kJ/SyGN01W2oh7OJjHn529S5VT1C/9bef/PiFxkz
H3e9N5zhiY7MYT7NA2RMyWLRSv+dB9rPxWRBP0bGFOPJ0c75D9A2+1ThJ/Nk
LMzR+rjS8H20MfouDVwlY5vDb/M0qe+j1V9kJ7e3ydjpaORFhpQbWsrSmuNO
T4299BUW5c5wRZMKt6TsBakxrjdwXOabE/qqr5Yj8yQ19l9oLs1dP0c0ihy1
OipBjUU+XlFYunwXfWpwstxMgRpb0wpa4aa9g3r7LCXEK1Jjbj8od4aXb6Me
WZVev9SoMRMPh/AL/+xQh82rileuUmM59yS9mLZtUVshfqFwY2qMfcYzpfGg
LWp+eZrcZE6NdSprjSVI2qD6SX71F+9SY1E7C2G8wVaovFKujmwgNcbs8SGn
PdYclb7jefb+M2rs4FRhbmjXTVQi5iJ7YRQ1dlPjSk59+A1UYKK3SzyZGgtq
ZEtQPW6KHj3wrswugxrzVWbWjySZoByyLvEZOdSYPHX1mNq0EUoXSnvjWBk1
VrmZrYsOXEdJnzqAaSU1djKx61zOuAG63fdG4HU1NSYtE1U2sHYNnTstPc7W
To1ZKIxbH5a9ina1mzvQTFFjPS5OkrJ8V9BJIe0XjfPU2HSK8JC8qS66cV+h
MHyNGnv8vxrOMxzr/33j5ufeyF3IKJI0ZJPu+/P+uMoeGZUUShl9rVJZUSoq
o8wQEhlFEUVWyN4rEkklsiIjUkmqnwf//8PrOK7jOq/X+eB8ePI18GjomBLi
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

         "]]}, 
       {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1:eJw12Xc0V2/8AHDKyMcHnyHRFiokvioteT9NUoTK3pUdWRkZGSFKZsjeK5sU
cq+VLSOiyPx8bCFKKn6f3zm/31/3vM695zn33uc9nuc8gsY2ave2MDExfWRm
Yvrfq/uk0vLmJhUPeF6raKynDg4p/Ktf/1LxrOQk0QdP1cFKb/xX+W8qTpIq
/Nhepg66Pc7/bH5QcfYzrs6uPBogi6VuG6FTcWPmzcjMDxqw/vL3XrydivNA
nciHS1rgfCX92uNYKp7Kr2c64aMLD5gfKOtGU/GdSpuaKxW6YFZ1RvVUJBUP
l/UruresC5rSneqLwVR8YLRgw9pYD07u/WNk6E3FQzVDCBLy+vBzVcUZmVNx
wyjdj4tkQ3BI/5vGdJKKJ/MRhDR2GMPINRn2mGNU/F08TfqhrDFcX7Yx/0+K
iref1W/4YmQMwjAuYSxKxTutd6CHecbwqb/5Td0uKn6u/a7qVoU7cIwY1eTH
RMU9eLj3fQu8C8t2/80RWyj4n4e/LNcVTUFfwFI5/QMFH6DblJe5mEILllZ4
ro6CZ7Velv6QZQopRH5H6yoKvqV4sX+K3QxUMzb+fcyn4BkX97BdajGDwoFW
nvBwCu7BZMrXbmABNsjkmIAeBReN2kUU674Pz0zVNGe1KLjlx8Ly6m3WkBMs
5/5enYIzr9pU5oE1TAzyNRqpUPBvRkW9cfnWoOnSqJ1zkYJfcfWubg+xAVR8
2PusGOP9Pkp3O5U8AJLwbKfeLzL+w7ltfSPfDiSufV6VXCHjk7P1BPtOO1C0
q9u5ZYmM06fZWfcs24EvHns3Y4aMXxy9TKPK2MOa7vW1hSEyLlDyJikSt4eR
yLx9j+vJuGpQycMjIw5QxP7AOiWUjPsFWaV9uuYEuLtSoG8wGb/b5+rVae8E
nT/EMkyCyLh8VnsPR5wTLAzThsSekPFfctK7ZeadQOytjlKJMxl/8y9a1CPM
GVLN5I/UG5BxplyBUt5pF4hs3jtDkyDjMnqLmYVNbpAGf1mbxMh4Vu8vuY01
NygtGxDMOUTG1f4VEiJE3aE7OULLWpCMb+V+kh8T5A7croTmn7xk/JzqiNyO
mx7gL/Yzk/0vCW+5fl5HYtETXILa74m2kHDfqA/HS4q94O+cwGjjBxI+/GDH
klS3FzxWNtE1qSPh39yFlEaWvMCPvKmWWkXCVV0qZj795w1hUVJoTwEJV7tY
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
Lw==
         "]]}, 
       {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {576., -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}]}, {}},
  ContentSelectable->True,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.4461920668688*^9, 3.4772347753199997`*^9, 
  3.635067568834238*^9}]
}, Open  ]],

Cell[TextData[{
 "This presents a universal truth -- the ",
 StyleBox["more widely spread",
  FontColor->RGBColor[1, 0, 0]],
 " the original function, the ",
 StyleBox["more compact ",
  FontColor->RGBColor[1, 0, 0]],
 "the Fourier transform.  This links to the uncertainty principle in quantum \
mechanics.  The wave vector ",
 StyleBox["k",
  FontSlant->"Italic"],
 " in the Fourier transform is proportional to the momentum, so we see that \
the more closely confined a particle is in real space (as represented by a \
narrow wave function) the less certainty there is about its momentum."
}], "Text",
 CellChangeTimes->{
  3.63506758204391*^9, {3.63506762448418*^9, 3.63506763669869*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fourier Transforms and Differential Equations", "Subsection"],

Cell["\<\
One particularly useful feature of Fourier transforms is the way in which \
they affect derivatives. For example,\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FourierTransform", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}], ",", "x", ",", "k"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FourierTransform", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "'"}], "[", "x", "]"}], ",", "x", ",", "k"}], 
  "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", 
  RowBox[{"FourierTransform", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", "x", ",", "k"}], "]"}]}]], "Output",
 CellChangeTimes->{3.4461920670727997`*^9, 3.4772347764560003`*^9, 
  3.635067651877038*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", 
  RowBox[{"FourierTransform", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", "x", ",", "k"}], "]"}]}]], "Output",
 CellChangeTimes->{3.4461920670727997`*^9, 3.4772347764560003`*^9, 
  3.635067651936122*^9}]
}, Open  ]],

Cell["\<\
so that a differential equation can be transformed, by a Fourier transform, \
into an algebraic equation. As an example, consider the forced harmonic \
oscillator\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqf", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
    RowBox[{
     SuperscriptBox["\[Omega]0", "2"], " ", 
     RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", 
   RowBox[{"a", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Omega]f", " ", "t"}], "]"}]}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Omega]0", "2"], " ", 
    RowBox[{"x", "[", "t", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["x", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{"a", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"t", " ", "\[Omega]f"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.4461920672028*^9, 3.4772347768970003`*^9, 
  3.635067662934906*^9}]
}, Open  ]],

Cell[TextData[{
 "Fourier transform the equation by ",
 StyleBox["Thread",
  FontFamily->"Courier New"],
 "ing the transformation through both sides of the equation."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqft", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FourierTransform", "[", 
       RowBox[{"#", ",", "t", ",", "\[Omega]"}], "]"}], "&"}], "[", "eqf", 
     "]"}], ",", "Equal"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierTransform", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Omega]0", "2"], " ", 
      RowBox[{"x", "[", "t", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], ",", "t", ",", 
    "\[Omega]"}], "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"a", " ", 
    SqrtBox[
     FractionBox["\[Pi]", "2"]], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{"\[Omega]", "-", "\[Omega]f"}], "]"}]}], "+", 
   RowBox[{"a", " ", 
    SqrtBox[
     FractionBox["\[Pi]", "2"]], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{"\[Omega]", "+", "\[Omega]f"}], "]"}]}]}]}]], "Output",
 CellChangeTimes->{3.4461920679598*^9, 3.477234778026*^9, 
  3.635067672750052*^9}]
}, Open  ]],

Cell[TextData[{
 "Unfortunately, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " needs to be told a few things about the Fourier transform -- essentially, \
the fact that it is a linear operation."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierTransform", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Omega]0", "2"], " ", 
      RowBox[{"x", "[", "t", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], ",", "t", ",", 
    "\[Omega]"}], "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"a", " ", 
    SqrtBox[
     FractionBox["\[Pi]", "2"]], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{"\[Omega]", "-", "\[Omega]f"}], "]"}]}], "+", 
   RowBox[{"a", " ", 
    SqrtBox[
     FractionBox["\[Pi]", "2"]], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{"\[Omega]", "+", "\[Omega]f"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{3.6350677167924547`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FourierTransform", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Omega]0", "2"], " ", 
      RowBox[{"x", "[", "t", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], ",", "t", ",", 
    "\[Omega]"}], "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"a", " ", 
    SqrtBox[
     FractionBox["\[Pi]", "2"]], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{"\[Omega]", "-", "\[Omega]f"}], "]"}]}], "+", 
   RowBox[{"a", " ", 
    SqrtBox[
     FractionBox["\[Pi]", "2"]], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{"\[Omega]", "+", "\[Omega]f"}], "]"}]}]}]}]], "Output",
 CellChangeTimes->{3.635067716942884*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eqft", "/.", 
   RowBox[{
    RowBox[{"FourierTransform", "[", 
     RowBox[{
      RowBox[{"a_", "+", "b_"}], ",", "c_", ",", "d_"}], "]"}], ":>", 
    RowBox[{
     RowBox[{"FourierTransform", "[", 
      RowBox[{"a", ",", "c", ",", "d"}], "]"}], "+", 
     RowBox[{"FourierTransform", "[", 
      RowBox[{"b", ",", "c", ",", "d"}], "]"}]}]}]}], "/.", 
  RowBox[{
   RowBox[{"FourierTransform", "[", 
    RowBox[{
     RowBox[{"a_", " ", 
      RowBox[{"f_", "[", "t", "]"}]}], ",", "c_", ",", "d_"}], "]"}], 
   "\[RuleDelayed]", 
   RowBox[{"a", " ", 
    RowBox[{"FourierTransform", "[", 
     RowBox[{
      RowBox[{"f", "[", "t", "]"}], ",", "c", ",", "d"}], 
     "]"}]}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[Omega]", "2"]}], " ", 
    RowBox[{"FourierTransform", "[", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", "t", ",", "\[Omega]"}], "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[Omega]0", "2"], " ", 
    RowBox[{"FourierTransform", "[", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", "t", ",", "\[Omega]"}], "]"}]}]}], 
  "\[Equal]", 
  RowBox[{
   RowBox[{"a", " ", 
    SqrtBox[
     FractionBox["\[Pi]", "2"]], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{"\[Omega]", "-", "\[Omega]f"}], "]"}]}], "+", 
   RowBox[{"a", " ", 
    SqrtBox[
     FractionBox["\[Pi]", "2"]], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{"\[Omega]", "+", "\[Omega]f"}], "]"}]}]}]}]], "Output",
 CellChangeTimes->{3.4461920683328*^9, 3.477234779308*^9, 
  3.635067723922661*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{
   RowBox[{"FourierTransform", "[", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], ",", "t", ",", "\[Omega]"}], "]"}], 
   "\[Rule]", 
   RowBox[{"xf", "[", "\[Omega]", "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[Omega]", "2"]}], " ", 
    RowBox[{"xf", "[", "\[Omega]", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[Omega]0", "2"], " ", 
    RowBox[{"xf", "[", "\[Omega]", "]"}]}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"a", " ", 
    SqrtBox[
     FractionBox["\[Pi]", "2"]], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{"\[Omega]", "-", "\[Omega]f"}], "]"}]}], "+", 
   RowBox[{"a", " ", 
    SqrtBox[
     FractionBox["\[Pi]", "2"]], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{"\[Omega]", "+", "\[Omega]f"}], "]"}]}]}]}]], "Output",
 CellChangeTimes->{3.4461920684547997`*^9, 3.47723477955*^9, 
  3.6350677342802753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ss", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{"%", ",", 
    RowBox[{"xf", "[", "\[Omega]", "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"xf", "[", "\[Omega]", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "a"}], " ", 
       SqrtBox[
        RowBox[{"2", " ", "\[Pi]"}]], " ", 
       RowBox[{"DiracDelta", "[", 
        RowBox[{"\[Omega]", "-", "\[Omega]f"}], "]"}]}], "-", 
      RowBox[{"a", " ", 
       SqrtBox[
        RowBox[{"2", " ", "\[Pi]"}]], " ", 
       RowBox[{"DiracDelta", "[", 
        RowBox[{"\[Omega]", "+", "\[Omega]f"}], "]"}]}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Omega]", "2"], "-", 
        SuperscriptBox["\[Omega]0", "2"]}], ")"}]}]]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4461920684898*^9, 3.477234779613*^9, 
  3.635067739458228*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fxsol", "[", "\[Omega]_", "]"}], "=", 
  RowBox[{
   RowBox[{"xf", "[", "\[Omega]", "]"}], "/.", 
   RowBox[{"ss", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "a"}], " ", 
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{"\[Omega]", "-", "\[Omega]f"}], "]"}]}], "-", 
   RowBox[{"a", " ", 
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{"\[Omega]", "+", "\[Omega]f"}], "]"}]}]}], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Omega]", "2"], "-", 
     SuperscriptBox["\[Omega]0", "2"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.4461920685208*^9, 3.477234779691*^9, 
  3.635067745832847*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"xsol", "[", "t_", "]"}], "=", 
  RowBox[{
   RowBox[{"InverseFourierTransform", "[", 
    RowBox[{
     RowBox[{"fxsol", "[", "\[Omega]", "]"}], ",", "\[Omega]", ",", "t"}], 
    "]"}], "//", "ExpToTrig"}]}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{"a", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"t", " ", "\[Omega]f"}], "]"}]}], 
  RowBox[{
   SuperscriptBox["\[Omega]0", "2"], "-", 
   SuperscriptBox["\[Omega]f", "2"]}]]], "Output",
 CellChangeTimes->{3.4461920693378*^9, 3.477234780884*^9, 
  3.635067754166575*^9}]
}, Open  ]],

Cell[TextData[{
 "This reproduces the resonant singular behaviour  of the forced harmonic \
oscillator we are familiar with when the forcing frequency ",
 StyleBox["\[Omega]f",
  FontFamily->"Courier"],
 " is equal to the resonant frequency ",
 StyleBox["\[Omega]0",
  FontFamily->"Courier"],
 "."
}], "Text",
 CellChangeTimes->{{3.635067780929192*^9, 3.6350678601921043`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fourier methods in data smoothing", "Subsection"],

Cell[TextData[{
 "As well as Fourier series and transforms which work with analytic \
functions, there are methods for finding Fourier transforms of purely \
numerical data. These work very efficiently, and are often used embedded \
within numerical methods for solving problems. \nOne frequently finds data \
contaminated with noise, and can see by inspection of a graph that the noise \
is of a higher frequency than the underlying data. ",
 StyleBox["Fourier methods",
  FontColor->RGBColor[1, 0, 0]],
 " can be used to ",
 StyleBox["reduce the noise",
  FontColor->RGBColor[1, 0, 0]],
 " content. This might be a good point at which to look back to the PHAS1449 \
course, to remind yourself about how data can be read into ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " from external files, but here we will construct artificial data. Consider \
the following set of data, generated as the sum of two sinusoidal waves with \
random noise."
}], "Text",
 CellChangeTimes->{{3.4461936545128*^9, 3.4461936550348*^9}, 
   3.634980844689192*^9, {3.6350679063940477`*^9, 3.635067924267511*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sinda", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], "+", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "x"}], "]"}], "+", 
      RowBox[{"0.3`", " ", 
       RowBox[{"RandomReal", "[", "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10", ",", "0.01`"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"ListPlot", "[", "sinda", "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1W3lczN0XzhIpUpaEZGzJixZrEj1USrYkJNRoX6hp32uaZmpm2i1JkomQ
PVlKihElWxKSpQxZypKSpVD9+n2c7/vP+3mcc55zzr3zvffce08THH2sXfrK
yck195OT+/////3XavxH8Co21q7UmP4BX0ZNnD9c8wZhBfx9EOYRWlxLWAXq
0w+cWqB4m/AIvNU6puZTw8jV0dF9xXlg2gvCGri1R2tcrEU1YRZueO2VnmI9
JzwRGTc4OwuC6wlPxu+1y+6c/MzYa8GjoMTr6c0GwtrYoD2q64vTU8L/wW7H
zT5HJjH6M3DoyRG1Wtu3hHUw8JVjw3m1d4T1IDz8ZppHF4P1sUY0cUTywjeE
Z8E4VHBxzCRGPhv/madtPt6/mfAc3CkOTVlzrInwXDzY2HzVv4LxNw85pp8d
LZo/Ep6Pxlk99XsGMHwG8L2qq3hq7SfCC1D6+XJJ+/33hA1hd9QpvmfQZ8IL
ccrJ5eeywlbCRqjR27tBMe4L4UW4s8j3543JjHwxJnxfHNe/h7E3xvWRimeb
Vb8RBkaafnqfHUT6XMBR/bHlIyPGfglWmqVLjWJJn7sERxpGchJN20m+FBFq
LZ2NlW0kXwrTnJyH6kMZfhNoHwpUbDzOyE2Q21E2+MjCHyQ3xZYh39YNa2Hk
prgW71J/Y/RPkpvBWCWgRP37d5KbYd7zu1LLTMJyyzBz2Ic5hUqkz12GnQWP
JimlMPGZo+Bo9+Nhtoy9OfL0yk4aWXaQ3ALVCbKs1V8Jcy2QPzXt26SnDP9y
9FN9ZtY5kZEvR42hdc5zxV8kt8SGzuyYsfq/SW6JvluyWRGtDP8KPFp08eAE
XdLnrsAiz9SwS3tJX24lXvU47r7gyNivhKJDVqXsAcO/Cvre7rt26zP+V+He
crf7ll2M/WokbS38KnjJ2K/G4yHNO//U/CH5GlgbeJRu8ekk+Rp4jBj48nA7
I7eC2sM97BXLSQ4rZBhar16TzvBZ4avqwKzG04SlVvj1KFp5Xl0X2a/FWrWw
4Su7iA9roeE5c/DoJsZ+LVY2DtTyH0ty6VqsiK395vb5L9lbY55+wCeTaMbe
GnZjogfEzCV+rjXq1g3YtTmim+yt8XVyHe/nEsZ+HeRGhG60Vmfs18F+3HKX
/Q2EuetgHC03YIgG8UnX4ePll+abrHrI3gY6Xz/dlTQTH2ywcceJuJ8+hLk2
aH76UTz1F+PfBqUuHwfLjWLyXw/fm4PqHLxJjvWoG+E+pauLsV+PMXMMDrx7
RP6k66Fd21937zQm/g0YfCl2j00S8WED5pwcZNIeQHzcDTj3s7Tx3GTGfgM4
a9uHFrjJ4Z/9RgxSeat78APJsRFvVHeZmm9j/G+Eh7L+kMpuwtKNaP2ZEHbE
iPFvC7+qwkUOhsQHWySav8s0ncqMvy1Cgw6/Wfia8W+Lm1cu+M/VZvxvgvNK
6Ywlcxj/m7BlZMybK5NIzt0Eg0qlzIIhjP0m/F34M3nkeWb87DBtdEn2inGM
fztEd80O8XrFzJ8d5A3D7CuimPmzwwTfZ8MURzD+N+PrwjNn1r1i5m8zloVp
L5duIX/czRA9fK+4LoL5/W3Gs8MO+71Mmfy3oOGIxqwn8sz8bUGmxtyASaWM
/Ra43Pts/HkWE/8W/L7qrpQyn/n9bMUww/HDvMcy+W9FzqnfUfe2MOO3FYKn
tlbPBzG/n61IPGK7RNTI+LfHRnWNhOJnzO/XHjX257+vvcp8r/ZYPvZx4+kn
TP72uBptGrxPxHz/DtCu++Gpc4vJ3wGcvpGyp6HM+Dlg24e3fS0biU/qgIkn
pmbUZDLrExvTn55tc+omOYuNOyoFd0e2MvGwMSjj80LBHMJsNsYeujNuyBFm
PWLjiZfqEpdAwhI2Fsy0XGv+jdYvKRt5EpPxrkYUr4yNDXlNNZoyxv82GG39
cHxmNK3frG1wip86wGA4sx5tw22ZxWxnS7Jnb0P2g1tVUw4x6+k2TDc4vHjK
btpPJNvg1f+wxXor4pNug5/S5bYn9bSey7bhxeh7e/c9Z/w7YvOc2ubd0WTP
ckTMtMNt9hnED0dUyB+PzvQhzHaE5YHu+uAeZj9xxL37x3TUp5A/iSOadX1P
DdYgudQREaJs9ep+JJc5IrfApGvpXmZ/dML0r6PSWvyY/J1g+Pr34bsOJIcT
Ng1J9+/3kTDbCV9FLtOuPWP2YyfkDTnT4fOZ/EmcUMN1iJe9ILnUCUMs82N0
4pn8nfB4jfKKvecZ/85oeWFaECpHcpYz8tIt5ne+biH/zjB8t9BxcRnVA2xn
2NR+9l9mxezXzvgyu/+kHxmEJc6w8n+svcWA8e+MjfMdM0fakr3MGXeyPN7m
5RC/nAu6d5l+33qA6heWC2a8NTELGUn1ElxgHxDOmr2Q8e8CFd/vz8vLvpJ/
F6hdCxm0zobqG4kLjFaPvz66L/FJXeBqJ1z+7QphmQuusoaaOFUz9ZgrpndG
XDnt84H8u0K/WSuJNY704Yqs+PFTL66geo/tCtZPB8EwA8JcV+TmZA8dduI1
+XeFi6BYxWF0I/l3RZls0TirUqonZa4Ib59g6iFj6j83aP16nLghneQsN9hq
7zp6i0V8cIPpvCNXUq9SPcx2w4P/OiJ5f6le5rqBd/pz4aInxCdxg6I0ObYl
k/ikbnAc7XDIOPsV+XeD3uKdYfIez8i/O45fed55RlpH/t1xb32R9HmojPy7
Y0zNXNuD7o/Jvzvs9MrER+0pPq47rm9/1DVdlep5iTtaF8fvra4nfqk7oqwe
bTKa85L8u2Ok1dMZP9KZ+t4DYRaJJiULa8i/B4akqUxXNiR7eEBO6WdyOOsh
+ffArgHHvoge0HmE26t/dGtu1ybSl3hgwonhDe8X0nlA6oEfS2+N2CS+T/49
UPVMRfda+FXy74ns3L6pzxQofpYnrP7GyAZ+vEn+PREt1rkbOJnON2xPbPm2
dPuwwjvk3xO7xbpLki0oHokn3nSmmd3sJn9ST3xc959zn5Ij1/7594Tk7LS6
YAf/f1jOCys7Ja3c/CLy7wUNu7Ywdkgl+fdCg6X+wXseF8m/F5Y5+OWnLDz3
z57rhWQL/9G1Kwr/YYkXclP+zF579xr594LemLH7+zhdofx7+duDFiVqE5bb
jpAvX52M1hEfazuWLXMdN4514x/GdqzUsdylY3f6H2Zvx6ZL5Tcz990i/9sh
lSk4KR84RP63w+D6oOgJ1hLy3yvXGvS+Zf9h8r8dGqMuftS8SuMhtwMtYxZ3
/uxXSv53gFshXf14TxTlvwMjNK+1s1+Wk/8d0PLOfpv4+CH534GgxsX/GUy4
Sv53oH/OWklQNo2HtFf+XXhLw+4+jf8O5Bn1c/gvu5L8e0N9c4tP59QC8u8N
u4D4jAnnqyl/b3hXJsif3HmZ/Huj/MXsW2HGJOd6wyvv2Joffx6Rf28EyIk2
K1dUkX9v7H3j7jxwxE3y7411/L47b56l8ZXzwUpBopeJPclZPlDePPJH96sn
5N8Hus9W1n7eRePN9kGHc5/GP1Vnyb8P7IVjvWN6HpB/H4yr2KR6uZv4pT5g
KTbrH9lL4yPzwQtTfcmVfTXkn4PhQem5F11q/2EVDozYaivrVO9SPBw0KA5e
+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
WZcNVIyX0/4rF44QE7k5VyaTf5VwvJ1onrdwdC7t/+G4nVY7r+g31a964bhw
PDiurI3qK4TDo7Jw2flHVI9ZhWOys+Tc4VUltP+Ho64qZJ/ZE6b+C4f299OW
GqlUv3J7+TRqRmtl0/knNRxePWmdNteJTxKOw3wftUfbqD7PD0dFaJf1GWOm
/gnHE32EKh2i+qs6HNbViwIkC19Q/r347O1QacJzyj8cI1qMFrS9o/pWLgIR
QeNnrWh+9g+rRMD+ycqbCteonmZFQDZu9oDVvlTv60XAasrfBa7LHlP+EeCb
ntynqfGG8o/AjozAVRdHvab8I7C0orNfjsdLyj8CmyxmGxndq6f8I9CU/7FE
ak36qRHYVy9OVu+ieCQRaK350x1l+o7yj4C5oHHNj4WEpRG4fET1RkBII+Uf
gYaqOp9uHYpHFoG+Ghcyh/i9pfwjMDY1d1+RfjPlH4m0es1P566SvUokOidt
maCs30T5R/aer1pNnBeTvV4k8peIsr/s/Ez5R+Jq67K6qc0kt4rEn/I9ZfW1
xM+OhNaBK80BDsTHicSZwV+jX6R/ofwj4Tv95yXeN9JPjcTCMXc4Wn+/Uv6R
GLt5x5IWLbLPj8T6IyM2G3WRXBqJxcW7JVpWHyn/Xv9qtSHnAohPFolTazID
XaUkb41EyXCX1IkKFL9cFA7O6587UbeF8o+Cx0K7o2UdhFlROJY5u0p5Ryvl
HwXzLcqSQfcIIwoF3Q/eFY76RvlHQclB99KbCSRnR+HFsZRK4VnCnCjoHGxI
bPnSRvlHIadp55exe75T/lE4V3jrhXIb6Uui0FFifbarjeT5UTi0yfpkwEnC
0ihUvejvV2dC/qujYDO/4fXw4YRlUWiLjXL98N8Pyj8KbqU3ai+Uk71cNErc
nqYPYexVoqFpnftlxp6flH803Cs/Bl46RHK9aFTvyutJayA5oqFk9l9D/0/t
lH80VPOthd/liJ8dDbHeEK+Dbb8o/2j8uXKv64pDB+UfjeX2X628hhNfajS+
HRu9rkSB9CXRePXG7NiAaJLnR8OqrayrUUZYGg1JcejxvoqEq6Mx1TY6WquF
8pVFY8OSep2x44mvNRr6Hf2V5uwnfTkuGm7fmh1gTvEocJF74tYldjnpq3Bh
cLFi06wG4lPnYnP7w+WlW37T+HAxkPX87gR9stfmosfeqSrxCtnrcdE1x/y0
ydLOf9iAi0s+jpX1EwmDC0PL68OcVQlbcPF8wsWKAZp/aDy52KYvurDmBsVr
y8XNaIWjGYdIn82F99vu+bcCSd+di1nTltZ/LqB4OFwEPRpcvGosxRPCxWPj
gvnCkRQ/tzfeBzOj+N6kL+RC68fZcEMfwqlctLaanSgaQ/4yuEi3P535R5Pk
kl7+MYs6kvXIfx4XZYKG1UYywvlcLJy68UyLPfkv4iIt60/ou2nkX8pFjLnc
8dN/SL+Si6ezLvcJ1SVczUXL3Wcp+3vIfx0X951X7LRj/Mu4uPvup8qm58Tf
xMWwB125RUdI3srF/tLchrk3yF8HF3+Tr3kYzCJ9uRjcS9dlKbKIXyEGXjU9
MqXVpK8SgyWinmmyDcSnHoOZYy2Sym4TZsVgo97TbZ15pK8dg4Xzd+095Unx
68Wg3WMXe+MkwgYxUKw2MpvRQfqIQdPn9if9AonPIgZXZk1smniU4rGKgW3H
u4uV20luG4PPi7+fSThD8bNjcDb5Se03VcLuMWCV/XDb9IeZ/xhYxw/UHLef
mf8YZN4JMVLeRr9nbgyUj1spas4kLIyBs/yVMaUrCafGYM7+q7ndAuLLiMHJ
SwdGLsmh71sSg9mxdTWVjcSfFwNNyyk51cNIPz8GkYdKJn9/ycx/DB4e504+
1sl8v73x3po1Jn0j8VXGYHtK++VqbeZ7jsENnbThkQtJXheDZQF7K+SfMN93
DH6ZvJpc/4VwU+983ex689CWWe9iUDBqWsGQZFq/Onr9jZvrGuNLcjleb300
ZJVZF/Er8HDUe9Kwl+tpPVPhoZgz7Ewxsx6r81DyJ2OF9RrSZ/FQJndoSr82
4tfm4f6we5Hac2h91+Nhc8bV+1ttiM+AhyAtkcXg68z+wYNRe93gtz9pP7Tg
YYhxdMjHjWRvxcPoa4872s2I35aHZ+tLw9J4tD+xeZDXvbHEeSTtZ+489H3u
b14vov2Ow8OrdacNvwz+RPPPwwvTPJNZDwlzeTD4ti+44xPtr0IeLK310io2
kjyVh6ndYXtlwvc0/zx8VaswSz9P+6uEh9sTL25dHUn6eTy4JwZ7eaeS/3we
eCev93vPovqgiAebTL9h6UWEpTysCl08580aqmcqedDN6Cu01iZ5NQ+tO0/y
92mQ/zoeDkW+q83lkr6MB/PgwOWeWg00/zzUfEqYozqBqfd686tXP759M9Vb
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

      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 1001.}, {-1.7489449121098632`, 2.0506325956468388`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.4461920693978*^9, 3.477234781218*^9, 
  3.635067949451174*^9}]
}, Open  ]],

Cell[TextData[{
 "We can do a ",
 StyleBox["numerical Fourier transform",
  FontColor->RGBColor[1, 0, 0]],
 " of the data"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tr", "=", 
   RowBox[{"Fourier", "[", "sinda", "]"}]}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"Abs", "[", "tr", "]"}], "]"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", "tr", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxde3dYk9f7fhy1WFesC63YWBHROuJA+FjH3bpQq0YRBWdQQARH2GG/hEwS
QupErRpncePGHbUqrho3dTVurFZxo1X88rv6vNf15Oc/XoeT9z3vOefZz323
njpndER1iUTyuIZE8v/+/+9feb/hn9RhbWa2A/0B9l/1svbmtjT2wFWvD4/m
vW9DYynqTeuwqOWITjRujCVRdTS6h3Vp7AnPh/6Rh05U9Ptv3BJ3T9sK0nc9
p7EMZzvWWj907wMafwdLrG9Kaq/7NPbG4sMVnjf+uU5jHwy8X8t70fQLNPbF
TN2QNi+jrtC4A+r5/S20SDtO445ocFbRN+WR+PvOmKRYNLxfwiUayxGxeUZ5
/0clNO6KBz2DpHEb/qBxN3xct6n+orO/07g7Zu+cuejNo5M07oGVXaZ//Spl
G4398PWYlodXtd5F455YsNJ4x79wL439kf1JE9J0/BkaB8Cj77NWJ64dovH/
kFxn9+FvrxygcS/sWqxoN2PeURr/gN6NXrU+mG6ncW+0CA04cr3ubhr3QZ9P
4c5NW8Xf90Vm05iDrrwdNO4HuU/ZrQsqcR6Yvna2sDiI5gVg4MCBq3sOPkLz
P2LFgK1rgmz0e+FHDMlaMO/+kWU0/xMCUkoGvQml9YWfUFq63nf/k99ovj9e
vNx5NKUn7Ufoj2pHRn9eZ5hH8wPw9PUfmrEND9P8AKzMSc+6IThofiAOv0xs
EbB2D80PxMFJx/6649pJ84Pw08TiY6vGH6P5QUgfMXbnV4Vmmh+M0seet+/l
baf5wTjU50y1JhPn03wgNqx8OLvi5/U0H4gsf6Mi+odimh+Cpl0e9m0mpfWE
IVh+etWf565toPmhCM/pKV+/aTnND8WBOStifiyk75EMw+kn32oj7hTS/DD4
Doy6k/ZhEc3/jLojj6ceV4vn+zMu5/0TNdohyttw3J79KstYKt7PcIx6+tO6
iDJ6n2QEli7M9r6joPsSRmDRoHkPWk2g85KMRKste45NqkXyKozEL+HbU9US
UT4VeFCnvO3msoL/xlDA0T+7qWrvCvq9AuO9E5Zdbkv351BAsqyyQdkqUf5H
4emLe51fDN5Iz49CTITDNKlQ3M8oXOlSfXP7uXR+jlHIenn1+7e3RHkfjfnL
Bnc5N5D2h9HYObVh198Kl9DzoxFeOdnz6mbar2M0Kte9isvoLu4vCDc6dr2w
7ZtV9HwQVjVu1u7DTrpfIQj7hkXdfb9MXD8ItX/XVHYcR++XjEGjsvs/jxw/
l54fg/w9c5VZLhoLY2D3Cq902El/HWOwZ92a0PmD99HzwQiN6ThtxJckrwjG
37ccBbt/oPsVgjEyeta7Y31IXhzByFVdX/a6mmgPxiJ48ovpn6PF7x+Lk+fm
ZjUrIHsiVM2nTZZaZEX0/Fj8vKP2RssP4v2Ng/x5xLmaJ+j9GIf19p1dvPaI
8jgOs2Le6vCO3ucYh/NnZt8b+l7U/xCkNpPXGpEhnn8IRg5ZuWluPq0nhMDv
r+qtM5qTfDlC8PUk/+CmKSfo+VAU/b67+NCrLfR8KB63+e6sfrko76HwSPlf
Sf8L9D2OUGg8bxd0GSLay/GozLfa4leJz49H3X2jXoccp/0J43Gpe2hks3ek
n47xCN/xcEfQLbIXkglIyVYcy/bZRM9PwOVzG3epfyH7IkxA11WZnX+9TPrs
mIALMZmX6jVZTc9PxLw9srRnDcX7m4hxHndfzQ4W7dlENLtUOz58LZ2PYyKM
8t57P/ntp+cnoZlXvXo16tL3YRLMs2Rbjx6m+xUmYVuDQy9GvSd/5JiEAq9q
Z2r50PlKJmN+/ylbZOvE/U9GsH7xhrQj4v4no8/143V2D9hKz0/G+vNNZXWM
4vpTYHubuPZEFn0vpuBZq57jWg1YSc9PwYs79oeXOpM9dkzBxn83fU71IX2V
KKHbX8280HPzf2OZEpPaLvg48gj9HkoM+K7o3FwLybtSiVpP/u7Xt5t4PkoE
XWnd7NVIsq92JdLP+T8b7UP2waHEiMMr7np70bxLCVvTuyHD6tB+JWGo/cf2
YFVrcf0wnHSdX/fHGDofhOF+8W/7LcPJ/ijDUHlNPebyEtEehuHIAa/lk2Po
Pu1hOFPyyzdHFYtp/TCMfjPs673d1tD6Ydhx7oo1KFL0l1Nx8JrNx9CC7INs
KlZOSNvXcQzJL6bC9MW8kUHhJD/KqRg0Wjr8wlY6f2Equg9puKvWBpJn+1Rs
L6p58MBI8b6m4sXUdXNr1af9uKaiw+LfenU7S/cjmYZrHi+iG0Ncfxr2SJ8H
7nxF9g3TUJDl9JjQjM5HOQ0X80ZEtXwq2tdp8GmS1DupDcmLfRoa7i/d3qiJ
ntafhva9KuuPfrCA1p+GzGNPXtf8nc5DEo64ew+eXe6yltYPx/u7+t4/QPQH
4Vj85pJvdw+KV5ThWDgxyNl5gSif4dDv/c3pU1+8/6rx4qs+874+TeuHI6Tm
tupLZlO84ArHnKk34r06iv4zAmHL+9frmEb+ThaBeim717VZSvtDBJ75mxLN
EXTfyggM+5i9pTxAtC8R0Dc3TWnzmvTNHgHHnKSz3dW0P0cEDnYausbWnvyx
KwLdFs83bNKI8h+JE0MeDA/pS/ZNFom1+2u0y3fS7xGJT6aLXW7tMdD6kfDp
eTr0YD2yF0Iken14ONInWjz/SPxUfkNqqyba60is0K1c2v4iyY8rEu+PN8w8
el3U3+nw88k5uvS6uP/pWPhdrndsBvlfTEe17XLT3ZvkL5XTUf3vIx6LvhTt
83QsCfl+8+uPJM/26Tj9PzTeeJHsoWM6XKklF7vJSD5d0/HLqkzdhymi/Eeh
NPbUw8ipNJZFoVaDZhnFdX+l9aPw8l3986U9yb4po1C04IVfh0w6XyEKw38M
TBs2gvZnj8LHCfecM6qJ/iIKnVs/15orRf2LwvnErH2SRuL5z4B/xq5f34SS
PZDNwJPS6f23OkV7NgPBIcb+l/eQfitnIOu7sH7PO5H/EWbAw5wQcmkbyYd9
BuIv+Qpd5pL9d8zAqi7nL77cQPbINQNBWX59D90kfyuJhnePv6+drC/efzQy
Zp/TRYv3h2j82bZr/PZ/SN6U0djV78qwyCTSFyEatz1fPRztQ+djj8an81nf
Lr5D9+uIxvwvB9w5sJB+74pG366VP3tlivFPDK76hW0KlND9yGKQX9Jvb7cw
GiMG+htFvoOnkT1QxmDzvKE9uu8V470YnDpW0GJyuah/MfDZ/Yts3DnR38Vg
Z7c/kiavJXvuisEz+/4WJd3F+H4mTntJvGelkL2SzUQ9w3Pp8FLx/GfCf0ns
pw23yV4pZyJac2xOy5l0fsJMNL8W/WHtiYW0/kyU3d89/ZWL7scxE70vXq7R
uCnZY9dMdNM7O//TV9T/WVD9Oyl/hx/Ny2ZByHNe31OX/CVmoe2nPk0HDCL7
qJyFvAPx97usEu3/LFwNm3us2SOyF/ZZSPOYPbFxA4oPHLNQffjCxdcqSF9d
s9D8WcS3idtIPySz4THBf5N/dfJvstn4fllR4BAn6TNm4+DA5cVNVtJYORvp
qYfrT7gvyt9sDGqS2f1xR7J39tloW2686HGY7ssxG033fvXlmyQ6X9dsbA6s
50zdLOYXc/B5ZoC3R3u6P9kc1IvrvOvDEzpvzKnSZ9eXv1lIHpRzoOs3Yseg
N2K+MwcjW/874dJcUf/mYMOBaq06a2m/jjloO871puQRfa9rDizPv0+0XxPz
SxUyN+wIDs+3/TeWqvCqRqnm3B3xe1Qwu7zvnd9K+iBXYcmmH+ZlGMTvU8F7
iNf8Yj3ZL4UKN8e7vrh9XtQXFc40LLuv/4L0Q6VCqf8yvE4X8zEVHHEdR/35
gOJlmwr37sW3u9tOvE8VGs7fPXZf6sH/xkUqPKz7y9ar22g9hwrTm6V7FKfR
+50qfBvXy3XoKemfS4VDhzpd/fcVyWe5CmdnL8s4sViMv2Jh3Xh3Zu0yer80
Fg2mTF5XayfdnywWf0sany9pl0L7j0XyzR51/cPo/BALh1kbOu8o2S9FLB6G
qHOqbxHjpVgsbFxr8Mqu5J9UsdB7vJ1sny76r1jsWrHn9IWmpI+2WGyPGNSo
qB7Fy/ZY9LjVxdg/nuxfUSwaDflU3zqe3u+IhatpWnD1BNJXZywW1TuRcuZP
0g9XLK4d7Fsc9IbeXx6Ld9/3en+ivyj/cRgVse3iD71JXqRxGGdfWzfqpmgP
4vD8al/1uQS6L3kczgfbp9w8J+4/Do/feMz7sibJnyIOXX2+kk7eL9D+49Az
6e+1U6x0H6o4/P7bmK1vP4nxQxzKL0jjf3NSfGKLQ0hpXpB0yDrafxx6LR3T
aM91spdFcai5bkZS5QiKhxxxWKNp285nOn2fMw5xV3/Svm9H8uGKw6FOX3Rb
3ZrsVXkcJu0ctj7SS8w/4nEv/e7yJSNpPWk8PJPaDVpdi/RBFo/DISP7+n0W
9x8P5dvP4/t50xjx0J5MuXVwHcVLinj06DJgyLkAqs8o4+F63fBZg4Vk71Tx
kGY+/up9BzG/jUeDal1rqzqRPtni0WRtevmX8XQ/9njUnJe1Vd+K7q8ovirD
kn8zeaGYz8UjfO/Y+4c8KN91xmPH399s7eRL8uWKxzv/TZrhH+n8y+MR2Em5
706sqP8J+KLTv8EJh+k+pAnoU+N9c+1ZkjdZArqkBNZeuZPsr7xq3nK084EL
ZF+RAEUTS9SdW/S8IgG1E7reuD2G/I0yAanD8u8t+YLsoyoBFdlDe92oEPPz
BPx8y9+/bSrphy0BE1otexHTVvRnCfgQOSY09Ch9f1ECnF/X2tZ1oxhfJGBW
IUo73CP5dSbgT92Q22ox33MlYHXanIkn1pE9KU9A+Okfj1RupPuSJCIx2XRm
YCKdvzQRsb1vVOuRKcZDiZj76wp78BrSN3kifuyx/PAfQRTPIhHPznQceH0s
nYciERdfhHXfHUr1RGUiVgofYiMWaWn/idi546RnG5lYD0vEixFLalhHkXzb
EpHzYUvN40fIHtkT0fL0wbrGg3TfRYn4oluvvoZeYj0iEQ2n7Kz3RKD9ORMR
fX1xUduTdD6uRBTemp546+FS2n8iBvo18LldT4z/k3Bkj2LSifZkP6VJWHyv
wYCpR8g+ypIQlfjXnk2+ubT/JLgMw55uWS/Gx0nQxF7a/d2Pov1Pwue/rIHL
fqbnlVXvn9GgYdtQ0ldVEryME8ckBpJ+CEnY41r68fA5sle2JLxfvL9e/2n0
/fYkzOmwffjaONpvURIOymPunGos1hOSUPNLZY/tjylecCbBXPvMJ+sOkl9X
En74PahFnIzksTwJC4bXWbvJLNavknE6rf6B49vp99JkvPjWP6TTv6do/8lI
l/sl5HiRfMiTYW3y01P8Rf4KydjfJXPb/UjanyIZlc9Dd9bfJ+Zrybgju3sp
5AXJsyoZX61rd+/VKTF+T0bwiPytMyaRPNiSsak0tNdUQYxnk/Hvo0NLA3vT
fRUl41C3QzW2/U3640iGLGLJrg8LRfuXjG2/7D9RWk7xrysZJ7bKr2na0nmV
J+NNqezmMw3FWxI1Lq9qvzp2vij/ahz+5+S0pTtJn2RqHBv6bu6vF0T7p4Z2
XIPkxSB9gBq3IjYfzImk71eo4fFu5gT/BWK8qMbZk/7Zna/SvEqNWoMWLeoT
QucjqDF4k872Zh/dj02NZufTjvwWTPbarsbabv7Vjg4ifSpS4+1X3vFRX4vy
r8b4o40fpT+j551qbBherHo7k/Tbpcaz5k9PdatB9qtcDcvMnap7SrH+lYL6
2zZ83f0EyZs0Bdmre9WO30/yLUtB5cs14UfnknzIU+DXOePZ9+PFek0K6uxK
Hrq+D52XIgXXE4YMa+MU47UUBLTuv/z9N2RPVClYfGzuke/vkz8QUtDipxNz
a+/Io/2nYOTjnrPqfCvefwouVxvn/eaDKP8pWDbN3y+3C9kLRwoS6+ZL+o6n
sTMFqz3LajbqJOYbKYht/TDihyPkz8tTYBqyq92JMPH+UxGWfP5d/VOi/0+F
Wvj8oP0tWk+WirVPVvrknST7K0/F6o4Z62tcI/1FKobHRm2u+060/6nwfF9x
ft4GsV5T9f7L/qHJWWQfVam4cfWZSTdQrKen4tWjJY/7qun7bKlYtubyx/1f
0ffbU1HcZPn4Wyfo/UWpaBl0c2zMLbEenYo2R6p7GKeSv3Omwnb+cK8iOdlP
VyrG3LpxrtZrUf9TsW/j0CmV39F6kjRMz1ftuJlO9lGaBr+0DZWtJov5aBoO
Hly95aCYf8nT8Ovl90tfXxHrtWkISX1ff+RiE+0/DT2eNIh/UVe8/zQMnDTy
07ZnYvybhga787UX51P+K6RhwcJ+bWrZ6H22NLRqP7CgyTzR/qehY7W3LeeN
pt8XpeHohC9S/nkm1hPTsH2MZthlM8mnMw2LWvT+UOYtxj9V84bjKf8MoHF5
Gjq8Xe+9tBW9X5KOsZ8HtPlRtL/SdGyNKVw431fMh9LRolvIuOOvaT/ydLgS
lgZmjKb9Ih3Diw9ufugnxn/puKdLTJBupu9VpuPtprPlIcoo2n86OoSdfFC2
RMyf07H35A8t7iwhe2hLh+nl9cp7Pci/2tMxrmHcNd9s0f+lo33zmJY52WSP
HFXzi6o/CGtC8upMR411ew+8uSLW29Jx5Zt339UsJ30uT4fUf1PQ9eFifzAD
D54faHKtvyj/Gdit+Pv5sJViPp6B0Oan/1f3NsmPPAMx+ybOVo0V6wMZyPc7
dSz1AemzIgP77p/53lkh5j8ZCPRo5nX7Bp2nKgNdOlXMUYv7ETJQ/LL5uA1e
NG+rel+7UN/6h8V6QgZ+rOYdahlM6xVlIKz1nozPI8T6agYUa3bemNBAjH8y
4LtyxuCTXmRfXRmQ9r62Z99V+r7yDDgHSo6aVov170yMWnF8yzchpE/STNz3
Xlj75Rox/8tE3/MvX98JIX8jz0RlyM/1v5sj9gsyMd6/8aYlC8X4NxP3sgJv
PxT7c8pMeDYJ73cklParysRUT3vLRg/pPIWq+d+Pb+88me7Hlonk7dN7N28i
5rOZMP186vyhf0X7l4lHN55daqLPof1nos6L3I8SP/I3zkxEF92/2O49/d6V
ia+27inqeoP0uTwTy/2CPatNo/qaJAsNTcc32nLJX0qzIIkxVxZ0J3sjy0KS
V51VrT+SvZBnofbGmMiOs+j7kIX/LZlZb/cMOk9FFsJ6fuPz5BLlE8osRPKx
Kgs9+e+FLEj5+2xZiOXr2bNQnX9PURZa8u91ZLnvx5mFL/l+XVkI5+dRnoUP
5ey8JAJe8PP0ENzPWypAze/DU0Bzfl8yAeH8Pn0F9/uWC3jI5SFAwGguLxBQ
M5TJU6CAflzeFALKuDyGCBjG5VUp4Hcuz1ECvuHyrhLQieuDWsBwri+CgKlc
n4xV63N9swnu+lggYB3XV7uA77k+Fwrw4/peJGA/twfFAjZze+EQMIPbkxIB
o7i9cQrYwe1RqYB73F65BHd7Vibgkpu9E9ztYYWA8dxeSrIRwO2pRzbGc3sr
zUYCt8ee2e72WpaN9tye+2ZDv5HZe3k23nB/EJDt7i+QjSfcnwRmw5P7G0U2
NnN/FJKNMdxfKbPRjvuzqGx3f6fKxkLuD9VV7+P+UsjGEe5Pjdnu/tZWtT/u
jwuysYX7a3s2vuD+vLDqPLm/L6oa83igOBsdeLzgyMZyHk+UZOMUjzec2eif
yuKR0mz05vGKKxtDN7F4piz7/4t3smHi8VBFNmryeEmiQWceT3locJjHW1IN
lvJ4zFODpzxek2lwncdzvhr3eE+uQVMeDwZoEMzjRWjwK48nAzVYyONNhQYp
PB4N0WAKj1eVGhTyeDZKg9E83lVpsJzHw2qNe7wsVO2Px9NGjXu8bdNgOI/H
CzSow+N1uwbRPJ4v1KAPj/eLNDjC84FijXu+4NCgPc8nSjSo9YrlG04NdDwf
KdWgHs9XXBr3fKZMgydu+Y4Gh3g+VKFBKM+XJDl4xfMpjxys4PmWNAeePB/z
zEF3nq/JcvAVz+d8c3CQ53vyHLTg+WBADh7xfBE50PN8MjAHJ3m+qcjBIZ6P
huTgAs9XlTmo+SfLZ6NycI3nu6ocLOX5sDoHrXm+LFT9nufTxhxU8HzbloPN
PB8vyMFEnq/bc6rsK8vnC3PwkOf7RTmoVs7qAcU5OMLrBY4cCLyeUJKDVF5v
cOa41yNKc/CU1ytcOfiF1zPKctDDrd6RAwuvh1Tk4N9arF4i0eICr6d4aDGF
11ukWnzi9RhPLYp5vUamRQtez/HV4jCv98i1qO5i9aAALXJ4vQhalPN6UqAW
dl5vUmixgdejQrTu9SqlFl15PStKi995vUulRQKvh6m17vUyQYuavJ5m1MKL
19tsWvd6XEHV9/J6nV3rXs8r1KJzNqv3FWlxidcDi7V4xOuFDq17PbFEiwW8
3ujUIprXI0u1WM7rlS4t5vB6ZpkWa9zqnVrc5PXQCi1m83qpROdeT/XQ4SOv
t0p1mMTrsZ46/MTrtTId+mtYPddXh3Re75Xr8Cye1YMDdJjK68XQYQCvJwfq
0JHXmxU69OL16BAdavJ6tVKHQbyeHaVzr3erdNjE6+FqHbS8Xi7oMJ7X041V
z89l9Xabzr0eX6BDS16vt+vwLa/nF+pwktf7i3Tw5v2AYh2svF/gqDoP3k8o
0bn3G5w6fEhk/YhSHZ7wfoVLh6G8n1GmwwG3focOs3g/pEKH1bxfItGjKe+n
eOgRyPstUj2CeD/GU4/HvF8j0+MY7+f46hHA+z1yPfx4PyhAj794vwhVY95P
CtTjFu83KfTw5v2oED16836VUu/ez4rS4zPvd6n0KOX9MLUeHZqxfpmgx7e8
n2bUoybvt9n0cPB+XIEee3i/zq5HBu/nFeqxhPf7ivTu/cBiPU7xfqFDjwTe
TyzR4yzvNzr1aML7kaX6qvia9Stdetzm/cwyPYrd+p16ePF+aIUekbxfKjGg
jPdTPQxowvutUgPu836spwFDeL9WZsBN3s/1NaCc93vlBtzm/eAAA7x4vxgG
bOH95EAD1vN+s8KA97wfHWJAIu9XKw3I4/3sKAPa8X63yuDeD1cbMJb3ywUD
tLyfbjTgEO+32wz4kvfjCwzu/Xq7Abt4P7/QAG/e7y+q2i/HAxQbEMjxAg4D
0jieoMTgjjdwGtCB4xFKDe54BZcBbTieocyAmhzvUG6AwPEQFQZc4HgJidEd
T+FhRBuOt5AaYeJ4DE8jdrrhNYzoxfEcvkb05XgPuRGPOB4kwIgWHC8CI2Zx
PEmgEeB4E4URnhyPEmLEXY5XUVa9n+NZoowo4ngXlRGdOR5GbcQWjpcRjNjI
8TRGozvexmaEheNxCoy4wvE6dqM7nqfQiAUc71NkxBuOByo2okZzhhdyGLGa
44lKjKjvw/BGTiPSOB6p1OiOV3IZMYnjmcqMWMfxTuVGqDgeqsKI6hwvJTFB
4HgqDxPGcryV1ITHHI/laUIXN7yWCUc5nsvXhA4c7yU3uePBAkwYxvFiMGEZ
x5MFmuDkeDOFCcfrMzxaiAm3OF5NaXLHs0WZcJvj3VQmnOJ4OLUJBRwvJ5hQ
+Zjh6Ywm1OJ4O5sJqzger8CE3hyvZ6/aH8fzFZpQyPF+RSYM5XjAYhP8OF7Q
YUJbjicsMaFRLsMbOk3ueMTSqvPgeEWXCd05nrHMhEMc71huwhWOh6wwQcvx
kpJcBHI8pUeuO95SmovaHI/pmYtpbnjNXPyP4zl9c9GH4z3luTBwPGhALowc
L4pcdzxpYC6WcLypIhdPOB41JBcajldV5iKV41mjcjGE411VuXi7j+Fh1blo
xfGyQi4ucDytsep9HG9ry8UujsctyMVVjte156I9x/MW5uI9x/sW5SKP44GL
czGY44UdubBzPHFJLiI53tiZi6ccj1ya645XduXiMsczl+XixWuGdy7PxZZT
DA9dkYsTHC8tMaNGKcNTe5hxl+OtpWac5nhsTzOkbnhtMwo4ntvXjEkc7y03
I5HjwQPMGM3x4jC748kDzejK8eYKM6I5Hj3EjIkcr640Yx3Hs0eZ8Zzj3VVm
dzy82uyOlxfMWMvx9EYzBnC8vc2MJI7HLzDDyvH6djOWcDx/oRk7ON6/yAw7
5wMUV50f5ws4qvbH+QQlZrTkfAOnGcGcj1BqxlzOV3CZcYnzGcrMkHO+Q3nV
/XE+RIUZfpwvIbEgmfMpPCy4zPkWUgvqcz6GpwV3OF9DZoGR8zl8LVimZnwP
uQUuzgcJsGC/G1/E4s4nCbSgB+ebKCxQcD5KiAVpnK+itOAY57NEWRDC+S4q
C4I4H0ZtcefLCBYM4nwaowVDON/GZsE1zscpsGA85+vYLcjjfJ5CC4I536fI
gmecD1RswQTOF3JYsJfziUos2Mn5Rk4LrJyPVGrBLM5XclnQgPOZyizYwvlO
5RZs4HyoCgvuc76UJA8NfmN8Ko88xHC+lTQPWzkfyzMPBZyvJcuDmvO5fPNw
nPO95HnQcz5YQB6qv+R8sTw04XyywDx3vpkiD98MYHy0kDzI6zK+mjIPBs5n
i8qDF+e7qfKwmPPh1FVjN75cHsZxPp0xD/c4386Wh/Ocj1eQB0/O17PnQcb5
fIV5uM75fkV52M/5gMVV7+d8QUfVeXE+YUke3nZmfENnHnScj1iahy2cr+jK
w0bOZyzLw1XOdyzPQyrnQ1bkYTDnS0qseMv5lB5WnOd8S6kVBzgf09OKJ5yv
KbNil4PxOX2taPWK8T3lVrzifNAAK+ScLworOnM+aaAVKznfVGHFAM5HDbEi
ivNVlVZ04XzWKCssnO+qssKf82HVVgRwvqxgdefTGq1YyPm2NisKOR+3wIrv
OV/XboWG83kLrfiF832LrKjP+cDFVvzK+cKOqv1wPnGJFS8539hpRSXnI5da
MZHzlV1WzOF85jKrO9+53IoanA9dYUWyG186HwrOp/bIRwHnW0vz3fnYnvnu
fG1Zvjuf2zcfzTnfW57vzgcPyHfniyMflzmfPDAfK4hv/n82sehd
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 1001.}, {0, 0.27789834349359377`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.4461920695278*^9, 3.4772347823269997`*^9, 
  3.6350679625687313`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 1001.}, {0, 14.652561878132042`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.4461920695278*^9, 3.4772347823269997`*^9, 
  3.635067962666864*^9}]
}, Open  ]],

Cell[TextData[{
 "The",
 StyleBox[" Fourier",
  FontFamily->"Courier New"],
 " function returns a list which runs \[CapitalDelta]\[Omega]{0,1,2,...,high \
frequency,-high frequency,...,-2,-1} and so we can see from this graph that \
there is a small high-frequency background.  This suggests that we try losing \
the parts of the transform that are less than, say, 0.25, then transforming \
back (with a final ",
 StyleBox["Chop",
  FontFamily->"Courier New"],
 " to remove any small imaginary part from the inverse transform)."
}], "Text",
 CellChangeTimes->{{3.6044090734586*^9, 3.604409084577434*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"itr", "=", 
   RowBox[{"Chop", "[", 
    RowBox[{
     RowBox[{"InverseFourier", "[", 
      RowBox[{"Chop", "[", 
       RowBox[{"tr", ",", "0.25`"}], "]"}], "]"}], ",", "0.001`"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"ListPlot", "[", "itr", "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw923k8VN//B3DtWtFGm0SLqCiFRL0qJG0jKoqMNbuxj32YwcwYS5SIirTQ
qlKWVKNU+rQpKonSolChtGj/+j287+/zz+fx7M7pzHvOuee87z3vpjn6bnTp
LyMj0zZARub//t/3X9eyvQdfqA398mIZ/QH2HFsdbrC+mSyLQLMB61YcYSwP
xVWactP7vySPRb9z/9xbHBgr4ZVDZJ7oOuPJ+Nj/VprC3FdkFSjXcs6FZzJW
RcY8weiqIa/J0yESR2x7E8Z4JhwrPjXUfmKsjqg6hbgErzdkDfgvrf3zqZ3x
HBRZPD44wLuFPA9Z/dozjn1mrI1Rn2bcfxj+ljwfNQ/E01xl35EXQOWU0qa1
mYx1oChYreOp2UpeCP+Qpr1HKhkvQmHNm/TmrW1kXcyU7Xb+8Y2xHkIMXQrv
724n62NLwWE36L0nL8agv1bzZj1jbIDML8vVtsd8IC+B3JPxsy7P/kg2hFv0
oXblOsZGyH9+ZtgWXgd5KY7209M0nNdJXgY77/bR+U2MAZl6/mutVV195gGn
FLJrVXPJMsuxV3SxKv0Hc305lrv0e+9p+Ymur8C7xVEWu06SeStgkvP53dch
n+n6SlQ+2JYa6kjmrcSXcPM5speY68ao434vFCt203VjcPeNUGj3I8uY4IWr
YorcHea6CRQMcvhvZnyh66Z4a1mZuDGazDNF+XhR0sp65voqdP5Iv5qn/ZWu
r8L5n45XtwjJMmYoGjVWwnrBXDeD8pW0lJBF3+j6arAv6V0oFZN5q/Gn46GH
zAvmujleK0/OW7LgO103B08noXGLgCyzBtbhoborHzHX12C51XOnD9N76Ppa
sNQmlq8IIPPWQrhym46ulLm+Dn7LVvuXDP9B19fhstWY6yWbyDLr4dD6Ytbs
/cz19Ri/8IDp3zfM9Q3YNNY4SkPjJ13fAAS5NuV5k2VYaPCxnG5zmgwWBhxP
qTLpZD7PwlSdBy/s5v7qs5SFZKNg00x3sowFPAdHB33IJ8MCkbMUdm1sJPMs
YGycyLk2+je1t8DnhdqR+qvIMhsxXt3vzvFQMjaiOfD5CKVjZN5G9MjdFHDr
mfYbEX41eeStgX+ovSWyXK6NGqxFhiViIn9w52wh8ywxP4crXRxJllqi7PuV
J5p5THsrbMx8P7vfNaa9FTT8+u8ufcW0t4JC9iJnC5m/1N4KrVeVzG9PIsts
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
+WLZ/wBjWCt4
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 1001.}, {-1.6387517887592744`, 1.9223142246762361`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.4461920695858*^9, 3.477234782692*^9, 
  3.635067995735468*^9}]
}, Open  ]],

Cell["The resulting trace is significantly clearer.", "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summary", "Section"],

Cell["\<\
 This lecture started with a very general problem of series expansions of \
functions, and then specialised that to Fourier series (where a function is \
defined on a finite range, but is then imagined to be periodically repeated \
and is then expanded in terms of sines and cosines, or complex exponentials). \
The next problem was that of a function defined on an infinite interval, when \
the summation is replaced by an integral. We have seen how Fourier transforms \
may be applied in solving differential equations and in smoothing data -- \
just two examples form the enormous range of applications.
\
\>", "Text",
 CellChangeTimes->{
  3.4461917541918*^9, 3.635068010212963*^9, {3.635070699305215*^9, 
   3.635070704307611*^9}}],

Cell[TextData[{
 StyleBox["A.H. Harker\nPhysics and Astronomy, UCL\nSeptember 2005; \nrevised \
for ",
  FontColor->RGBColor[0, 1, 0]],
 StyleBox["Mathematica",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 1, 0]],
 StyleBox[" version 5.2 March 2007; \nfurther revised February 2008;\nrevised \
for ",
  FontColor->RGBColor[0, 1, 0]],
 StyleBox["Mathematica",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 1, 0]],
 StyleBox[" version 6.0 March 2009\nrevised for ",
  FontColor->RGBColor[0, 1, 0]],
 StyleBox["Mathematica",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 1, 0]],
 StyleBox[" version 7.0 March 2010.\nAmended by Patrick Guio, Physics and \
Astronomy, UCL, March 2014, March 2015, March 2016, March 2017.",
  FontColor->RGBColor[0, 1, 0]]
}], "Text",
 CellChangeTimes->{{3.4461917415808*^9, 3.4461917869388*^9}, {
  3.477840279054*^9, 3.477840297348*^9}, {3.6044088773909817`*^9, 
  3.6044088979232187`*^9}, {3.634981116304636*^9, 3.634981116598423*^9}, {
  3.6349811682075644`*^9, 3.634981205392345*^9}, {3.666940502760921*^9, 
  3.666940507514757*^9}, {3.698395844884988*^9, 3.6983958490809717`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1016},
WindowMargins->{{-1, Automatic}, {Automatic, -1}},
ShowSelection->True,
Magnification:>2. Inherited,
FrontEndVersion->"10.4 for Linux x86 (64-bit) (April 11, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "Modify the definitions below to change the default appearance of all \
cells in a given style.  Make modifications to any definition using commands \
in the Format menu.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Subsection"], 
         Cell[
          StyleData[All, "Working"], 
          CellBracketOptions -> {"Color" -> RGBColor[0, 0.2, 1]}, 
          ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Subsection"], 
         Cell[
         "  The options defined for the style below will be used at the \
Notebook level.  ", "Text"], 
         Cell[
          StyleData["Notebook"], PageHeaders -> {{
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"], None, 
             Cell[
              TextData[{
                OptionValueBox["FileName"]}], "Header"]}, {
             Cell[
              TextData[{
                OptionValueBox["FileName"]}], "Header"], None, 
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"]}}, 
          PrintingOptions -> {
           "FacingPages" -> False, "FirstPageHeader" -> False, 
            "PageHeaderMargins" -> {43, 43}, "PageSize" -> {611.688, 792}}, 
          CellFrameLabelMargins -> 6, StyleMenuListing -> None]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Headings", "Subsection", 
          HyphenationOptions -> {"HyphenationMinLengths" -> {Inherited, 7}}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{0, 0}, {15, 0}}, 
             CellMargins -> {{10, 0}, {0, 4}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, 
             CellFrameMargins -> {{0, 0}, {-8, 0}}, CellFrameColor -> 
             RGBColor[0.400015, 0, 0.600015], TextAlignment -> Right, 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, 
             LineSpacing -> {1, 0}, CounterIncrements -> "Title", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Subtitle", 0}}, FontFamily -> "Arial", 
             FontSize -> 72, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.400015, 0, 0.600015]], 
            Cell[
             StyleData["Title", "Printout"], CellFrame -> {{0, 0}, {6, 0}}, 
             CellMargins -> {{10, 0}, {0, 6}}, 
             CellFrameMargins -> {{0, 0}, {-7, 0}}, CellFrameColor -> 
             GrayLevel[0.6], 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, FontFamily -> 
             "Arial", FontSize -> 38, FontWeight -> "Bold", FontColor -> 
             GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], CellMargins -> {{10, -0.75}, {20, 7}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, CounterIncrements -> 
             "Subtitle", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Subsubtitle", 0}}, FontFamily -> "Arial", 
             FontSize -> 32, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.400015, 0, 0.600015]], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{10, -0.75}, {20, 8}}, 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, FontFamily -> 
             "Arial", FontSize -> 21, FontWeight -> "Bold", FontColor -> 
             GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], CellMargins -> {{50, 10}, {10, 2}}, 
             TextAlignment -> Right, Hyphenation -> True, 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, 
             LineSpacing -> {1, 2}, CounterIncrements -> "SmallText", 
             FontFamily -> "Times", FontSize -> 12, FontSlant -> "Italic"], 
            Cell[
             StyleData["SmallText", "Printout"], PageWidth -> PaperWidth, 
             CellMargins -> {{50, 2}, {10, 4}}, 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, 
             LineSpacing -> {1, 2}, FontFamily -> "Palatino", FontSize -> 9]},
            Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellFrame -> {{6, 0}, {0, 1.5}}, 
             CellMargins -> {{10, 0}, {12, 18}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 18}, 
             CellGroupingRules -> {"SectionGrouping", 30}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.530007, 0, 0], 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, CounterIncrements -> 
             "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
               "NumberedEquation", 0}}, FontFamily -> "Arial", FontSize -> 22,
              FontWeight -> "Bold", FontColor -> RGBColor[0.530007, 0, 0]], 
            Cell[
             StyleData["Section", "Printout"], 
             CellFrame -> {{0, 0}, {2.5, 0}}, 
             CellMargins -> {{10, 0}, {14, 18}}, PageBreakBelow -> False, 
             CellFrameMargins -> {{10, 0}, {0, 7}}, CellFrameColor -> 
             GrayLevel[0.500008], 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, FontFamily -> 
             "Arial", FontSize -> 14, FontWeight -> "Bold", FontColor -> 
             GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellFrame -> {{6, 0}, {0, 1.5}}, 
             CellMargins -> {{10, 0}, {11, 16}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
             CellGroupingRules -> {"SectionGrouping", 40}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.100008, 0.0899977, 0.659998], 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, CounterIncrements -> 
             "Subsection", CounterAssignments -> {{"Subsubsection", 0}}, 
             FontFamily -> "Arial", FontSize -> 18, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.100008, 0.0899977, 0.659998]], 
            Cell[
             StyleData["Subsection", "Printout"], CellFrame -> False, 
             CellDingbat -> None, CellMargins -> {{10, 0}, {9, 14}}, 
             PageBreakBelow -> False, 
             CellFrameMargins -> {{10, 0}, {0.6875, 6}}, CellFrameColor -> 
             GrayLevel[0.6], 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, FontFamily -> 
             "Arial", FontSize -> 12, FontWeight -> "Bold", FontColor -> 
             GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellFrame -> {{6, 0}, {0, 1.5}}, 
             CellDingbat -> None, CellMargins -> {{10, 0}, {6, 12}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
             CellGroupingRules -> {"SectionGrouping", 50}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.110002, 0.429999, 0.110002], 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, CounterIncrements -> 
             "Subsubsection", FontFamily -> "Arial", FontSize -> 14, 
             FontWeight -> "Bold", FontColor -> 
             RGBColor[0.110002, 0.429999, 0.110002]], 
            Cell[
             StyleData["Subsubsection", "Printout"], CellFrame -> False, 
             CellDingbat -> "\[FilledSquare]", 
             CellMargins -> {{21, 0}, {6, 9}}, PageBreakBelow -> False, 
             CellFrameColor -> GrayLevel[0.6], 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, 
             LineSpacing -> {1, 2}, FontFamily -> "Arial", FontSize -> 10, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0]]}, Open]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Text", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], CellMargins -> {{10, 0}, {2, 2}}, 
             InputAutoReplacements -> {
              "mma" -> "Mathematica", "Mma" -> "Mathematica", "MMA" -> 
               "Mathematica", Inherited}, Hyphenation -> True, 
             LineSpacing -> {1, 4}, ParagraphSpacing -> {0, 0}, TabSpacings -> 
             1.8, CounterIncrements -> "Text", FontFamily -> "Times", 
             FontSize -> 12], 
            Cell[
             StyleData["Text", "Printout"], PageWidth -> PaperWidth, 
             CellMargins -> {{10, 0}, {0, 0}}, TextJustification -> 1, 
             LineSpacing -> {1, 2}, ParagraphSpacing -> {0, 0}, TabSpacings -> 
             1.5, FontFamily -> "Palatino", FontSize -> 10]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["EmphasizedText"], CellFrame -> {{1, 0}, {0, 0}}, 
             CellMargins -> {{10, 0}, {3, 3}}, 
             CellFrameMargins -> {{10, Inherited}, {Inherited, Inherited}}, 
             CellFrameColor -> RGBColor[0.829999, 0, 0.0500038], 
             InputAutoReplacements -> {
              "mma" -> "Mathematica", "Mma" -> "Mathematica", "MMA" -> 
               "Mathematica", Inherited}, Hyphenation -> True, 
             LineSpacing -> {1, 4}, ParagraphIndent -> -14, TabSpacings -> 
             1.8, CounterIncrements -> "Text", FontFamily -> "Times", 
             FontSize -> 12, Background -> RGBColor[1, 0.994522, 0.910979]], 
            Cell[
             StyleData["EmphasizedText", "Printout"], PageWidth -> PaperWidth,
              CellFrame -> False, CellMargins -> {{23, 0}, {5, 5}}, 
             CellFrameMargins -> {{7, Inherited}, {Inherited, Inherited}}, 
             CellFrameColor -> GrayLevel[0], TextJustification -> 1, 
             LineSpacing -> {1, 2}, ParagraphIndent -> -8.6875, TabSpacings -> 
             1.5, FontFamily -> "Palatino", FontSize -> 10, Background -> 
             GrayLevel[1]]}, Open]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Input/Output", "Subsection"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.    ", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellMargins -> {{40, 10}, {4, 4}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             CellLabelAutoDelete -> True, 
             CellLabelMargins -> {{11, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             LineSpacing -> {1, 4}, AutoItalicWords -> {}, LanguageCategory -> 
             "Mathematica", FormatType -> StandardForm, ShowStringCharacters -> 
             True, NumberMarks -> True, 
             LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, CounterIncrements -> 
             "Input", FontFamily -> "Courier", FontSize -> 12, FontWeight -> 
             "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellMargins -> {{28, 0}, {4, 4}},
              LineSpacing -> {1, 1}, 
             LinebreakAdjustments -> {0.85, 2, 10, 1, 1}, FontSize -> 9]}, 
           Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], CellMargins -> {{40, 10}, {4, 2}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, 
             CellLabelAutoDelete -> True, 
             CellLabelMargins -> {{11, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, LanguageCategory -> None, FormatType -> 
             StandardForm, CounterIncrements -> "Output", FontFamily -> 
             "Courier", FontSize -> 12], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{28, 0}, {4, 0}}, FontSize -> 9]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], CellMargins -> {{28, Inherited}, {2, 1}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, LanguageCategory -> None, FormatType -> 
             InputForm, CounterIncrements -> "Message", StyleMenuListing -> 
             None, FontFamily -> "Courier", FontSize -> 12, FontColor -> 
             RGBColor[0, 0.2, 1]], 
            Cell[
             StyleData["Message", "Printout"], ShowCellBracket -> False, 
             FontSize -> 9]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], CellMargins -> {{40, Inherited}, {2, 1}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             CounterIncrements -> "Print", StyleMenuListing -> None, 
             FontFamily -> "Courier", FontSize -> 12], 
            Cell[
             StyleData["Print", "Printout"], ShowCellBracket -> False, 
             CellMargins -> {{28, Inherited}, {2, 1}}, FontSize -> 9]}, 
           Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{25, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, CounterIncrements -> "Graphics", 
             ImageMargins -> {{43, Inherited}, {Inherited, 0}}, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
             ImageSize -> {110, 110}, 
             ImageMargins -> {{18, Inherited}, {Inherited, 0}}, FontSize -> 
             9]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Arial", FontSize -> 12, FontColor -> RGBColor[0, 0.2, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontSize -> 9, FontSlant -> 
             "Oblique", FontColor -> GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["FrameLabel"], LanguageCategory -> None, 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 12], 
            Cell[
             StyleData["FrameLabel", "Printout"], FontFamily -> "Palatino", 
             FontSize -> 10, FontColor -> GrayLevel[0]]}, Open]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Variations for Headings", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SectionZeroAbove"], CellFrame -> {{6, 0}, {0, 1.5}}, 
             CellMargins -> {{10, 0}, {12, 18}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 18}, 
             CellGroupingRules -> {"SectionGrouping", 30}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.530007, 0, 0], CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
               "NumberedEquation", 0}}, FontFamily -> "Arial", FontSize -> 22,
              FontWeight -> "Bold", FontColor -> RGBColor[0.530007, 0, 0]], 
            Cell[
             StyleData["SectionZeroAbove", "Printout"], 
             CellFrame -> {{0, 0}, {2.5, 0}}, 
             CellMargins -> {{10, 0}, {14, 0}}, PageBreakBelow -> False, 
             CellFrameMargins -> {{10, 0}, {0, 7}}, CellFrameColor -> 
             GrayLevel[0.500008], FontFamily -> "Arial", FontSize -> 14, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubsectionZeroAbove"], 
             CellFrame -> {{6, 0}, {0, 1.5}}, 
             CellMargins -> {{10, 0}, {11, 5}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
             CellGroupingRules -> {"SectionGrouping", 40}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.100008, 0.0899977, 0.659998], CounterIncrements -> 
             "Subsection", CounterAssignments -> {{"Subsubsection", 0}}, 
             FontFamily -> "Arial", FontSize -> 18, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.100008, 0.0899977, 0.659998]], 
            Cell[
             StyleData["SubsectionZeroAbove", "Printout"], CellFrame -> False,
              CellDingbat -> None, CellMargins -> {{10, 0}, {9, 0}}, 
             PageBreakBelow -> False, 
             CellFrameMargins -> {{10, 0}, {0.6875, 6}}, CellFrameColor -> 
             GrayLevel[0.6], FontFamily -> "Arial", FontSize -> 12, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubsectionZeroBelow"], 
             CellFrame -> {{6, 0}, {0, 1.5}}, 
             CellMargins -> {{10, 0}, {8, 16}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
             CellGroupingRules -> {"SectionGrouping", 40}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.100008, 0.0899977, 0.659998], CounterIncrements -> 
             "Subsection", CounterAssignments -> {{"Subsubsection", 0}}, 
             FontFamily -> "Arial", FontSize -> 18, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.100008, 0.0899977, 0.659998]], 
            Cell[
             StyleData["SubsectionZeroBelow", "Printout"], CellFrame -> False,
              CellDingbat -> None, CellMargins -> {{10, 0}, {4, 14}}, 
             PageBreakBelow -> False, 
             CellFrameMargins -> {{10, 0}, {0.6875, 6}}, CellFrameColor -> 
             GrayLevel[0.6], FontFamily -> "Arial", FontSize -> 12, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubsectionZeroAboveBelow"], 
             CellFrame -> {{6, 0}, {0, 1.5}}, 
             CellMargins -> {{10, 0}, {8, 5}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
             CellGroupingRules -> {"SectionGrouping", 40}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.100008, 0.0899977, 0.659998], CounterIncrements -> 
             "Subsection", CounterAssignments -> {{"Subsubsection", 0}}, 
             FontFamily -> "Arial", FontSize -> 18, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.100008, 0.0899977, 0.659998]], 
            Cell[
             StyleData["SubsectionZeroAboveBelow", "Printout"], CellFrame -> 
             False, CellDingbat -> None, CellMargins -> {{10, 0}, {4, 0}}, 
             PageBreakBelow -> False, 
             CellFrameMargins -> {{10, 0}, {0.6875, 6}}, CellFrameColor -> 
             GrayLevel[0.6], FontFamily -> "Arial", FontSize -> 12, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubsubsectionZeroAbove"], 
             CellFrame -> {{6, 0}, {0, 1.5}}, CellDingbat -> None, 
             CellMargins -> {{10, 0}, {6, 7}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
             CellGroupingRules -> {"SectionGrouping", 50}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.110002, 0.429999, 0.110002], CounterIncrements -> 
             "Subsubsection", FontFamily -> "Arial", FontSize -> 14, 
             FontWeight -> "Bold", FontColor -> 
             RGBColor[0.110002, 0.429999, 0.110002]], 
            Cell[
             StyleData["SubsubsectionZeroAbove", "Printout"], CellFrame -> 
             False, CellDingbat -> "\[FilledSquare]", 
             CellMargins -> {{21, 0}, {6, 0}}, PageBreakBelow -> False, 
             CellFrameColor -> GrayLevel[0.6], LineSpacing -> {1, 2}, 
             FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Bold", 
             FontColor -> GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubsubsectionZeroBelow"], 
             CellFrame -> {{6, 0}, {0, 1.5}}, CellDingbat -> None, 
             CellMargins -> {{10, 0}, {3, 12}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
             CellGroupingRules -> {"SectionGrouping", 50}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.110002, 0.429999, 0.110002], CounterIncrements -> 
             "Subsubsection", FontFamily -> "Arial", FontSize -> 14, 
             FontWeight -> "Bold", FontColor -> 
             RGBColor[0.110002, 0.429999, 0.110002]], 
            Cell[
             StyleData["SubsubsectionZeroBelow", "Printout"], CellFrame -> 
             False, CellDingbat -> "\[FilledSquare]", 
             CellMargins -> {{21, 0}, {1, 9}}, PageBreakBelow -> False, 
             CellFrameColor -> GrayLevel[0.6], LineSpacing -> {1, 2}, 
             FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Bold", 
             FontColor -> GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubsubsectionZeroAboveBelow"], 
             CellFrame -> {{6, 0}, {0, 1.5}}, CellDingbat -> None, 
             CellMargins -> {{10, 0}, {3, 7}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
             CellGroupingRules -> {"SectionGrouping", 50}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.110002, 0.429999, 0.110002], CounterIncrements -> 
             "Subsubsection", FontFamily -> "Arial", FontSize -> 14, 
             FontWeight -> "Bold", FontColor -> 
             RGBColor[0.110002, 0.429999, 0.110002]], 
            Cell[
             StyleData["SubsubsectionZeroAboveBelow", "Printout"], CellFrame -> 
             False, CellDingbat -> "\[FilledSquare]", 
             CellMargins -> {{21, 0}, {1, 0}}, PageBreakBelow -> False, 
             CellFrameColor -> GrayLevel[0.6], LineSpacing -> {1, 2}, 
             FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Bold", 
             FontColor -> GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ChapterContents1"], CellMargins -> {{10, 0}, {2, 2}}, 
             Hyphenation -> True, LineSpacing -> {1, 4}, FontFamily -> 
             "Times", FontSize -> 13, FontWeight -> "Bold"], 
            Cell[
             StyleData["ChapterContents1", "Printout"], PageWidth -> 
             PaperWidth, CellMargins -> {{10, 0}, {1, 1}}, FontFamily -> 
             "Palatino", FontSize -> 9]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ChapterContents2"], CellMargins -> {{32, 0}, {2, 2}}, 
             Hyphenation -> True, LineSpacing -> {1, 5}, 
             ParagraphIndent -> -30, FontFamily -> "Times", FontSize -> 12], 
            Cell[
             StyleData["ChapterContents2", "Printout"], PageWidth -> 
             PaperWidth, CellMargins -> {{27, 0}, {0, 0}}, 
             LineSpacing -> {1, 4}, FontFamily -> "Palatino", FontSize -> 9]},
            Open]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Variations for Text", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BoxedText"], CellFrame -> {{1.5, 0.25}, {0.25, 1.5}}, 
             CellMargins -> {{10, 0}, {6, 6}}, 
             CellFrameMargins -> {{14, 4}, {6, 6}}, CellFrameColor -> 
             RGBColor[0, 0.00999466, 0.549996], Hyphenation -> True, 
             LineSpacing -> {1, 4}, ParagraphSpacing -> {0, 0}, 
             ParagraphIndent -> -15, TabSpacings -> 1.5, CounterIncrements -> 
             "Text", FontFamily -> "Times", FontSize -> 12, Background -> 
             RGBColor[0.930007, 0.949996, 1]], 
            Cell[
             StyleData["BoxedText", "Printout"], PageWidth -> PaperWidth, 
             CellFrame -> True, CellMargins -> {{10, 0}, {6, 6}}, 
             PageBreakWithin -> True, CellFrameMargins -> {{9, 3}, {4, 4}}, 
             CellFrameColor -> GrayLevel[0], LineSpacing -> {1, 2}, 
             ParagraphSpacing -> {0, 0}, ParagraphIndent -> -8.875, 
             TabSpacings -> 1.1, FontFamily -> "Palatino", FontSize -> 10, 
             Background -> GrayLevel[1]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BoxedProgram"], 
             CellFrame -> {{1.5, 0.25}, {0.25, 1.5}}, 
             CellMargins -> {{10, 0}, {6, 6}}, Evaluatable -> True, 
             CellFrameMargins -> {{14, 6}, {6, 6}}, CellFrameColor -> 
             RGBColor[0, 0.349996, 0], DefaultFormatType -> 
             DefaultInputFormatType, Hyphenation -> True, 
             LineSpacing -> {1, 2}, FormatType -> StandardForm, 
             ShowStringCharacters -> True, CounterIncrements -> "Text", 
             FontFamily -> "Courier", FontSize -> 12, FontWeight -> "Bold", 
             Background -> RGBColor[0.919997, 0.940002, 0.910079]], 
            Cell[
             StyleData["BoxedProgram", "Printout"], PageWidth -> PaperWidth, 
             CellFrame -> True, CellFrameMargins -> {{12, 3}, {4, 4}}, 
             CellFrameColor -> GrayLevel[0], ParagraphIndent -> -15, 
             FontFamily -> "Courier", FontSize -> 9, Background -> 
             GrayLevel[1]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Files"], FontFamily -> "Arial", FontSize -> 11, 
             FontWeight -> "Bold"], 
            Cell[
             StyleData["Files", "Printout"], PageWidth -> PaperWidth, 
             FontFamily -> "Arial", FontSize -> 9]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["DisplayEquation"], CellMargins -> {{10, 0}, {7, 7}}, 
             InputAutoReplacements -> {
              "mma" -> "Mathematica", "Mma" -> "Mathematica", "MMA" -> 
               "Mathematica", Inherited}, Hyphenation -> True, 
             LineSpacing -> {1, 4}, TabSpacings -> 1.8, CounterIncrements -> 
             "Text", FontFamily -> "Times", FontSize -> 12], 
            Cell[
             StyleData["DisplayEquation", "Printout"], PageWidth -> 
             PaperWidth, CellMargins -> {{10, 0}, {4, 4}}, CellFrameColor -> 
             GrayLevel[0], TextJustification -> 1, LineSpacing -> {1, 2}, 
             TabSpacings -> 1.5, FontFamily -> "Palatino", FontSize -> 10, 
             Background -> GrayLevel[1]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], CellMargins -> {{10, 0}, {7, 7}}, 
             CellFrameLabels -> {{None, 
                Cell[
                 TextData[{"(", 
                   CounterBox["NumberedEquation"], ")"}]]}, {None, None}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             LineSpacing -> {1, 4}, TabSpacings -> 1.8, CounterIncrements -> 
             "NumberedEquation", FormatTypeAutoConvert -> False], 
            Cell[
             StyleData["NumberedEquation", "Printout"], 
             CellMargins -> {{10, 0}, {4, 4}}, LineSpacing -> {1, 2}, 
             TabSpacings -> 1.5, FontSize -> 10]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["DotNumberedEquation"], 
             CellMargins -> {{10, 0}, {7, 7}}, CellFrameLabels -> {{None, 
                Cell[
                 TextData[{"(", 
                   CounterBox["Section"], ".", 
                   CounterBox["NumberedEquation"], ")"}]]}, {None, None}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             LineSpacing -> {1, 4}, TabSpacings -> 1.8, CounterIncrements -> 
             "NumberedEquation", FormatTypeAutoConvert -> False], 
            Cell[
             StyleData["DotNumberedEquation", "Printout"], 
             CellMargins -> {{10, 0}, {4, 4}}, LineSpacing -> {1, 2}, 
             TabSpacings -> 1.5, FontSize -> 10]}, Open]], 
         Cell[
          StyleData["PictureGroup"], CellMargins -> {{41, 4}, {0, 4}}, 
          CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
          True, StyleMenuListing -> None]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Format Types", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellExpression"], PageWidth -> Infinity, 
             CellMargins -> {{28, 10}, {4, 4}}, ShowCellLabel -> False, 
             ShowSpecialCharacters -> False, AllowInlineCells -> False, 
             AutoItalicWords -> {}, StyleMenuListing -> None, FontFamily -> 
             "Courier", FontSize -> 12, Background -> GrayLevel[1]], 
            Cell[
             StyleData["CellExpression", "Printout"], PageWidth -> PaperWidth,
              CellMargins -> {{28, 0}, {4, 4}}, ShowCellLabel -> False, 
             ShowSpecialCharacters -> False, AllowInlineCells -> False, 
             AutoItalicWords -> {}, StyleMenuListing -> None, FontFamily -> 
             "Courier", FontSize -> 9, Background -> GrayLevel[1]]}, Open]], 
         Cell[
          StyleData["InputForm"], InputAutoReplacements -> {}, 
          AllowInlineCells -> False, Hyphenation -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {0.6, 1}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], 
          InputAutoReplacements -> {
           "->" -> "\[Rule]", ":>" -> "\[RuleDelayed]", "<=" -> 
            "\[LessEqual]", ">=" -> "\[GreaterEqual]", "!=" -> "\[NotEqual]", 
            "==" -> "\[Equal]", Inherited}, 
          "TwoByteSyntaxCharacterAutoReplacement" -> True, 
          LineSpacing -> {1.25, 0}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TraditionalForm"], 
             InputAutoReplacements -> {
              "->" -> "\[Rule]", ":>" -> "\[RuleDelayed]", "<=" -> 
               "\[LessEqual]", ">=" -> "\[GreaterEqual]", "!=" -> 
               "\[NotEqual]", "==" -> "\[Equal]", Inherited}, 
             "TwoByteSyntaxCharacterAutoReplacement" -> True, 
             LineSpacing -> {1.25, 0}, SingleLetterItalics -> True, 
             TraditionalFunctionNotation -> True, DelimiterMatching -> None, 
             StyleMenuListing -> None, FontFamily -> "Times"], 
            Cell[
             StyleData["TraditionalForm", "Printout"], 
             InputAutoReplacements -> {
              "->" -> "\[Rule]", ":>" -> "\[RuleDelayed]", "<=" -> 
               "\[LessEqual]", ">=" -> "\[GreaterEqual]", "!=" -> 
               "\[NotEqual]", "==" -> "\[Equal]", Inherited}, 
             "TwoByteSyntaxCharacterAutoReplacement" -> True, 
             LineSpacing -> {1.25, 0}, SingleLetterItalics -> True, 
             TraditionalFunctionNotation -> True, DelimiterMatching -> None, 
             StyleMenuListing -> None, FontFamily -> "Palatino", FontSize -> 
             10]}, Open]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Headers and Footers", "Subsection"], 
         Cell[
          StyleData["Header"], CellMargins -> {{10, 0}, {0, 0}}, 
          DefaultNewInlineCellStyle -> "None", LanguageCategory -> 
          "NaturalLanguage", StyleMenuListing -> None, FontFamily -> "Arial", 
          FontSize -> 9, FontWeight -> "Bold"], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          DefaultNewInlineCellStyle -> "None", LanguageCategory -> 
          "NaturalLanguage", StyleMenuListing -> None, FontSize -> 9, 
          FontSlant -> "Italic"], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{10, 0}, {0, 0}}, 
          StyleMenuListing -> None, FontFamily -> "Palatino", FontSize -> 12, 
          FontSlant -> "Italic"]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Subsection"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               ButtonData}], 
            Cell[
             StyleData["Hyperlink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
         "The following styles are for linking automatically to the on-line \
help system.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MainBookLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["MainBook", #]}]& )}], 
            Cell[
             StyleData["MainBookLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["AddOnsLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["AddOns", #]}]& )}], 
            Cell[
             StyleData["AddOnsLink", "Printout"], FontFamily -> "Palatino", 
             FontSize -> 10, FontVariations -> {"Underline" -> False}, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuide", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Subsection"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]]}, Open]]}, 
  Visible -> False, FrontEndVersion -> 
  "10.4 for Linux x86 (64-bit) (April 11, 2016)", StyleDefinitions -> 
  "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 83, 1, 183, "Title"],
Cell[653, 25, 179, 4, 201, "Subtitle"],
Cell[CellGroupData[{
Cell[857, 33, 31, 0, 121, "Section"],
Cell[891, 35, 6288, 212, 1056, "Text"],
Cell[CellGroupData[{
Cell[7204, 251, 285, 9, 91, "Input"],
Cell[7492, 262, 376, 11, 87, "Output"]
}, Open  ]],
Cell[7883, 276, 66, 0, 37, "Text"],
Cell[7952, 278, 440, 17, 87, "Output"],
Cell[8395, 297, 255, 9, 37, "Text"],
Cell[8653, 308, 424, 12, 83, "Input"],
Cell[CellGroupData[{
Cell[9102, 324, 65, 1, 45, "Input"],
Cell[9170, 327, 1163, 41, 43, "Output"]
}, Open  ]],
Cell[10348, 371, 75, 0, 37, "Text"],
Cell[CellGroupData[{
Cell[10448, 375, 370, 11, 134, "Input"],
Cell[10821, 388, 112, 2, 41, "Output"],
Cell[10936, 392, 1370, 53, 41, "Output"]
}, Open  ]],
Cell[12321, 448, 191, 8, 37, "Text"],
Cell[CellGroupData[{
Cell[12537, 460, 340, 11, 45, "Input"],
Cell[12880, 473, 2241, 84, 41, "Output"]
}, Open  ]],
Cell[15136, 560, 193, 6, 37, "Text"],
Cell[CellGroupData[{
Cell[15354, 570, 949, 32, 76, "Input"],
Cell[16306, 604, 3100, 109, 146, "Output"]
}, Open  ]],
Cell[19421, 716, 865, 43, 148, "Text"],
Cell[20289, 761, 424, 12, 332, "Input"],
Cell[CellGroupData[{
Cell[20738, 777, 932, 29, 76, "Input"],
Cell[21673, 808, 1732, 65, 73, "Output"]
}, Open  ]],
Cell[23420, 876, 223, 6, 37, "Text"],
Cell[CellGroupData[{
Cell[23668, 886, 204, 6, 45, "Input"],
Cell[23875, 894, 6901, 256, 147, "Output"]
}, Open  ]],
Cell[30791, 1153, 251, 7, 37, "Text"],
Cell[CellGroupData[{
Cell[31067, 1164, 313, 10, 45, "Input"],
Cell[31383, 1176, 150346, 4496, 2479, "Output"]
}, Open  ]],
Cell[181744, 5675, 475, 12, 148, "Text"],
Cell[CellGroupData[{
Cell[182244, 5691, 655, 18, 90, "Input"],
Cell[182902, 5711, 3083, 108, 168, "Output"]
}, Open  ]],
Cell[186000, 5822, 140, 3, 74, "Text"],
Cell[CellGroupData[{
Cell[186165, 5829, 50, 0, 156, "Subsubsection"],
Cell[186218, 5831, 563, 15, 148, "Text"],
Cell[186784, 5848, 284, 9, 152, "Input"],
Cell[CellGroupData[{
Cell[187093, 5861, 310, 9, 90, "Input"],
Cell[187406, 5872, 1710, 57, 584, "Output"]
}, Open  ]],
Cell[189131, 5932, 474, 11, 111, "Text"],
Cell[CellGroupData[{
Cell[189630, 5947, 362, 10, 83, "Input"],
Cell[189995, 5959, 1121, 36, 196, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191153, 6000, 711, 20, 127, "Input"],
Cell[191867, 6022, 1008, 18, 98, "Message"],
Cell[192878, 6042, 892, 16, 98, "Message"],
Cell[193773, 6060, 760, 14, 66, "Message"],
Cell[194536, 6076, 573, 12, 33, "Message"],
Cell[195112, 6090, 643, 12, 82, "Output"],
Cell[195758, 6104, 1357, 32, 467, "Output"]
}, Open  ]],
Cell[197130, 6139, 283, 6, 37, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197450, 6150, 42, 0, 107, "Subsection"],
Cell[197495, 6152, 866, 22, 111, "Text"],
Cell[CellGroupData[{
Cell[198386, 6178, 2936, 89, 521, "Input"],
Cell[201325, 6269, 1108, 37, 79, "Output"],
Cell[202436, 6308, 117, 2, 41, "Output"],
Cell[202556, 6312, 139, 3, 61, "Output"],
Cell[202698, 6317, 117, 2, 82, "Output"],
Cell[202818, 6321, 117, 2, 82, "Output"],
Cell[202938, 6325, 117, 2, 41, "Output"],
Cell[203058, 6329, 137, 3, 61, "Output"]
}, Open  ]],
Cell[203210, 6335, 343, 8, 74, "Text"],
Cell[203556, 6345, 151, 3, 37, "Text"],
Cell[CellGroupData[{
Cell[203732, 6352, 525, 16, 45, "Input"],
Cell[204260, 6370, 18657, 318, 467, "Output"]
}, Open  ]],
Cell[222932, 6691, 713, 17, 113, "Text"],
Cell[223648, 6710, 745, 18, 83, "Input"],
Cell[224396, 6730, 455, 9, 74, "Text"],
Cell[224854, 6741, 230, 7, 37, "Text"],
Cell[CellGroupData[{
Cell[225109, 6752, 385, 10, 45, "Input"],
Cell[225497, 6764, 38907, 651, 467, "Output"]
}, Open  ]],
Cell[264419, 7418, 373, 10, 37, "Text"],
Cell[CellGroupData[{
Cell[264817, 7432, 348, 10, 45, "Input"],
Cell[265168, 7444, 4106, 80, 452, "Output"]
}, Open  ]],
Cell[269289, 7527, 399, 13, 75, "Text"],
Cell[CellGroupData[{
Cell[269713, 7544, 607, 14, 151, "Input"],
Cell[270323, 7560, 523, 14, 129, "Output"]
}, Open  ]],
Cell[270861, 7577, 517, 11, 148, "Text"],
Cell[CellGroupData[{
Cell[271403, 7592, 942, 28, 120, "Input"],
Cell[272348, 7622, 256110, 4218, 452, 155388, 2565, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[528473, 11843, 1176, 21, 296, "Text"],
Cell[529652, 11866, 473, 9, 148, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[530162, 11880, 40, 0, 212, "Subsection"],
Cell[530205, 11882, 1039, 29, 222, "Text"],
Cell[531247, 11913, 204, 4, 148, "Text"],
Cell[CellGroupData[{
Cell[531476, 11921, 704, 22, 166, "Input"],
Cell[532183, 11945, 625, 18, 200, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[532845, 11968, 294, 9, 90, "Input"],
Cell[533142, 11979, 449, 13, 200, "Output"]
}, Open  ]],
Cell[533606, 11995, 55, 0, 74, "Text"],
Cell[CellGroupData[{
Cell[533686, 11999, 428, 12, 90, "Input"],
Cell[534117, 12013, 186, 3, 82, "Output"]
}, Open  ]],
Cell[534318, 12019, 138, 3, 74, "Text"],
Cell[CellGroupData[{
Cell[534481, 12026, 236, 8, 90, "Input"],
Cell[534720, 12036, 483, 15, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[535240, 12056, 187, 5, 90, "Input"],
Cell[535430, 12063, 657, 22, 200, "Output"]
}, Open  ]],
Cell[536102, 12088, 304, 7, 148, "Text"],
Cell[CellGroupData[{
Cell[536431, 12099, 408, 12, 90, "Input"],
Cell[536842, 12113, 4836, 130, 82, "Output"]
}, Open  ]],
Cell[541693, 12246, 133, 5, 74, "Text"],
Cell[CellGroupData[{
Cell[541851, 12255, 819, 23, 166, "Input"],
Cell[542673, 12280, 94509, 1578, 496, "Output"]
}, Open  ]],
Cell[637197, 13861, 692, 16, 222, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[637926, 13882, 67, 0, 212, "Subsection"],
Cell[637996, 13884, 137, 3, 74, "Text"],
Cell[CellGroupData[{
Cell[638158, 13891, 347, 11, 166, "Input"],
Cell[638508, 13904, 290, 7, 82, "Output"],
Cell[638801, 13913, 290, 7, 82, "Output"]
}, Open  ]],
Cell[639106, 13923, 186, 4, 74, "Text"],
Cell[CellGroupData[{
Cell[639317, 13931, 338, 11, 94, "Input"],
Cell[639658, 13944, 444, 13, 86, "Output"]
}, Open  ]],
Cell[640117, 13960, 178, 5, 74, "Text"],
Cell[CellGroupData[{
Cell[640320, 13969, 264, 8, 90, "Input"],
Cell[640587, 13979, 790, 24, 178, "Output"]
}, Open  ]],
Cell[641392, 14006, 216, 6, 74, "Text"],
Cell[CellGroupData[{
Cell[641633, 14016, 749, 23, 188, "Input"],
Cell[642385, 14041, 748, 23, 178, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[643170, 14069, 729, 22, 166, "Input"],
Cell[643902, 14093, 878, 27, 178, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[644817, 14125, 237, 7, 90, "Input"],
Cell[645057, 14134, 716, 22, 178, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[645810, 14161, 144, 4, 90, "Input"],
Cell[645957, 14167, 802, 25, 152, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[646796, 14197, 231, 7, 90, "Input"],
Cell[647030, 14206, 632, 20, 152, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[647699, 14231, 253, 7, 90, "Input"],
Cell[647955, 14240, 308, 9, 134, "Output"]
}, Open  ]],
Cell[648278, 14252, 377, 10, 152, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[648692, 14267, 55, 0, 214, "Subsection"],
Cell[648750, 14269, 1099, 21, 444, "Text"],
Cell[CellGroupData[{
Cell[649874, 14294, 460, 14, 166, "Input"],
Cell[650337, 14310, 15091, 259, 884, "Output"]
}, Open  ]],
Cell[665443, 14572, 134, 5, 74, "Text"],
Cell[CellGroupData[{
Cell[665602, 14581, 325, 9, 240, "Input"],
Cell[665930, 14592, 12082, 209, 906, "Output"],
Cell[678015, 14803, 12079, 209, 932, "Output"]
}, Open  ]],
Cell[690109, 15015, 604, 13, 222, "Text"],
Cell[CellGroupData[{
Cell[690738, 15032, 295, 9, 166, "Input"],
Cell[691036, 15043, 14859, 255, 858, "Output"]
}, Open  ]],
Cell[705910, 15301, 61, 0, 74, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[706020, 15307, 26, 0, 244, "Section"],
Cell[706049, 15309, 746, 13, 370, "Text"],
Cell[706798, 15324, 1120, 26, 592, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)


(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    632861,      12694]
NotebookOptionsPosition[    585957,      11695]
NotebookOutlinePosition[    627960,      12536]
CellTagsIndexPosition[    627917,      12533]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["3", "Title"],

Cell["\<\
PHAS2443: Practical Mathematics II
Lecture 3: Finite Difference Methods \
\>", "Subtitle"],

Cell[TextData[{
 "In the previous lecture we used one of the key ideas of this lecture, when \
we used the difference between adjacent cells to form an approximation to the \
gradient of a function. We also showed how we could model complex systems \
with simple rules linking the behaviour of discrete cells is space. In this \
lecture we adopt a more conventional approach to the solution of differential \
equations using finite difference methods. In the course of this we shall \
explore the problems of stability and accuracy that are crucial in selecting \
a method. The mathematical methods used in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " implement much more sophisticated methods than those we shall discuss here \
-- but in some cases, and for large systems, it may be better to construct \
ones own functions. "
}], "Text"],

Cell[CellGroupData[{

Cell["Finite differences for ordinary derivatives", "Section"],

Cell[TextData[{
 "Finite difference methods are based on Taylor's theorem, that a continuous \
function ",
 StyleBox["f(x)",
  FontSlant->"Italic"],
 " can be expanded about some point ",
 StyleBox["X",
  FontSlant->"Italic"],
 " as\n   ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     RowBox[{"X", "+", "h"}], ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"f", "(", "X", ")"}], "+", 
         RowBox[{"h", " ", 
          RowBox[{"f", "'"}], 
          RowBox[{"(", "X", ")"}]}], "+", 
         RowBox[{
          FractionBox[
           SuperscriptBox["h", "2"], 
           RowBox[{"2", "!"}]], 
          RowBox[{"f", "''"}], 
          RowBox[{"(", "X", ")"}]}], " ", "+", " ", 
         RowBox[{
          FractionBox[
           SuperscriptBox["h", "3"], 
           RowBox[{"3", "!"}]], 
          RowBox[{"f", "'''"}], 
          RowBox[{"(", "X", ")"}]}], " ", "+"}], " ", "..."}], ".", 
       StyleBox[
        FractionBox[
         SuperscriptBox["h", "n"], 
         RowBox[{"n", 
          StyleBox["!",
           FontWeight->"Plain",
           FontSlant->"Plain",
           FontTracking->"Plain",
           FontVariations->{"CompatibilityType"->0,
           "Masked"->False,
           "Outline"->False,
           "RotationAngle"->0,
           "Shadow"->False,
           "StrikeThrough"->False,
           "Underline"->False}]}]],
        FontSlant->"Italic"]}], 
      RowBox[{
       StyleBox[
        SuperscriptBox["f`", 
         RowBox[{"(", "n", ")"}]],
        FontSlant->"Italic"], "(", "X", ")"}]}], " ", "+", " ", 
     SubscriptBox["R", 
      RowBox[{"n", "+", "1"}]]}]}], TraditionalForm]]],
 "\n   where the truncation error ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", 
     RowBox[{"n", "+", "1"}]], " "}], TraditionalForm]]],
 "can always be expressed in the form\n   ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", 
     RowBox[{"n", "+", "1"}]], "=", " ", 
    RowBox[{
     FractionBox[
      SuperscriptBox["h", 
       RowBox[{"n", "+", "1"}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "!"}]], 
     RowBox[{
      SuperscriptBox["f", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}]], "(", "\[Xi]", ")"}]}]}], 
   TraditionalForm]]],
 "\n   where \[Xi] is in the range ",
 StyleBox["X\[LessEqual]\[Xi]\[LessEqual]X+h",
  FontSlant->"Italic"],
 " for ",
 StyleBox["h>0",
  FontSlant->"Italic"],
 ".\n   We can rewrite this expression as\n   ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "X", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"f", "(", 
          RowBox[{"X", "+", "h"}], ")"}], "-", 
         RowBox[{"f", "(", "X", ")"}]}], "h"], " ", "-", " ", 
       RowBox[{
        FractionBox["h", 
         RowBox[{"2", "!"}]], 
        RowBox[{"f", "''"}], 
        RowBox[{"(", "X", ")"}]}], " ", "-", " ", 
       RowBox[{
        FractionBox[
         SuperscriptBox["h", "2"], 
         RowBox[{"3", "!"}]], 
        RowBox[{"f", "'''"}], 
        RowBox[{"(", "X", ")"}]}], " ", "-"}], " ", "..."}], "."}]}], 
   TraditionalForm]]],
 "\n   which shows two things:\n     a) as ",
 StyleBox["h",
  FontSlant->"Italic"],
 " becomes small, the finite difference approximation becomes a better \
approximation to the derivative;\n     b) the error decreases linearly with ",
 StyleBox["h ",
  FontSlant->"Italic"],
 StyleBox["-- it is a first-order approximation, and the error is usually \
written in the form ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["O(h)",
  FontSlant->"Italic",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[", for 'of order ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["h",
  FontSlant->"Italic",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["'",
  FontVariations->{"CompatibilityType"->0}],
 ".\n    This approximation is called a forward difference approximation, as \
it finds the slope at ",
 StyleBox["X",
  FontSlant->"Italic"],
 " from the value of the function at ",
 StyleBox["X",
  FontSlant->"Italic"],
 " and the value at a larger value of ",
 StyleBox["x",
  FontSlant->"Italic"],
 ".   Another first-order approximation may be found by taking a backward \
difference:\n     ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "X", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"f", "(", "X", ")"}], "-", 
         RowBox[{"f", "(", 
          RowBox[{"X", "-", "h"}], ")"}]}], "h"], " ", "+", " ", 
       RowBox[{
        FractionBox["h", 
         RowBox[{"2", "!"}]], 
        RowBox[{"f", "''"}], 
        RowBox[{"(", "X", ")"}]}], " ", "-", " ", 
       RowBox[{
        FractionBox[
         SuperscriptBox["h", "2"], 
         RowBox[{"3", "!"}]], 
        RowBox[{"f", "'''"}], 
        RowBox[{"(", "X", ")"}]}], " ", "+"}], " ", "..."}], "."}]}], 
   TraditionalForm]]],
 "\n     For a better approximation, consider the slope of the line between ",
 StyleBox["X-h",
  FontSlant->"Italic"],
 " and ",
 StyleBox["X+h",
  FontSlant->"Italic"],
 ":\n      ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     RowBox[{"X", "-", "h"}], ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"f", "(", "X", ")"}], "-", 
       RowBox[{"h", " ", 
        RowBox[{"f", "'"}], 
        RowBox[{"(", "X", ")"}]}], "+", 
       RowBox[{
        FractionBox[
         SuperscriptBox["h", "2"], 
         RowBox[{"2", "!"}]], 
        RowBox[{"f", "''"}], 
        RowBox[{"(", "X", ")"}]}], " ", "-", " ", 
       RowBox[{
        FractionBox[
         SuperscriptBox["h", "3"], 
         RowBox[{"3", "!"}]], 
        RowBox[{"f", "'''"}], 
        RowBox[{"(", "X", ")"}]}], " ", "+"}], " ", "..."}], "."}]}], 
   TraditionalForm]]],
 "\n      ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     RowBox[{"X", "+", "h"}], ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"f", "(", "X", ")"}], "+", 
       RowBox[{"h", " ", 
        RowBox[{"f", "'"}], 
        RowBox[{"(", "X", ")"}]}], "+", 
       RowBox[{
        FractionBox[
         SuperscriptBox["h", "2"], 
         RowBox[{"2", "!"}]], 
        RowBox[{"f", "''"}], 
        RowBox[{"(", "X", ")"}]}], " ", "+", " ", 
       RowBox[{
        FractionBox[
         SuperscriptBox["h", "3"], 
         RowBox[{"3", "!"}]], 
        RowBox[{"f", "'''"}], 
        RowBox[{"(", "X", ")"}]}], " ", "+"}], " ", "..."}], "."}]}], 
   TraditionalForm]]],
 "\n     and if we subtract and rearrange we find\n      ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", "'"}], 
     RowBox[{"(", "X", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"f", "(", 
          RowBox[{"X", "+", "h"}], ")"}], "-", 
         RowBox[{"f", "(", 
          RowBox[{"X", "-", "h"}], ")"}]}], 
        RowBox[{"2", "h"}]], "  ", "-", " ", 
       RowBox[{
        FractionBox[
         SuperscriptBox["h", "2"], 
         RowBox[{"3", "!"}]], 
        RowBox[{"f", "'''"}], 
        RowBox[{"(", "X", ")"}]}], " ", "-"}], " ", "..."}], "."}]}], 
   TraditionalForm]]],
 "\n      so that this central difference approximation has an error of order \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["h", "2"], ","}], TraditionalForm]]],
 " as you should have found in last week's exercises.\n      \n        We \
demonstrate the difference approximations on a function representing a \
beating wave."
}], "Text",
 CellChangeTimes->{{3.694160356623144*^9, 3.694160438169648*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "=", "0.1`"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ft", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"10", " ", "x"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", " ", "\[Pi]"}], ",", "h"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dft", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "x"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "x", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"10", " ", "x"}], "]"}]}], ")"}]}], "/.", 
      "\[InvisibleSpace]", 
      RowBox[{"x", "\[Rule]", "xp"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"xp", ",", "0", ",", 
       RowBox[{"2", " ", "\[Pi]"}], ",", "h"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"dft", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Thickness", "[", "0.005`", "]"}]}], ",", 
     RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"pf", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"RotateLeft", "[", "ft", "]"}], "-", "ft"}], "h"], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.005`", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"pb", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"ft", "-", 
       RowBox[{"RotateRight", "[", "ft", "]"}]}], "h"], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.005`", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"pc", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"RotateLeft", "[", "ft", "]"}], "-", 
       RowBox[{"RotateRight", "[", "ft", "]"}]}], 
      RowBox[{"2", " ", "h"}]], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.005`", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "pf", ",", "pb", ",", "pc"}], "]"}]}], "Input",
 CellChangeTimes->{{3.441617733618*^9, 3.4416177674*^9}, {
  3.6312623657840137`*^9, 3.631262372159091*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], Thickness[0.005], LineBox[CompressedData["
1:eJxVkn0s1HEcx488TkKXHF3cnaei6Txz6N53Hs7jWVbbNcthaFpSsrbE3JJa
yxqJibVhYlJJUqs8VZOndROWP1LIY0WxhkJW7T6/P/ptv3332uf7fn0/3+8+
/MT0mGRtFosl/vv/WzXfovj/lQXu0Qn7itihDg0a4NiFm6nrj7U6NWyKtRF7
x53qZarvgFHBXPKzl9rQMAclfXxJcSKbmAuOfqHAYoWp81CbZmnGERuTT4AY
y9Lh2H4usR0SDfSrFbHbiB2gNlcspOaaUn4PuNkDmytDfGIn1HFaFjxF5sT7
UPRtyUieweRd4O5x6oxXli2xELg8kBax14rYFTkHkx5sEetT3g1vbBQ5Wba2
xO4IHJ85GVfHJfaAqHe04Kp6ne7viTtRX1OkSzzyeeFSz+engT27iL2hO112
wthmmt7XB+l5P4vC663I5wvRp7XJWG8LYhFYCsO4+dPx5PeDMrPXd2PRjHz+
mNLxHmCVMvcLAMv0vsn7IdD+A2CbDIT45DHvLUbJRbdb5R9+0PnA/mLu97cf
ZzX7VUBevmdS/JFxyksweFjITs74pdmvkmDeZrp5d4IW+aTQe9jd1LQ+RXkp
btitBtRymP4C8Xxr56LE31TDqkDUB7W1ixeY+QqCQmkrutJmqfGpgtAa/cT1
dSSH/MFwHi+fqFMy/QUjt6asxcLZhvwhOOQxuOSoJFaFQJFg7RTS9YL6l6F/
tkpheJxHfhnuVggnRnQE5A9Fq37jtfxVeg9VKKoKOee576zJH4bqUbVwsFJA
/jDM9k0+4i8y8x+OsVT5dSwx/Yfjd4FRT7OMmccIdKfWSGbC9KgeAYFn9tmO
eDblI+EX4I05B5p3VSQqTbrbiox0qR6Fzrh+rRRfQ8pHYbOrYbRxbDv55Wjn
nWtovr1G/cvhsHyd7SPdoPtHI9Mkwd2AyyJ/NHhfZMOvXO6J/wBkGxGz
     "]]}, 
   {RGBColor[1, 0, 0], Thickness[0.005], LineBox[CompressedData["
1:eJw1kXsslXEYxw/dkDmcoUPudyXXklvO9xzX4xqb3HJf2qplpqGFXkkipU0u
hVIrUltM0h9Fl6nMpTOX5ppIoZw4C7XJqHae827v3n3e7+/5/J7n9zNMTAk9
Is9isXj/3v9f6SPh9dWp5HUKpnj0Aw8lLV87x1ZeSFEBrYEjHtldrJdSVgUn
KVczP2yY1qvD4m73xG53NqTMhb/bnVkVniqxDqJFF3NzOJ/JZ4BD5Y6uxjd2
kM8IM42ZbTVxXGITXK0eslSvekx+M5xTSKhNTNYhnwU2nhWKjgfqE+/CzXrR
wWI9Ma23go3x9KqoTJd81pgvWuJ1jBgS20K7zZ5v/H2D+rFDkZZDjWr8TvLZ
Y21jsvJsiBGxAwRz7IHmo9uI9yKjzCpRfE2TfPtwrKDb8fakAbEjmr7NFgeP
KhHvR6bf2+jlVNl5OOHKPXF4Q5RsP2fonaxslS9UIHYBk8hVVHm3mepdYRWl
u+dEGIfYDaMzav3rNbL+DyAipS80dOUXze+O11OCHxZsFvl4iBjSyC7t76Ac
0FuY+mj8al5azwDDHLvDHzBJOR9d1s4tGtZy0nqGD3bVp4TYrRLKBZhIa9ZL
G6T+GAHETUkptVmy/jwQXvsnprF6jfwecO65XqqsJJvfE296TXkpF2h+xhNf
BlJ92HzZ/F6If1KY7BJHPsYLRRzdS4MmsvvzxrgkroH9VI1yb5SUv1c9dV6N
6n1gPnR5lDVO98f44Lmib6R5niblvsgWLs5UxihTvS8eLYZt2bhvRH4h+m1i
jUIctCgXYrJe4r+usonq/ZDZnmtrd8uA/H7Ir1iNPiPiUu4PTyf9dGH7Es3v
DwuuSOgj0CZ/ABb8stjMvDr5A/Czql88XTJG5xuIxaFV75gqmocJRHa6MMMy
Zzv5g3BxwLeiLr6H/EEQNq6YORXIkT8YvQ9Ml3+fllAejCyRaVPk3BTvLyi8
HCg=
     "]]}, 
   {RGBColor[0, 1, 0], Thickness[0.005], LineBox[CompressedData["
1:eJw1kXss1WEYxw/dkDmcoUPudyXXklvO13E7xzU2ueW+tFXLTEMLHUkuKW1y
KZRakdpikv4oVFOZS2cuzTWRQjlxFmqTOdXOc37bb799ft/3+bzP876GiSmh
x+QZDAbn3/v/K33EnCyhaXPkwgyHfmCgXiWvmytjBTwSt37tnljrlLIq2gLH
PLN7GC+lrA5WUq5mftgorWfD4l7v1F53JqSsA3+3u/MqHFViA0QLC3NzWJ/J
Z4QjFY6uxjd3kc8Ec02Z7bVxbGIzXKsZsVSvfkJ+C1xQSKhLTNYh3x5InhcJ
TwbqE1vhVoPwcImeiNZbw8Z4dl1Yrks+WywWr3C6xgyJ7aDdbu9h/F1C/dij
WMuhVjV+N/kcsCGZrjofYkS8H9wF5lDL8R3EB5BRbpUouq5JPkecKOh1vDNt
QHwQzd/mS4LHlYidkOn3Nno1VXYezrh6XxTeGCXbzwV6p6va5IsUiF0hSGQr
qrzbSvVusIrS3XcqjEV8CONzaoObtbL+3RGRMhAauvaL5ufg9Qz3hwWTQT4g
YkQju2ywS5oLAL2lmY/Grxap3gOjLLujHzBNuQd6rJ1bNazlqJ4LZvWnhNjt
Ysq5mEpr0UsblvXnCVFzUkpdFvUn8ER43Z+YppoN8nvBue9GmbISzS/wwpt+
U07KJdn83vgylOrL9KD5Bd6If1qU7BInm9cHxSzdy8MmdH8CH0yK4xqZz9Qo
90VpxXvVMxfVqN4X5iNXxhmTsvvj4YUiL9I8T5NyHrL5y3NVMcpUz8fj5bBt
kgdG5Odj0CbWKMRBi3I/TDeI/TdVtlC9HzI7cm3tbhuQ3x/5levR54Rsyv3h
5aSfzu9YofkDYMEW8n252uQPwJJfFlOwqE7+QPysHhTNlk7Q+QZieWTdJ6aa
5mEEITudn2GZs5P8QSgc4lXWx/eRPxj8pjUzpwI58gej/6Hp6u+z4s6/rPoc
KA==
     "]]}, 
   {RGBColor[0, 0, 1], Thickness[0.005], LineBox[CompressedData["
1:eJw1k3sslXEYxw9HdXJJilxyH2cWqSNSx+V8z3Ecx+UwZlRsLkuayf0P6+bV
klVm3TBNusioKN3kj8qtxFwKFSemsERWMdncdqSd5323d+8+7/t7Pu/z/V1s
4lPDEjQ5HI5o7f7/VF8zIr7HddPLRaMieoFzwih5R9aXRjXyoNv2tD6uYZl4
M6okWySlOdPEhpBNdiPFTgNqNkHsJt6A3Yg+sTmapWPOpxeXyW8NcV2iTubw
xiY128KyIvLktxVjYjtkhfYmCwx4xHz8PcKb7XmmSz4HiOPn3X8oLYh34Phg
b035UQNiJ3g4d6SpDLSp3hniwieWEWHWxLtROGZazRswIhZAmjTRlZ/ApXoX
xMlezbWu9anmPdBbuqtIdjQhdkWtxH/WvmWe8ruB3zeaaOxoTr69+JS7zsyt
hM3jDq3aK/cP8wcp/z5ws5XK4Akj8u1HSErZwaL3W4mFmInmJFfq99B4Dxy7
eE8w16BLPk+M998enfZk83lB6w+jOhDaS/14I6X0wba+8+x8i+AuMrQPi54l
BuTZZarTBZ/V4xmgoD6Oe4PzjurFYDJ9dQK959XjGTHCVhy+SwWLVC9BTVDe
UP6dKaqXYOjnS5Vygu3PB9zSMVlXBa0v4wO/drfs5rfs/6VY7YqZ8mqn/IwU
w1Gp6Sf62fy+qN/po9O5NEl+Xwh/xb1ODzcjvwwL2t0x0RxiRoZYfq28S1FK
/fshxXZ+TFi+nfx+0BoW5F+zsCS/HMsdtzqfV89QPjn0WgxECU2m5PdHyYa8
4iqJFfn90faic6EicpX8AUibPNU6E8/2HwChds7I7/XsfgxEVkeGavIr7Scm
EMKJiCqlQJ/8QbjwuLJmvJj2BxOEXTaPPuS6cOm7Ag812vOiwtl6BZyv3tTM
OMSep2BIpz7qWTXQejDBOOOZdEmimKP+QlB3lmfj+maR5i8EHrqBaU7GPY3/
AN2ZHe4=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, Automatic},
  DisplayFunction:>Identity,
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.4416116189189997`*^9, 3.441617771134*^9}]
}, Open  ]],

Cell[TextData[{
 "Try looking at the error in the derivative, with ",
 StyleBox["h",
  FontSlant->"Italic"],
 "=0.1 and ",
 StyleBox["h",
  FontSlant->"Italic"],
 "=0.01."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "=", "0.01`"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ft", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"10", " ", "x"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", " ", "\[Pi]"}], ",", "h"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dft", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "x"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "x", "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"10", " ", "x"}], "]"}]}], ")"}]}], "/.", 
      "\[InvisibleSpace]", 
      RowBox[{"x", "\[Rule]", "xp"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"xp", ",", "0", ",", 
       RowBox[{"2", " ", "\[Pi]"}], ",", "h"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pf", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"dft", "-", 
      FractionBox[
       RowBox[{
        RowBox[{"RotateLeft", "[", "ft", "]"}], "-", "ft"}], "h"]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.005`", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"pb", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"dft", "-", 
      FractionBox[
       RowBox[{"ft", "-", 
        RowBox[{"RotateRight", "[", "ft", "]"}]}], "h"]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.005`", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"pc", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"dft", "-", 
      FractionBox[
       RowBox[{
        RowBox[{"RotateLeft", "[", "ft", "]"}], "-", 
        RowBox[{"RotateRight", "[", "ft", "]"}]}], 
       RowBox[{"2", " ", "h"}]]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.005`", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"pf", ",", "pb", ",", "pc"}], "]"}]}], "Input",
 CellChangeTimes->{{3.441617782308*^9, 3.441617801874*^9}, 3.473677646705*^9, 
   3.473677748892*^9, {3.631262432002146*^9, 3.6312624382728662`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], Thickness[0.005], LineBox[CompressedData["
1:eJw9enlczfn3/xvDxIRrz2S5SBpLc+0tlkOWQrlRlMJto2m97Xu9K5H9Zm1a
uDLI2k2hrG8hJeqqkVRmLrJOfK6twVi+r9/D8/3zB4+n8z6vc16v13m+zlJD
PIMX+bTnOC6C/fX//v3+Rz+df92h9Mm68On4DyLLtFnBwTuADUh/y/WUycl9
wBJSRzwIKvk7H7g3qbImlrXfVwBsRNqx7Wt6tJ4EHkDhn2b/l1N8ClhKf7QK
n3wGlgAPpTzDbuG9jM8Cm1Dv7bE1jfvPAZtSSVt654MF54HNSFPttX+8xQXg
kUQz+pDMUsSj6cM0u212GvF7c5J03uhklSuuJyPJPYOBNe1Ee2NJ3+vw+0cP
zgCPI0mLc+kyG9Hf8aQdk76wi7m4nwnEXWp7ab/0OPBE4rl1NXO3HgCeRJys
7LjVlCzgycSZnvpoksoDWxA3N1h4YpJ26Tu2JC7w/OSiz7nAVsQX7NasaMoH
tib6EOP3enkh8BTS5ntPXT31NPBU0k94FBnw8SzwNOL9L1qnJV0Cnk7pM/46
XPPX5Uvi9Wbq/5z5y+0r3zFPZFbsfnjrlmuQz6BZP63c49z9OuQzqJWvbolf
UAH5TJJJXl7STq+EfCYZrOnT8+sjYM6GlIETrudPuAG5DeUHBU9LNAfmZpFm
3K3gWTWi/iySlL3Y8biPqD+bVMnXTaPbwx4/mzTdnbrZ7CqHfA5p4ze/vlB3
FfI5xB9etX3zxTLI55LirK9dvJsA+Vzi0maNua84B7ktcWMGSPLTT0HOcHPC
P47xJyC3I87heYdnw/dBzrC20etdXgzk84gb4nR454pd3++TZ9igQNF07zDu
dz6Lh/jh4xYWQz6fhBB3P59DYvwtIEX4q7d9gi9DzvCX3JM9X12F3J6kP40v
N55dAbk9yV6dsWj1rYLcgRTXhxsdc6iG3IH0iyzHdInUQr6Q8sdFFlZk34Z8
IR27MrF57I5ayOU0p8WDVrrVfcckp23bO514/RKYl9MJ+Sv1QLs/v2NBTsU/
ZHU87QfMOdKz0c3mEx2ByZG43pebrvwn6juS7uHU8dP8gAVHUnrN3zcpV7S/
iIR+69a17YR/xHDWoLPxS+A/v4ikZqMy3pbdgv4i4oZmjd0RfgP6i0lxtP2V
pspy6C8mLnK27GtVGfQZNj1SuLML3gNhMVHVD5VD2uM+OCfiK4d2aGcOvpIT
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

     "]]}, 
   {RGBColor[0, 1, 0], Thickness[0.005], LineBox[CompressedData["
1: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
qePg
     "]]}, 
   {RGBColor[0, 0, 1], Thickness[0.005], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, Automatic},
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.4416116196879997`*^9, 3.441617803479*^9, 
  3.473677648624*^9, 3.473677749962*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["First-order differential equations", "Section"],

Cell[CellGroupData[{

Cell["Euler's method", "Subsection"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"Euler", "'"}], "s", " ", "method", " ", "is", " ", "a", " ", 
    "completely", " ", "straightforward", " ", "application", " ", "of", " ", 
    "a", " ", "finite", " ", "difference", " ", 
    RowBox[{"scheme", ".", " ", "To"}], " ", "solve", " ", "the", " ", 
    "first"}], "-", 
   RowBox[{"order", " ", "differential", " ", "equation"}]}],
  FontFamily->"Times New Roman"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"  ", 
   RowBox[{
    FractionBox[
     StyleBox[
      RowBox[{"d", 
       StyleBox["y",
        FontSlant->"Italic"]}]], 
     StyleBox[
      RowBox[{"d", 
       StyleBox["x",
        FontSlant->"Italic"]}]]], "=", 
    StyleBox[" ",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"f", 
      RowBox[{"(", 
       RowBox[{"x", ",", "y"}], ")"}]}],
     FontSlant->"Italic"]}]}],
  FontFamily->"Times New Roman"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["with",
       FontWeight->"Plain",
       FontSlant->"Plain",
       FontTracking->"Plain",
       FontVariations->{"CompatibilityType"->0,
       "Masked"->False,
       "Outline"->False,
       "RotationAngle"->0,
       "Shadow"->False,
       "StrikeThrough"->False,
       "Underline"->False}], 
      StyleBox[" ",
       FontWeight->"Plain",
       FontSlant->"Plain",
       FontTracking->"Plain",
       FontVariations->{"CompatibilityType"->0,
       "Masked"->False,
       "Outline"->False,
       "RotationAngle"->0,
       "Shadow"->False,
       "StrikeThrough"->False,
       "Underline"->False}], 
      StyleBox["the",
       FontWeight->"Plain",
       FontSlant->"Plain",
       FontTracking->"Plain",
       FontVariations->{"CompatibilityType"->0,
       "Masked"->False,
       "Outline"->False,
       "RotationAngle"->0,
       "Shadow"->False,
       "StrikeThrough"->False,
       "Underline"->False}], 
      StyleBox[" ",
       FontWeight->"Plain",
       FontSlant->"Plain",
       FontTracking->"Plain",
       FontVariations->{"CompatibilityType"->0,
       "Masked"->False,
       "Outline"->False,
       "RotationAngle"->0,
       "Shadow"->False,
       "StrikeThrough"->False,
       "Underline"->False}], 
      StyleBox["boundary",
       FontWeight->"Plain",
       FontSlant->"Plain",
       FontTracking->"Plain",
       FontVariations->{"CompatibilityType"->0,
       "Masked"->False,
       "Outline"->False,
       "RotationAngle"->0,
       "Shadow"->False,
       "StrikeThrough"->False,
       "Underline"->False}], 
      StyleBox[" ",
       FontWeight->"Plain",
       FontSlant->"Plain",
       FontTracking->"Plain",
       FontVariations->{"CompatibilityType"->0,
       "Masked"->False,
       "Outline"->False,
       "RotationAngle"->0,
       "Shadow"->False,
       "StrikeThrough"->False,
       "Underline"->False}], 
      StyleBox["condition",
       FontWeight->"Plain",
       FontSlant->"Plain",
       FontTracking->"Plain",
       FontVariations->{"CompatibilityType"->0,
       "Masked"->False,
       "Outline"->False,
       "RotationAngle"->0,
       "Shadow"->False,
       "StrikeThrough"->False,
       "Underline"->False}], 
      StyleBox[" ",
       FontSlant->"Italic"], 
      StyleBox["y",
       FontSlant->"Italic"]}], 
     StyleBox["=",
      FontSlant->"Italic"], 
     RowBox[{
      RowBox[{
       SubscriptBox[
        StyleBox["y",
         FontFamily->"Times New Roman",
         FontSlant->"Italic"], "0"], " ", "at", 
       StyleBox[" ",
        FontSlant->"Italic"], 
       StyleBox["x",
        FontSlant->"Italic"]}], 
      StyleBox["=",
       FontSlant->"Italic"], 
      SubscriptBox[
       StyleBox["x",
        FontSlant->"Italic"], "0"]}]}], ",", " ", 
    RowBox[{"approximate", " ", "with", " ", "small", " ", "steps", " ", 
     StyleBox["h",
      FontSlant->"Italic"], " ", "and", " ", "take"}]}], " "}],
  FontFamily->"Times New Roman"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   StyleBox[" ",
    FontSlant->"Italic"], 
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox[
       RowBox[{"y", 
        RowBox[{"(", 
         RowBox[{"x", "+", "h"}], ")"}]}],
       FontFamily->"Times New Roman"], 
      StyleBox["=",
       FontFamily->"Times New Roman"], 
      RowBox[{
       RowBox[{
        StyleBox[
         RowBox[{"y", 
          RowBox[{"(", "x", ")"}]}],
         FontFamily->"Times New Roman"], 
        StyleBox[" ",
         FontFamily->"Times New Roman"], 
        StyleBox["+",
         FontFamily->"Times New Roman"], 
        StyleBox[" ",
         FontFamily->"Times New Roman"], 
        RowBox[{
         StyleBox["h",
          FontFamily->"Times New Roman"], 
         StyleBox[
          RowBox[{
           StyleBox[" ",
            FontFamily->"Times New Roman"], " "}]], 
         RowBox[{"(", 
          FractionBox[
           StyleBox[
            RowBox[{
             StyleBox["d",
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontTracking->"Plain",
              FontVariations->{"CompatibilityType"->0,
              "Masked"->False,
              "Outline"->False,
              "RotationAngle"->0,
              "Shadow"->False,
              "StrikeThrough"->False,
              "Underline"->False}], "y"}]], 
           StyleBox[
            RowBox[{
             StyleBox["d",
              FontWeight->"Plain",
              FontSlant->"Plain",
              FontTracking->"Plain",
              FontVariations->{"CompatibilityType"->0,
              "Masked"->False,
              "Outline"->False,
              "RotationAngle"->0,
              "Shadow"->False,
              "StrikeThrough"->False,
              "Underline"->False}], "x"}]]], ")"}]}]}], " ", "=", " ", 
       RowBox[{
        RowBox[{"y", 
         RowBox[{"(", "x", ")"}]}], " ", "+", " ", 
        RowBox[{"h", " ", "f", 
         RowBox[{"(", 
          RowBox[{"x", ",", " ", 
           RowBox[{"y", 
            RowBox[{"(", "x", ")"}]}]}], ")"}]}]}]}]}],
     FontSlant->"Italic"], ",", "\[IndentingNewLine]", 
    RowBox[{"and", " ", "so", " ", 
     RowBox[{"on", ".", "  ", "Of"}], " ", "course"}], ",", " ", 
    RowBox[{"unless", " ", 
     StyleBox["h",
      FontSlant->"Italic"], " ", "is", " ", "chosen", " ", "small", " ", 
     "enough", " ", "the", " ", "solution", " ", "will", " ", "not", " ", 
     "be", " ", "very", " ", 
     RowBox[{"accurate", ".", " ", "For"}], " ", "example"}], ",", " ", 
    RowBox[{"consider", " ", "the", " ", "equation"}]}]}],
  FontFamily->"Times New Roman"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    FractionBox[
     StyleBox[
      RowBox[{"d", 
       StyleBox["y",
        FontSlant->"Italic"]}]], 
     StyleBox[
      RowBox[{"d", 
       StyleBox["x",
        FontSlant->"Italic"]}]]], "=", 
    StyleBox[" ",
     FontSlant->"Italic"], 
    StyleBox["y",
     FontSlant->"Italic"]}], 
   StyleBox[",",
    FontSlant->"Italic"], 
   StyleBox[" ",
    FontVariations->{"CompatibilityType"->0}], 
   RowBox[{
    RowBox[{
     StyleBox["with",
      FontVariations->{"CompatibilityType"->0}], 
     StyleBox[" ",
      FontVariations->{"CompatibilityType"->0}], 
     StyleBox["boundary",
      FontVariations->{"CompatibilityType"->0}], 
     StyleBox[" ",
      FontVariations->{"CompatibilityType"->0}], 
     StyleBox["condition",
      FontVariations->{"CompatibilityType"->0}], 
     StyleBox[" ",
      FontSlant->"Italic"], 
     StyleBox["y",
      FontSlant->"Italic"], 
     StyleBox[
      RowBox[{"(", "0", ")"}],
      FontSlant->"Italic"]}], 
    StyleBox[
     RowBox[{"=", 
      RowBox[{
       RowBox[{"1.", " ", 
        RowBox[{"We", "'"}], "ll", " ", "seek", " ", "a", " ", "solution", 
        " ", "over", " ", "the", " ", "range", " ", "0"}], "\[LessEqual]", 
       StyleBox["x",
        FontSlant->"Italic"], "\[LessEqual]", "3"}]}],
     FontVariations->{"CompatibilityType"->0}]}], 
   StyleBox[",",
    FontVariations->{"CompatibilityType"->0}], 
   StyleBox[" ",
    FontVariations->{"CompatibilityType"->0}], 
   StyleBox[
    RowBox[{
     RowBox[{"with", " ", "various", " ", "step"}], "-", 
     RowBox[{"lengths", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"try", " ", "0.01"}], ",", " ", "0.1", ",", " ", "0.5"}], 
        ")"}], ".", " ", "Of"}], " ", "course"}]}],
    FontVariations->{"CompatibilityType"->0}], 
   StyleBox[",",
    FontVariations->{"CompatibilityType"->0}], 
   StyleBox[" ",
    FontVariations->{"CompatibilityType"->0}], 
   StyleBox[
    RowBox[{
     RowBox[{
     "we", " ", "know", " ", "that", " ", "the", " ", "exact", " ", 
      "solution", " ", "is", " ", 
      StyleBox["y",
       FontSlant->"Italic"]}], "=", 
     RowBox[{"exp", 
      RowBox[{
       RowBox[{"(", 
        StyleBox["x",
         FontSlant->"Italic"], ")"}], 
       StyleBox[".",
        FontSlant->"Italic"], 
       StyleBox[" ",
        FontSlant->"Italic"]}]}]}],
    FontVariations->{"CompatibilityType"->0}]}],
  FontFamily->"Times New Roman"]}], "Text",
 CellChangeTimes->{{3.5048849400342484`*^9, 3.5048849412883196`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ff", "[", 
   RowBox[{"h_", ",", "xmax_"}], "]"}], ":=", 
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "+", "h"}], ",", 
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "+", 
        RowBox[{"h", " ", 
         RowBox[{
         "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}]}], 
      "}"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", 
    RowBox[{"Floor", "[", 
     FractionBox["xmax", "h"], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"pap", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"ff", "[", 
      RowBox[{"0.5`", ",", "3"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pex", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "x"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"pap", ",", "pex"}], "]"}]}], "Input",
 CellChangeTimes->{{3.441617829131*^9, 3.441617841969*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], 
    LineBox[{{0., 1.}, {0.5, 1.5}, {1., 2.25}, {1.5, 3.375}, {2., 5.0625}, {
     2.5, 7.59375}, {3., 11.390625}}]}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwVx2dQE3YYgPGQEIIoGFYQRC5CiIhSVqyC1fdFewxtABWIEPREZEUhlFZZ
kSpL1ASZBRvFUouIVFwHFCxgOIP2UGwrB3UyalRAawRkhZD+++G5534r94t3
xlApFEog6f/PbE86HyxO3nwpWMykUNSQf2CV0yNuIFztKN6upKnh4b+vRDLu
XrgjXy06zVCD+tZW6SFuErgtLdpps1QN2awJ20huFhzpterbYqeG7nvbVLu4
hfCTdmN/+xdqEP945PcgbhV8SG3bdCBDDQqp9Daf2wDr5l1qkmfUQDdIYYyI
OqC1qXlbL2scAr6LymsMuweaPeOiLZ4T0Jwe86Lmzx5o2UJnMYWT8CTioGtK
6mM4HHLlmvX1T2DqJ4tVYD+Ev843kFCngdkbc3O98Bl429sz8wtmwIF9qC5v
/wAEdUuiithzsOFFYrdPyRD8nA1Oixs1oJg79lWv/B94M62KDD2hhfiO+/fb
s1VwTpqIX4bp4Gx0rY3lvjew6jDj7QM5BV12D00txIyA2R1ffsANPXw5EdSD
AWOg+UU/NucuFccHrN1Yoe/BWVkmVOrpY1F9RpxA8AGOJ9bOV/LpyF1qyE+T
qyG6/J0k/nsDbEo+Vl944SOIBxbVSEwNsdexlLGjZBz29g9G3Dq5CDk5j532
nJ2ARPPPCkM2Lkav4AHeBfkkvCrQ9BnqGeOL5LzNMuknEFbUlQ11muBNr3Bj
ZfEUzNbKqK0HmMgKu/fkct40FO35uIwXa4owTCnu/HYGVC6UZxNfm+FZVrwx
N20WThd4GtZeMsfsqoQT60RzMNl5O+Pt3xZ4vqeyqzBZA/4TQcNjXiw8mlSq
XpEyD3ZX2c4e9VY4FuW0LHy/FtL5aXEe1tZ4Wjuq/zJ2ATY/zWI6dNhg6zu/
DyYROmA/agjVRNlin+OGYW8OBcPt5e/FlnYYvzratbSGgo158pFOOhsVYcJM
Hzs9nH557mHLAhs9d4/WWVTrYcXwq7DmFfZ4KMe3f9NyKjbGrT9+19sBC2IN
5/RKqShY5167MZqDbSuidKMWNDySUJbKaHHEloV8mnMhDZMOeoy7L1mFPbe2
jspM9bH7eVnKylInVLJju6Ql+ihSXPdZudYZc5tDq4eM6OjhXyaoVKzBSPvn
e4UyOnK+kTyllbugpsl1+RqGAWrbnljZxriihDbyoDzLAAeL7dr6Lrohi+MV
5UhhoMwFNxi2umNqUtikUToDB0fMdZqHHvhRaiSynGfgBM1gxmwJD21zfSwc
iZW7Iry8if0y09p5xD8c12REEZ9PeG0WQnw5naO7Rhzg23m7hPjBGHMx35iH
1bp0Y6aWga+FIe4nTHi4I2XkutECA9NPnmzWMHkoSWALbYgPtmVQHUx5WLtP
QHcm9hz+lb+NWBuoDA8grqbYqiqJ69ZUUwuIRdVHrT4346GeancIXcfAM1MN
p5LNebj2+ZkFC+LcLPHTCmLB467LHOJWylHnDuKrCp52K7HvVFa3sQUPw6uY
l7KJdzXZmdYT55b7BZcQP2L7Rf9FfE2aNVdN7HPqt8ZZYnrmu0AFcVxkodDf
koduKQ6zfxD7d402iImFCREXB4kz3cuoFcT5+4r5auKKqlNh7cQ3BPendcSe
Jj1XVMT/AfW9JLQ=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.4416116293970003`*^9, 3.441617843791*^9}]
}, Open  ]],

Cell[TextData[{
 "Euler's method neglects terms in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["h", "2"], TraditionalForm]]],
 ", and it is therefore known as a first-order method (in general, an n-th \
order method has an error term which varies as ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["h", 
    RowBox[{"n", "+", "1"}]], TraditionalForm]]],
 ")."
}], "Text",
 CellChangeTimes->{
  3.441617856021*^9, {3.631262598222601*^9, 3.631262599164616*^9}}],

Cell[TextData[{
 "    Note that although most of the update schemes in these notes have been \
written as pure functions, there is no reason why they could not have used \
named functions. For example, this case could be coded as follows (note that \
we need to pass the step length to the function, which we have done here by \
iterating on a list of three items, so to recover just the (x,y) pairs we ",
 StyleBox["Map Most",
  FontFamily->"Courier New"],
 " onto the result)."
}], "Text",
 CellChangeTimes->{{3.5048849665677657`*^9, 3.504885041394046*^9}, {
  3.5048854517405157`*^9, 3.5048855713133554`*^9}, {3.694160492911161*^9, 
  3.694160494673091*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"upd", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_", ",", "h_"}], "}"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "+", "h"}], ",", 
    RowBox[{"y", "+", " ", 
     RowBox[{"h", " ", "y"}]}], ",", "h"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ff", "[", 
   RowBox[{"h_", ",", "xmax_"}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{"Most", ",", 
    RowBox[{"NestList", "[", 
     RowBox[{"upd", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "h"}], "}"}], ",", 
      RowBox[{"Floor", "[", 
       FractionBox["xmax", "h"], "]"}]}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"pap", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"ff", "[", 
      RowBox[{"0.5", ",", "3"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pex", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "x"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"pap", ",", "pex", ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.441617829131*^9, 3.441617841969*^9}, {
  3.5048850605741425`*^9, 3.5048851085308857`*^9}, {3.50488515617461*^9, 
  3.5048852039863453`*^9}, {3.5048852615506372`*^9, 3.504885371753941*^9}, {
  3.504885421683797*^9, 3.5048854612640605`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], 
    LineBox[{{0., 1.}, {0.5, 1.5}, {1., 2.25}, {1.5, 3.375}, {2., 5.0625}, {
     2.5, 7.59375}, {3., 11.390625}}]}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwV0Hk41HkcwPFxjK9UjjAirHMSK5ofCavPh3p0rVSbO9ZNcqUQSWFJZSxh
006pdlcStaVlHloxckyJnt0s2+FcylBrDLmmMdv+8X5e/78Ng+MOhMnSaDS3
z/3vwp7Yq/vi4rfe3BenSqMJISd0vdlz5l6401S4p01OCF3/jkaxmQHQzNkQ
dYEIQfhgW140MxasVQoO6KgIIZMxo3uImQ5JPVq9LvpC6OzYPfYNMx9+kjj2
PfpKCHHXk564M8tgKrnRKTRVCLy8vIduzLtg+8myPH5BCHSFBCKIaoKGOu7u
HoYIdp0Oyq717ACxvyjKhZoBbkpYf/kf3VDvQmeo+s3CS98jVgnJLyDx4O1f
te99BLUd7HAe9oHP2xyFNNl5UO0Jq7Hzew0ORkaqObkLYGwQXZkdPAjunWlB
BQZLsKU/ptP54jD8kglmK2vFwFs683UP5x94Nz92yOOsBCKb+PxHmWNwJS8G
t3tK4XJIhY5m4DtYn0jGn3FoaOk9PLccJoA1za5uu+7L4MCMezfumgRxtXx4
Vqssiga1rRkeH8C8rdivTUYeC6pSI7y8piAjpuJTqRsdmSqKbic4QggpeZ8W
+YMC1sWfqcq/Ng1xgyvK09QUsce0iOy/KIKAviHfB+dWoEnWCzP/yzMQo74x
/6DjSrTfN2hzjTMLo7niXkWZ1dgfn72VnfcR/C5VFg+3KGONvc/qtsI5WKxg
yzaEqiLDs+Plrex5KPCfXmsTroYwQitsOb4AY5a01zNH1+BlRuRq5olFuJBL
KVbcVMfMssNnbaOWYLblYer43xp4tbu0PT9eDDtn3Ecm7Rl4KrZIqJfwCfTv
GJizqrRwMshsrU+wBFLcTkSwtLXxgmRCfiB8Gba+Slc1btLBhvc7ppR9pWDw
/K6HOEgXe023jDiY0NDHiPMhTlMfIzeEWBWV07A2myNooRsgz9PvpLO+DM4P
XOmqXzZAynuiUuOGDF4aGfXk6hlhdJZrn9M6WayNsMtodTDG3HDFJZkiWfSy
3VThGGKCjXpB0gkNOUw6XJxM6k2xfjlHzjxfDmOPsESbVq3H7gfbJthq8tj5
pjjBsMgM2wzC2/MuymMU756z4Zfm+B3X48awEh1ZO4u9SnkWeMjoTYAfm44m
x9JeyZVYorjOap0FUUBJ40st3TArTJMTPCtJV8ChQv3G3p+tkWFiH2RKI8i2
xC2KDZswOdZzVimF4JBAXSruYqHu5lA+8yRB3lu576f/ZGGz5OgVl1MEn9i1
xoz3sVCJzd6emkHQ4gst7VfDLCyrai0WnCO4Uec3666PLGwfZ9nyfySobJd7
X6RHoUaISlL27wRL4r2jneIorDfX233jEcGu05ZZ/scpDBCZ6zc2E9xLV5pN
T6HwVoZr+2wrwdOFrmNtWRQ6Xj/FCO0iqM7vVgktpTC4f7LOZYCg+ZNjfw3z
KCTli+cDhgjGdD7kanVQWB1Nvk0dISiqebq49xmFc2IjUvOWIDfwXhmvl8Lz
Or5ehlMEd7xuT+ROUmg1EmHhNE2wj3Y0cEFIYU9lotR7hqDmu6d3HOYo1Lcv
rCiYJ5ixWT7hMc0GH9OunaxeJNgjKROsULDBSH61O1/8+YdLYNv+lTa4qqDB
eFRCMEJYTueo2uB9L/68VEqQUu6+PaZpg/8B1kwqHw==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  PlotRange->All,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{
  3.5048851176234055`*^9, 3.5048851647260995`*^9, 3.504885205151412*^9, 
   3.504885263418744*^9, {3.504885315302712*^9, 3.504885343399319*^9}, 
   3.5048853734060354`*^9, 3.5048854386507673`*^9, 3.5048855809859085`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Euler predictor-corrector method", "Subsection"],

Cell[TextData[{
 "We established before that the approximation to the derivatives on which \
the simple Euler method was based is accurate only to first order in the step \
length. The basic problem is that it uses a one-sided (forward) difference \
scheme. The idea of the predictor-corrector method is to make an estimate of \
the value of y(x+h) using the first-order scheme, but then to correct it by \
using that estimate to make an improved estimate of the slope by using the \
average of the slopes at the start of the step and the predicted end of the \
step. The algorithm, then is \n a) predictor step    ",
 StyleBox["Y(x+h) ",
  FontSlant->"Italic"],
 "=",
 StyleBox[" y(x)",
  FontSlant->"Italic"],
 " + ",
 StyleBox["h f",
  FontSlant->"Italic"],
 "(",
 StyleBox["x,",
  FontSlant->"Italic"],
 " ",
 StyleBox["y",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 "))\n b) corrector step    ",
 StyleBox["y(x+h)",
  FontSlant->"Italic"],
 " = ",
 StyleBox["y(x)",
  FontSlant->"Italic"],
 " + ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["h", "2"], " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "(", 
        RowBox[{"x", ",", 
         RowBox[{"y", "(", "x", ")"}]}], ")"}], "+", 
       RowBox[{"f", "(", 
        RowBox[{
         RowBox[{"x", "+", "h"}], ",", 
         RowBox[{"Y", "(", 
          RowBox[{"x", "+", "h"}], ")"}]}], ")"}]}], "}"}], "."}]}], 
   TraditionalForm]]],
 "\n It is worth noting that this predictor-corrector idea has been developed \
by Adams, Moulton and others into a very sophisticated range of algorithms, \
which rely on fitting polynomials (which may be of very high order) through \
the calculated values and basing corrections on those.  ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s ",
 StyleBox["NDSolve",
  FontFamily->"Courier New"],
 " function, for example, uses Adams methods of up to 12th order.\n   The \
penalty with this Euler predictor-corrector method is that it requires one \
more function evaluation per step. The advantage, however, is that it is \
accurate to second order in the step length. Rather than prove this \
algebraically, we shall try to demonstrate it numerically.  \n    Note that \
in our problem the algorithm may be simplified, as\n     a) predictor step    \
",
 StyleBox["Y(x+h) ",
  FontSlant->"Italic"],
 "=",
 StyleBox[" y(x)",
  FontSlant->"Italic"],
 " + ",
 StyleBox["h y",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 ")\n     b) corrector step    ",
 StyleBox["y(x+h)",
  FontSlant->"Italic"],
 " = ",
 StyleBox["y(x)",
  FontSlant->"Italic"],
 " + ",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    FractionBox["h", "2"], " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "(", 
       RowBox[{"x", ",", 
        RowBox[{"y", "(", "x", ")"}]}], ")"}], "+", 
      RowBox[{"f", "(", 
       RowBox[{
        RowBox[{"x", "+", "h"}], ",", 
        RowBox[{"Y", "(", 
         RowBox[{"x", "+", "h"}], ")"}]}], ")"}]}], "}"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"=", " ", 
    RowBox[{
     RowBox[{"y", "(", "x", ")"}], " ", "+", 
     RowBox[{
      FractionBox["h", "2"], " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"y", "(", "x", ")"}], "+", 
         StyleBox[
          RowBox[{"y", "(", "x", ")"}],
          FontSlant->"Italic"], "+", 
         RowBox[{
          StyleBox["h",
           FontSlant->"Italic"], 
          StyleBox[" ",
           FontSlant->"Italic"], 
          RowBox[{
           StyleBox["y",
            FontSlant->"Italic"], "(", 
           StyleBox["x",
            FontSlant->"Italic"], ")"}]}]}], "}"}], " ", "."}]}]}]}], 
   TraditionalForm]}]],
 "\n\n    Now we find we can achieve a broadly acceptable solution even with \
a step length as large as 0.5."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ff", "[", 
   RowBox[{"h_", ",", "xmax_"}], "]"}], ":=", 
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "+", "h"}], ",", 
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "+", 
        RowBox[{"0.5`", " ", "h", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           "+", 
           RowBox[{"h", " ", 
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
          ")"}]}]}]}], "}"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", 
    RowBox[{"Floor", "[", 
     FractionBox["xmax", "h"], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"pap", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"ff", "[", 
      RowBox[{"1.`", ",", "3"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pex", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "x"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"pap", ",", "pex"}], "]"}]}], "Input",
 CellChangeTimes->{{3.441617869175*^9, 3.441617881927*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], 
    LineBox[{{0., 1.}, {1., 2.5}, {2., 6.25}, {3., 15.625}}]}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwVx2dQE3YYgPGQEIIoGFYQRC5CiIhSVqyC1fdFewxtABWIEPREZEUhlFZZ
kSpL1ASZBRvFUouIVFwHFCxgOIP2UGwrB3UyalRAawRkhZD+++G5534r94t3
xlApFEog6f/PbE86HyxO3nwpWMykUNSQf2CV0yNuIFztKN6upKnh4b+vRDLu
XrgjXy06zVCD+tZW6SFuErgtLdpps1QN2awJ20huFhzpterbYqeG7nvbVLu4
hfCTdmN/+xdqEP945PcgbhV8SG3bdCBDDQqp9Daf2wDr5l1qkmfUQDdIYYyI
OqC1qXlbL2scAr6LymsMuweaPeOiLZ4T0Jwe86Lmzx5o2UJnMYWT8CTioGtK
6mM4HHLlmvX1T2DqJ4tVYD+Ev843kFCngdkbc3O98Bl429sz8wtmwIF9qC5v
/wAEdUuiithzsOFFYrdPyRD8nA1Oixs1oJg79lWv/B94M62KDD2hhfiO+/fb
s1VwTpqIX4bp4Gx0rY3lvjew6jDj7QM5BV12D00txIyA2R1ffsANPXw5EdSD
AWOg+UU/NucuFccHrN1Yoe/BWVkmVOrpY1F9RpxA8AGOJ9bOV/LpyF1qyE+T
qyG6/J0k/nsDbEo+Vl944SOIBxbVSEwNsdexlLGjZBz29g9G3Dq5CDk5j532
nJ2ARPPPCkM2Lkav4AHeBfkkvCrQ9BnqGeOL5LzNMuknEFbUlQ11muBNr3Bj
ZfEUzNbKqK0HmMgKu/fkct40FO35uIwXa4owTCnu/HYGVC6UZxNfm+FZVrwx
N20WThd4GtZeMsfsqoQT60RzMNl5O+Pt3xZ4vqeyqzBZA/4TQcNjXiw8mlSq
XpEyD3ZX2c4e9VY4FuW0LHy/FtL5aXEe1tZ4Wjuq/zJ2ATY/zWI6dNhg6zu/
DyYROmA/agjVRNlin+OGYW8OBcPt5e/FlnYYvzratbSGgo158pFOOhsVYcJM
Hzs9nH557mHLAhs9d4/WWVTrYcXwq7DmFfZ4KMe3f9NyKjbGrT9+19sBC2IN
5/RKqShY5167MZqDbSuidKMWNDySUJbKaHHEloV8mnMhDZMOeoy7L1mFPbe2
jspM9bH7eVnKylInVLJju6Ql+ihSXPdZudYZc5tDq4eM6OjhXyaoVKzBSPvn
e4UyOnK+kTyllbugpsl1+RqGAWrbnljZxriihDbyoDzLAAeL7dr6Lrohi+MV
5UhhoMwFNxi2umNqUtikUToDB0fMdZqHHvhRaiSynGfgBM1gxmwJD21zfSwc
iZW7Iry8if0y09p5xD8c12REEZ9PeG0WQnw5naO7Rhzg23m7hPjBGHMx35iH
1bp0Y6aWga+FIe4nTHi4I2XkutECA9NPnmzWMHkoSWALbYgPtmVQHUx5WLtP
QHcm9hz+lb+NWBuoDA8grqbYqiqJ69ZUUwuIRdVHrT4346GeancIXcfAM1MN
p5LNebj2+ZkFC+LcLPHTCmLB467LHOJWylHnDuKrCp52K7HvVFa3sQUPw6uY
l7KJdzXZmdYT55b7BZcQP2L7Rf9FfE2aNVdN7HPqt8ZZYnrmu0AFcVxkodDf
koduKQ6zfxD7d402iImFCREXB4kz3cuoFcT5+4r5auKKqlNh7cQ3BPendcSe
Jj1XVMT/AfW9JLQ=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.441611629981*^9, 3.441617883141*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Runge-Kutta method", "Subsection"],

Cell[TextData[{
 "The names of Runge and Kutta are associated with a family of methods, of \
which the four-step method is typical. It requires four function evaluations \
per step, but is fourth-order accurate. The process defines four increments, \
based on the slope at the beginning of the step, two different estimates of \
the slope at the mid-point, and the slope at the end point, and combines them \
in the ratio 1:2:2:1. The algebra behind this is tedious, but the basic idea \
is that by adding up the right combination of terms the error terms can be \
eliminated order by order. The basic Euler method is first-order accurate, \
but combining two slightly different first-order schemes we can eliminate the \
term in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["h", "2"], TraditionalForm]]],
 ", with three we can eliminate the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["h", "3"], TraditionalForm]]],
 " term, and with 4 we can eliminate the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["h", "4"], TraditionalForm]]],
 " term.   \n  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", "1"], TraditionalForm]]],
 "= ",
 StyleBox["h f",
  FontSlant->"Italic"],
 "(",
 StyleBox["x,y",
  FontSlant->"Italic"],
 ")\n  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", "2"], TraditionalForm]]],
 "= ",
 StyleBox["h f",
  FontSlant->"Italic"],
 "(",
 StyleBox["x+",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], "h"}], TraditionalForm]]],
 StyleBox[",y+",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], 
    SubscriptBox["\[Delta]", "1"]}], TraditionalForm]]],
 ")\n  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", "3"], TraditionalForm]]],
 "= ",
 StyleBox["h f",
  FontSlant->"Italic"],
 "(",
 StyleBox["x+",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], "h"}], TraditionalForm]]],
 StyleBox[",y+",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], 
    SubscriptBox["\[Delta]", "2"]}], TraditionalForm]]],
 ")\n  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", "4"], TraditionalForm]]],
 "= ",
 StyleBox["h f",
  FontSlant->"Italic"],
 "(",
 StyleBox["x+",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox["h", TraditionalForm]]],
 StyleBox[",y+",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", "3"], TraditionalForm]]],
 ")\n  ",
 StyleBox["y",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 "+",
 StyleBox["h",
  FontSlant->"Italic"],
 ")=",
 StyleBox["y",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 ")+",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "6"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Delta]", "1"], "+", " ", 
       RowBox[{"2", 
        SubscriptBox["\[Delta]", "2"]}], " ", "+", " ", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Delta]", "3"]}], " ", "+", " ", 
       SubscriptBox["\[Delta]", "4"]}], ")"}], "."}]}], TraditionalForm]]],
 ".\n  Again there are considerable simplifications for our chosen problem:"
}], "Text",
 CellChangeTimes->{{3.631263697562504*^9, 3.631263698420793*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "h", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   RowBox[{"h", " ", "y"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]2", "=", 
   RowBox[{"h", " ", 
    RowBox[{"(", 
     RowBox[{"y", "+", 
      RowBox[{"\[Delta]1", "/", "2"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]3", "=", 
   RowBox[{"h", " ", 
    RowBox[{"(", 
     RowBox[{"y", "+", 
      RowBox[{"\[Delta]2", "/", "2"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]4", "=", 
   RowBox[{"h", " ", 
    RowBox[{"(", 
     RowBox[{"y", "+", "\[Delta]3"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]", "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", "6"], 
    RowBox[{"(", 
     RowBox[{"\[Delta]1", "+", 
      RowBox[{"2", "\[Delta]2"}], "+", 
      RowBox[{"2", "\[Delta]3"}], "+", "\[Delta]4"}], ")"}]}], "//", 
   "Simplify"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "24"], " ", "h", " ", 
  RowBox[{"(", 
   RowBox[{"24", "+", 
    RowBox[{"12", " ", "h"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["h", "2"]}], "+", 
    SuperscriptBox["h", "3"]}], ")"}], " ", "y"}]], "Output",
 CellChangeTimes->{3.4416116302980003`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ff", "[", 
   RowBox[{"h_", ",", "xmax_"}], "]"}], ":=", 
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "+", "h"}], ",", 
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "+", 
        RowBox[{
         FractionBox["1", "24"], " ", "h", " ", 
         RowBox[{"(", 
          RowBox[{"24", "+", 
           RowBox[{"12", " ", "h"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["h", "2"]}], "+", 
           SuperscriptBox["h", "3"]}], ")"}], " ", 
         RowBox[{
         "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}]}], 
      "}"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", 
    RowBox[{"Floor", "[", 
     FractionBox["xmax", "h"], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"pap", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"ff", "[", 
      RowBox[{"1.`", ",", "3"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pex", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "x"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"pap", ",", "pex"}], "]"}]}], "Input",
 CellChangeTimes->{{3.441617899281*^9, 3.4416179097939997`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], 
    LineBox[{{0., 1.}, {1., 2.708333333333333}, {2., 7.335069444444444}, {3., 
     19.8658130787037}}]}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwVx2dQE3YYgPGQEIIoGFYQRC5CiIhSVqyC1fdFewxtABWIEPREZEUhlFZZ
kSpL1ASZBRvFUouIVFwHFCxgOIP2UGwrB3UyalRAawRkhZD+++G5534r94t3
xlApFEog6f/PbE86HyxO3nwpWMykUNSQf2CV0yNuIFztKN6upKnh4b+vRDLu
XrgjXy06zVCD+tZW6SFuErgtLdpps1QN2awJ20huFhzpterbYqeG7nvbVLu4
hfCTdmN/+xdqEP945PcgbhV8SG3bdCBDDQqp9Daf2wDr5l1qkmfUQDdIYYyI
OqC1qXlbL2scAr6LymsMuweaPeOiLZ4T0Jwe86Lmzx5o2UJnMYWT8CTioGtK
6mM4HHLlmvX1T2DqJ4tVYD+Ev843kFCngdkbc3O98Bl429sz8wtmwIF9qC5v
/wAEdUuiithzsOFFYrdPyRD8nA1Oixs1oJg79lWv/B94M62KDD2hhfiO+/fb
s1VwTpqIX4bp4Gx0rY3lvjew6jDj7QM5BV12D00txIyA2R1ffsANPXw5EdSD
AWOg+UU/NucuFccHrN1Yoe/BWVkmVOrpY1F9RpxA8AGOJ9bOV/LpyF1qyE+T
qyG6/J0k/nsDbEo+Vl944SOIBxbVSEwNsdexlLGjZBz29g9G3Dq5CDk5j532
nJ2ARPPPCkM2Lkav4AHeBfkkvCrQ9BnqGeOL5LzNMuknEFbUlQ11muBNr3Bj
ZfEUzNbKqK0HmMgKu/fkct40FO35uIwXa4owTCnu/HYGVC6UZxNfm+FZVrwx
N20WThd4GtZeMsfsqoQT60RzMNl5O+Pt3xZ4vqeyqzBZA/4TQcNjXiw8mlSq
XpEyD3ZX2c4e9VY4FuW0LHy/FtL5aXEe1tZ4Wjuq/zJ2ATY/zWI6dNhg6zu/
DyYROmA/agjVRNlin+OGYW8OBcPt5e/FlnYYvzratbSGgo158pFOOhsVYcJM
Hzs9nH557mHLAhs9d4/WWVTrYcXwq7DmFfZ4KMe3f9NyKjbGrT9+19sBC2IN
5/RKqShY5167MZqDbSuidKMWNDySUJbKaHHEloV8mnMhDZMOeoy7L1mFPbe2
jspM9bH7eVnKylInVLJju6Ql+ihSXPdZudYZc5tDq4eM6OjhXyaoVKzBSPvn
e4UyOnK+kTyllbugpsl1+RqGAWrbnljZxriihDbyoDzLAAeL7dr6Lrohi+MV
5UhhoMwFNxi2umNqUtikUToDB0fMdZqHHvhRaiSynGfgBM1gxmwJD21zfSwc
iZW7Iry8if0y09p5xD8c12REEZ9PeG0WQnw5naO7Rhzg23m7hPjBGHMx35iH
1bp0Y6aWga+FIe4nTHi4I2XkutECA9NPnmzWMHkoSWALbYgPtmVQHUx5WLtP
QHcm9hz+lb+NWBuoDA8grqbYqiqJ69ZUUwuIRdVHrT4346GeancIXcfAM1MN
p5LNebj2+ZkFC+LcLPHTCmLB467LHOJWylHnDuKrCp52K7HvVFa3sQUPw6uY
l7KJdzXZmdYT55b7BZcQP2L7Rf9FfE2aNVdN7HPqt8ZZYnrmu0AFcVxkodDf
koduKQ6zfxD7d402iImFCREXB4kz3cuoFcT5+4r5auKKqlNh7cQ3BPendcSe
Jj1XVMT/AfW9JLQ=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.441611630459*^9, 3.4416179110559998`*^9}]
}, Open  ]],

Cell["\<\
We can see a clear improvement over the Euler predictor-corrector method. We \
even obtain a sensible result now with a step length of 1.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The thermal conduction equation", "Subsection"],

Cell[TextData[{
 "The equation for the one-dimensional flow of heat in a bar of \
cross-sectional area ",
 StyleBox["A ",
  FontSlant->"Italic"],
 "and thermal conductivity \[Kappa] relates the heat flow ",
 StyleBox["Q",
  FontSlant->"Italic"],
 " to the gradient of the temperature \[Theta] by\n   ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "=", 
    RowBox[{
     RowBox[{"-", "\[Kappa]"}], " ", "A", 
     FractionBox["d\[Theta]", "dx"]}]}], TraditionalForm]]],
 ".\n   The assumption of one-dimensional flow means that the edges of the \
bar are perfectly insulated. Suppose the cross-section in the bar, 1 metre \
long, varies according to\n   ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", "=", 
    RowBox[{"\[Pi]", " ", 
     SuperscriptBox[
      RowBox[{"(", "\[NegativeThinSpace]", 
       FractionBox[
        RowBox[{"2", "-", "x"}], "100"], "\[NegativeThinSpace]", ")"}], "2"], 
     "  "}]}], TraditionalForm]]],
 ",\n   and the temperature \[Theta]=500K at ",
 StyleBox["x ",
  FontSlant->"Italic"],
 "= 0 and \[Theta]=300K at ",
 StyleBox["x ",
  FontSlant->"Italic"],
 "= 1m."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", "-", "x"}], "100"], ",", 
     FractionBox[
      RowBox[{"x", "-", "2"}], "100"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.1`"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVx30w1HkAx/ElImawGbZVlOjB0ejK9YiPuxItcVgTzaauB9ID0d6hS+F+
Hteyy6atJVQzJWnz2HVyiqXLiZC4PG97DrvtVpdKnu57f7znPS/rQ5H+R7Vp
NJoP6f+zjo51PBoPdJ2jHHaOnBVBZ4fF6SGmE4p3vYsyJd5YKM6vZO6Eu35N
oXucCF7PeioKmGxk8TBdEiPC3iOf6nKYR2CV418RzRVhwDF1B5/JhWth7Aqd
CBGKzHxTMpgUzj+Qzaz+QYRE/co16UwR5t9wqk96iBAUXCx9++4GuGnRq24Y
i2A4n8jxsJJiy8YWNb8vF6v81GONvCqU+VzxjL+Vi5i2rRB/eICLEt/iJVG5
YFTRB7W06tH6eVdAqEsuauQ7WtudGxCTaqNzUDcXDccLlgarZOhMiXU/0JaD
ydUuxmWnnuBcnvGwiSQH2lOlJktXteBKDy8u4nAONs0frAm424qFdqyT5x1z
0Eo5tTV/1Q4bZYImd0aI5QLlVIn6OSoH86MCm4RQfhoa7F7fiVz5F++nQiFu
TNS2GGV1YZThumY8WAgjy5saheIFxuumhEY2QmSGV4cW2b6EM/dT4KhGgI9u
pYpjF3qgxXm15PivAnA3yKrMG3thzp53KqIEGLor43VYv0Jh/KLvk7wFmD7+
QmJ3tg+9jMzpcDMB7L/Vmwut7Uc9VUzTl2XD45p1WDljEDXOk3oidjZiLA+s
HOEMgWX27DGlyoKDKtCwZ88w3Nov5iekZMHU+K2+7MswlqnW/viCkQWdeonU
Jn8El+zcaPx7fJxwqv1rkZccn59apxe48VG6+1DR7x/lqPX6sOFBZyYmlRYm
o3mvsUzNyt56MhPVAR4LRDsVOPLviXH6LA8XPJMLq0YV8GTSP/pc5MF6gNV7
PflvCFbctLnkyMO2zZSIuWEUDzP0fDc/zgDHqn1Kq2sUaWYqB+d9GZhs4ctP
J/6D7Qsk+pcn0iHWCeH6244hg96Wty8pHaaD1de0ZWPYrvXefc2ydOjGJ7K3
Ro2jO2D4vVdZGmglIVL54gkYPPH373ZPQ/QVKX9xwwTWFmRLa7pTUWefpk+P
UOImu27d9bBU0FnRDklGKjQ6RIZ8oKWif93zrriHKjSFKTMLhCm4dxW2ipA3
CGtUniq1S8F+6Sa65dwbhNMGImWNyUhILk7sv62Gf5E48pvAZJSNWUqMvDV4
dbDX2lBNwY9utOXJFw08KXnHlvMUMnS1l/YT69R3n7Enlk1Nzr4lfjT1h5kV
8Sb5QKPFtAbbIqXBC4gtKst8I4jX7Ts38iyegpy9J8xsRgPT9ebvDhFzxZl5
h2c1GOrbbcI/R6EsMyEuljjf3KXiAvFoApfDJw7yW8+OJg4K56y8T9zZbC7e
S+yyzeGuwZwGTeWvl68kXtj/Z1M58e3UeMf7P1PA8/pbzcRhDac7SohjZZW8
PmLb2cNn8okn7kj8dOc1uBrNup9I3BZ/YiCIWLifAW9ivegDj04R7xEbjLgS
u4UGXE8iNuiaTfqauMJne/gdYspT0WxOrPzO0fsxsdsvPccWEdtutnF8STxX
12Iwc5ZCiD1jsZL4t891d9TEl5YbTs4T/7Sx3GeE+D/ermj8
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwVx30w1HkcwPElImawGbZVlOjB0ejK9YiPuxItcZ4mmk1dD6QHsu0duhTu
53F32bWbtpZQzZSkzWPXyX2KpcuJkLg8b85ht93qUsnTfe+P97znZXsoJvCo
Lo1G8yP9f9bRsfZH4yHuc5TTzuGzEtTbYXV6kOkCxbvexZoTbyyU5lcyd4Kn
YU2hZ4IEfZ51VxQwgyGbB9MlcRLce+RTXS7zCNjkBlZwuBLsd07fIWBywb0w
foVetASLLPzTspgUnH+gmFn9gwSTDSvXZDIlMP+GXX3SS4KhYcXyt+9uADeD
s+qGqQSN55PZXjZy2LKxWSPoFeOqAM1YA68KyvyueCfeEmNc61aQfngAF2X+
xUtixcioog/o6CC0fN4VFOEmxhrljpY213qIS7fTO6gvxvrjBUvD1AroSIv3
PNCai5Or3UzLTj2Bc3mmQ2ayXNSdKjVbuqoZrnTzEqIP5+Km+YM1QXdbYKED
6+R551xsoVxam75qAztVklY8I8LlQtVUieY5VA7kx4Y0ilD1aXCga30HiJVf
fJ+KRHhjorbZJLsTRhnua8bDRGhifVM7MvICxuumRCZ2IuRHVUcU2b8EV+6n
kFGtED96lI4cu9ANOuxXS47/KkTuBkWVZUMPWAbPuxRRQhy8q+C1276CwsRF
36f4CnH6+AuZw9le6GHwp6MshOj4rcFcRG0fIFVMM1TkoNc128hyxgDUuE4a
SIJzMM76wMph9iCwLJ49ptTZ6KQOMe7eMwQebRfzk9Ky0dz0raHiyxAsU6/9
8QUjG/VQJrfLH4ZLDh40wT0BnnCp/WuRjxI+P7XNLPAQYOnuQ0W/f1RCrc+H
DQ86+DipsjIbzXsNyzSsnK0n+Vgd5LVAsnMEjvx7Ypw+y8ML3qmFVaMj4M2k
f/S7yEPbflbP9dS/Qbjipt0lZx5u20xJmBtG4WGWgf/mx1nItmmb0ukchQwL
tZPrviycbBYoTyf/A9sXyAwvT2SiVC+cG2g/Bln01rx9KZloPlB9TVcxBtt1
3nuuWZaJ+onJwVtjx6EraOi9T1kG0krC5crFE2D0JDCwyzMDOVfkgsX1E7C2
IEde05WOdY4ZhvRoFdwMrlt3PTId6SyOU4qJGhqcYsI/0NKxb93zzoSHamiM
VPELRGl47yrYj4S/gcgG1alShzTcL99Et557A1G0/hhFQyompRYn993WQGCR
NOabkFQsG7OWmfhq4dXBHltjDYUBdJMtT75owZtStm85T2GWvu7SPmI97Drj
SKyYmpx9S/xo6g8LG+JNyv4Gq2ktbIuRhy0gtqos848mXrfv3PCzRAqVwXsi
LWa0YL7e8t0hYq6Un3d4VguDvbvNBOcoLOMnJcQT51u6VVwgHk3isgXEoQHr
gznEoVHslfeJO5ospXuJ3bY53TWa00Jj+evlK4kX9v3ZWE58Oz3R+f7PFMJz
vNVEHFl/ur2EOF5Ryesltp89fCafeOKOLEB/XgtXOaz7ycStiSf6Q4lF+xng
S2zAOfDoFPEeqdGwO7FHRND1FGKjztmUr4kr/LZH3SGmvEeaLIlV3zn7Pib2
+KX72CJi+812zi+J5+qajWbOUhjuyFisIv7tc90dDfGl5caT88Q/bSz3Gyb+
D+Mwj/w=
     "]]}},
  AspectRatio->0.1,
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 1}, {-0.01999999979591837, 0.01999999979591837}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.44161163065*^9}]
}, Open  ]],

Cell[TextData[{
 "Now this is a slightly unusual case: as this is a first-order differential \
equation we need only one boundary condition, whereas we are given two \
boundary conditions and there is an unknown quantity, ",
 StyleBox["Q",
  FontSlant->"Italic"],
 ", in the equation. We explore two rather different methods of tackling this \
problem. Before we go on, it is worth noting that this equation has the same \
form as the diffusion equation, which describes the spreading of material \
down a concentration gradient."
}], "Text"],

Cell[CellGroupData[{

Cell["The shooting method", "Subsubsection"],

Cell[TextData[{
 "We can think of this method as requiring us to take an initial guess at the \
heat transprt, ",
 StyleBox["Q",
  FontSlant->"Italic"],
 ", plug that into the equation, solve it using the boundary condition at ",
 StyleBox["x",
  FontSlant->"Italic"],
 "=0, looking at the value of \[Theta] at ",
 StyleBox["x",
  FontSlant->"Italic"],
 "=1, and then adjusting ",
 StyleBox["Q",
  FontSlant->"Italic"],
 " until we achieve the right value of \[Theta] at ",
 StyleBox["x",
  FontSlant->"Italic"],
 "=1. The analogy with artillery is that ",
 StyleBox["Q",
  FontSlant->"Italic"],
 " is some parameter of the system (in the analogy, the angle of elevation of \
the gun barrel) which is adjusted until the target is hit. This breaks the \
problem down into two steps -- solving the differential equation numerically \
and adjusting the parameter to satisfy the second boundary condition.\n\n  We \
start by setting up a simple Euler method to solve the differential equation \
for some ",
 StyleBox["Q",
  FontSlant->"Italic"],
 StyleBox[". In fact, of course, we can collapse ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["Q/\[Kappa]",
  FontSlant->"Italic"],
 StyleBox[" into one single parameter. Note that all we need to keep from the \
solution is the value of the temperature at the end-point. ",
  FontVariations->{"CompatibilityType"->0}]
}], "Text",
 CellChangeTimes->{{3.6312638592623653`*^9, 3.631263886751759*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"esol", "[", 
   RowBox[{"Qk_", ",", "h_", ",", "xmax_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Nest", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+", "h"}], ",", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "-", " ", 
         RowBox[{"h", 
          RowBox[{"(", 
           RowBox[{"Qk", " ", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"100", "/", 
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ")"}], "2"], 
             "/", "\[Pi]"}]}], ")"}]}]}]}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "500"}], "}"}], ",", 
     RowBox[{"Floor", "[", 
      RowBox[{"xmax", "/", "h"}], "]"}]}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"esol", "[", 
  RowBox[{".1", ",", ".1", ",", "1"}], "]"}]], "Input"],

Cell[BoxData["352.318496182285`"], "Output",
 CellChangeTimes->{3.4416116318389997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Qsol", "=", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"esol", "[", 
      RowBox[{"Qk", ",", ".1", ",", "1"}], "]"}], "-", "300"}], ",", 
    RowBox[{"{", 
     RowBox[{"Qk", ",", ".1"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Qk", "\[Rule]", "0.13542657328764907`"}], "}"}]], "Output",
 CellChangeTimes->{3.441611632449*^9}]
}, Open  ]],

Cell["\<\
As a check, we'll plot the resulting temperature distribution\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
           "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
           "h"}], ",", 
          RowBox[{
           RowBox[{
           "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
           FractionBox[
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"Qk", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox["100", 
                  RowBox[{"2", "-", 
                   RowBox[{
                   "#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]], ")"}], "2"]}], ")"}]}], 
            "\[Pi]"]}]}], "}"}], "/.", "\[InvisibleSpace]", "Qsol"}], "/.", 
       "\[InvisibleSpace]", 
       RowBox[{"h", "\[Rule]", "0.1`"}]}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "500"}], "}"}], ",", 
     RowBox[{"Floor", "[", 
      FractionBox["1.`", "0.1`"], "]"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], 
   LineBox[{{0., 500.}, {0.1, 489.2230957176369}, {0.2, 477.2819275377332}, {
    0.30000000000000004`, 463.9771074360504}, {0.4, 449.0609769414302}, {0.5, 
    432.2220640002379}, {0.6, 413.0631230538146}, {0.7, 
    391.06944084491033`}, {0.7999999999999999, 365.56197508783794`}, {
    0.8999999999999999, 335.62612985905156`}, {0.9999999999999999, 300.}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.44161163254*^9}]
}, Open  ]],

Cell["\<\
It's worth exploring the solution to see whether the choice of step length \
makes any significant difference: try 0.1 and 0.01. \
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The linear equation method", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{
   "An", " ", "alternative", " ", "approach", " ", "to", " ", "this", " ", 
    "problem", " ", "avoids", " ", "finding", " ", "the", " ", "heat", " ", 
    "flow", " ", "by", " ", "reformulating", " ", "the", " ", "problem", " ", 
    "in", " ", "terms", " ", "of", " ", "continuity", " ", "of", " ", "heat", 
    " ", 
    RowBox[{"flow", ".", " ", "The"}], " ", "fact", " ", "that", " ", "the", 
    " ", "bar", " ", "is", " ", "insulated", " ", "means", " ", "that", " ", 
    "if", " ", "we", " ", "divide", " ", "the", " ", "bar", " ", "into", " ", 
    StyleBox["N",
     FontSlant->"Italic"], " ", "equal", " ", "lengths"}],
   FontFamily->"Times New Roman"], 
  StyleBox[",",
   FontFamily->"Times New Roman"], 
  StyleBox[" ",
   FontFamily->"Times New Roman"], 
  StyleBox[
   RowBox[{"and", " ", "write", " ", 
    SubscriptBox["\[Theta]", "i"], " ", "for", " ", "the", " ", "temperature",
     " ", "at", " ", "point", " ", "i"}],
   FontFamily->"Times New Roman"], 
  StyleBox[",",
   FontFamily->"Times New Roman"], 
  StyleBox[" ",
   FontFamily->"Times New Roman"], 
  StyleBox[
   RowBox[{
    RowBox[{"where", " ", "the", " ", "cross"}], "-", 
    RowBox[{"sectional", " ", "area", " ", "is", " ", 
     StyleBox[
      SubscriptBox["A", "i"],
      FontSlant->"Italic"]}]}],
   FontFamily->"Times New Roman"], 
  StyleBox[",",
   FontFamily->"Times New Roman"], 
  StyleBox[" ",
   FontFamily->"Times New Roman"], 
  StyleBox[
   RowBox[{
   "the", " ", "total", " ", "heat", " ", "flow", " ", "must", " ", "be", " ",
     "the", " ", "same", " ", "at", " ", "all", " ", 
    RowBox[{"points", ".", " ", "In"}], " ", "particular"}],
   FontFamily->"Times New Roman"], 
  StyleBox[",",
   FontFamily->"Times New Roman"], 
  StyleBox["\[IndentingNewLine]",
   FontFamily->"Times New Roman"], 
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox[
      SubscriptBox["A", "i"],
      FontSlant->"Italic"], 
     SubscriptBox[
      RowBox[{"(", 
       FractionBox["d\[Theta]", 
        StyleBox[
         RowBox[{"d", 
          StyleBox["x",
           FontSlant->"Italic"]}]]], ")"}], 
      StyleBox["i",
       FontSlant->"Italic"]]}],
    FontFamily->"Times New Roman"], 
   StyleBox["=",
    FontFamily->"Times New Roman"], 
   RowBox[{
    StyleBox[
     SubscriptBox["A", 
      RowBox[{"i", 
       StyleBox["+",
        FontWeight->"Plain",
        FontSlant->"Plain",
        FontTracking->"Plain",
        FontVariations->{"CompatibilityType"->0,
        "Masked"->False,
        "Outline"->False,
        "RotationAngle"->0,
        "Shadow"->False,
        "StrikeThrough"->False,
        "Underline"->False}], 
       StyleBox["1",
        FontWeight->"Plain",
        FontSlant->"Plain",
        FontTracking->"Plain",
        FontVariations->{"CompatibilityType"->0,
        "Masked"->False,
        "Outline"->False,
        "RotationAngle"->0,
        "Shadow"->False,
        "StrikeThrough"->False,
        "Underline"->False}]}]],
     FontFamily->"Times New Roman",
     FontSlant->"Italic"], 
    RowBox[{
     SubscriptBox[
      StyleBox[
       RowBox[{"(", 
        FractionBox["d\[Theta]", 
         StyleBox[
          RowBox[{"d", 
           StyleBox["x",
            FontSlant->"Italic"]}]]], ")"}],
       FontFamily->"Times New Roman"], 
      StyleBox[
       RowBox[{
        StyleBox["i",
         FontSlant->"Italic"], "+", "1"}],
       FontFamily->"Times New Roman"]], "."}]}]}]}]], "Text",
 CellChangeTimes->{{3.631264176861183*^9, 3.6312641892906723`*^9}}],

Cell[TextData[{
 "Now apply a centred-difference formula, based on the mid-points, and apply \
it to\n",
 Cell[BoxData[
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox[
      SubscriptBox["A", 
       RowBox[{"i", 
        StyleBox["-",
         FontWeight->"Plain",
         FontSlant->"Plain",
         FontTracking->"Plain",
         FontVariations->{"CompatibilityType"->0,
         "Masked"->False,
         "Outline"->False,
         "RotationAngle"->0,
         "Shadow"->False,
         "StrikeThrough"->False,
         "Underline"->False}], 
        StyleBox[
         FractionBox["1", "2"],
         FontWeight->"Plain",
         FontSlant->"Plain",
         FontTracking->"Plain",
         FontVariations->{"CompatibilityType"->0,
         "Masked"->False,
         "Outline"->False,
         "RotationAngle"->0,
         "Shadow"->False,
         "StrikeThrough"->False,
         "Underline"->False}]}]],
      FontSlant->"Italic"], 
     SubscriptBox[
      StyleBox[
       RowBox[{"(", 
        FractionBox["d\[Theta]", 
         StyleBox[
          RowBox[{"d", 
           StyleBox["x",
            FontSlant->"Italic"]}]]], ")"}],
       FontSize->18], 
      RowBox[{
       StyleBox["i",
        FontSlant->"Italic"], 
       StyleBox["-",
        FontSlant->"Italic"], 
       FractionBox["1", "2"]}]]}],
    FontFamily->"Times New Roman"], 
   StyleBox["=",
    FontFamily->"Times New Roman"], 
   RowBox[{
    StyleBox[
     SubscriptBox["A", 
      RowBox[{"i", 
       StyleBox["+",
        FontWeight->"Plain",
        FontSlant->"Plain",
        FontTracking->"Plain",
        FontVariations->{"CompatibilityType"->0,
        "Masked"->False,
        "Outline"->False,
        "RotationAngle"->0,
        "Shadow"->False,
        "StrikeThrough"->False,
        "Underline"->False}], 
       StyleBox[
        FractionBox["1", "2"],
        FontWeight->"Plain",
        FontSlant->"Plain",
        FontTracking->"Plain",
        FontVariations->{"CompatibilityType"->0,
        "Masked"->False,
        "Outline"->False,
        "RotationAngle"->0,
        "Shadow"->False,
        "StrikeThrough"->False,
        "Underline"->False}]}]],
     FontFamily->"Times New Roman",
     FontSlant->"Italic"], 
    SubscriptBox[
     StyleBox[
      RowBox[{"(", 
       FractionBox["d\[Theta]", 
        StyleBox[
         RowBox[{"d", 
          StyleBox["x",
           FontSlant->"Italic"]}]]], ")"}],
      FontFamily->"Times New Roman",
      FontSize->18], 
     RowBox[{
      StyleBox["i",
       FontFamily->"Times New Roman",
       FontSlant->"Italic"], 
      StyleBox["+",
       FontFamily->"Times New Roman",
       FontSlant->"Italic"], 
      FractionBox["1", "2"]}]]}]}]]],
 ". This gives\n",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    RowBox[{
     StyleBox[
      SubscriptBox["A", 
       RowBox[{"i", 
        StyleBox["-",
         FontWeight->"Plain",
         FontSlant->"Plain",
         FontTracking->"Plain",
         FontVariations->{"CompatibilityType"->0,
         "Masked"->False,
         "Outline"->False,
         "RotationAngle"->0,
         "Shadow"->False,
         "StrikeThrough"->False,
         "Underline"->False}], 
        StyleBox[
         FractionBox["1", "2"],
         FontWeight->"Plain",
         FontSlant->"Plain",
         FontTracking->"Plain",
         FontVariations->{"CompatibilityType"->0,
         "Masked"->False,
         "Outline"->False,
         "RotationAngle"->0,
         "Shadow"->False,
         "StrikeThrough"->False,
         "Underline"->False}]}]],
      FontSlant->"Italic"], 
     RowBox[{
      StyleBox["(",
       FontSize->16], 
      StyleBox[
       RowBox[{
        SubscriptBox["\[Theta]", 
         StyleBox["i",
          FontSlant->"Italic"]], "-", 
        SubscriptBox["\[Theta]", 
         RowBox[{
          StyleBox["i",
           FontSlant->"Italic"], "-", "1"}]]}],
       FontSize->16], 
      StyleBox[")",
       FontSize->18]}]}], "=", 
    RowBox[{
     StyleBox[
      SubscriptBox["A", 
       RowBox[{"i", 
        StyleBox["+",
         FontWeight->"Plain",
         FontSlant->"Plain",
         FontTracking->"Plain",
         FontVariations->{"CompatibilityType"->0,
         "Masked"->False,
         "Outline"->False,
         "RotationAngle"->0,
         "Shadow"->False,
         "StrikeThrough"->False,
         "Underline"->False}], 
        StyleBox[
         FractionBox["1", "2"],
         FontWeight->"Plain",
         FontSlant->"Plain",
         FontTracking->"Plain",
         FontVariations->{"CompatibilityType"->0,
         "Masked"->False,
         "Outline"->False,
         "RotationAngle"->0,
         "Shadow"->False,
         "StrikeThrough"->False,
         "Underline"->False}]}]],
      FontSlant->"Italic"], 
     RowBox[{
      StyleBox["(",
       FontSize->18], 
      StyleBox[
       RowBox[{
        SubscriptBox["\[Theta]", 
         RowBox[{
          StyleBox["i",
           FontSlant->"Italic"], "+", "1"}]], "-", 
        SubscriptBox["\[Theta]", 
         StyleBox["i",
          FontSlant->"Italic"]]}],
       FontSize->16], 
      StyleBox[")",
       FontSize->18]}]}]}],
   FontFamily->"Times New Roman"]]],
 ".\nIf we insert the explicit form for the area and rearrange, we have"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"leq", "=", 
  RowBox[{
   RowBox[{
    StyleBox["(",
     FontFamily->"Courier New",
     FontSize->12], 
    RowBox[{
     RowBox[{
      StyleBox["(",
       FontFamily->"Courier New",
       FontSize->12], 
      RowBox[{
       StyleBox[
        RowBox[{
         StyleBox[
          SubscriptBox["A", 
           RowBox[{"i", 
            StyleBox["-",
             FontWeight->"Plain",
             FontSlant->"Plain",
             FontTracking->"Plain",
             FontVariations->{"CompatibilityType"->0,
             "Masked"->False,
             "Outline"->False,
             "RotationAngle"->0,
             "Shadow"->False,
             "StrikeThrough"->False,
             "Underline"->False}], 
            StyleBox[
             FractionBox["1", "2"],
             FontWeight->"Plain",
             FontSlant->"Plain",
             FontTracking->"Plain",
             FontVariations->{"CompatibilityType"->0,
             "Masked"->False,
             "Outline"->False,
             "RotationAngle"->0,
             "Shadow"->False,
             "StrikeThrough"->False,
             "Underline"->False}]}]],
          FontSize->12,
          FontSlant->"Italic"], 
         RowBox[{
          StyleBox["(",
           FontSize->16], 
          StyleBox[
           RowBox[{
            SubscriptBox["\[Theta]", 
             StyleBox["i",
              FontSlant->"Italic"]], "-", 
            SubscriptBox["\[Theta]", 
             RowBox[{
              StyleBox["i",
               FontSlant->"Italic"], "-", "1"}]]}],
           FontSize->16], 
          StyleBox[")",
           FontSize->18]}]}],
        FontFamily->"Times New Roman"], "==", 
       StyleBox[
        RowBox[{
         StyleBox[
          SubscriptBox["A", 
           RowBox[{"i", 
            StyleBox["+",
             FontWeight->"Plain",
             FontSlant->"Plain",
             FontTracking->"Plain",
             FontVariations->{"CompatibilityType"->0,
             "Masked"->False,
             "Outline"->False,
             "RotationAngle"->0,
             "Shadow"->False,
             "StrikeThrough"->False,
             "Underline"->False}], 
            StyleBox[
             FractionBox["1", "2"],
             FontWeight->"Plain",
             FontSlant->"Plain",
             FontTracking->"Plain",
             FontVariations->{"CompatibilityType"->0,
             "Masked"->False,
             "Outline"->False,
             "RotationAngle"->0,
             "Shadow"->False,
             "StrikeThrough"->False,
             "Underline"->False}]}]],
          FontSlant->"Italic"], 
         RowBox[{
          StyleBox["(",
           FontSize->18], 
          StyleBox[
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{
              StyleBox["i",
               FontSlant->"Italic"], "+", "1"}]], "-", 
            SubscriptBox["\[Theta]", 
             StyleBox["i",
              FontSlant->"Italic"]]}],
           FontSize->16], 
          StyleBox[")",
           FontSize->18]}]}],
        FontFamily->"Times New Roman",
        FontSize->12]}], 
      StyleBox[")",
       FontFamily->"Times New Roman",
       FontSize->18]}], 
     StyleBox["/.",
      FontFamily->"Times New Roman",
      FontSize->18], 
     StyleBox[
      RowBox[{
       StyleBox[
        SubscriptBox["A", "j_"],
        FontFamily->"Times New Roman",
        FontSlant->"Italic"], 
       StyleBox["->",
        FontFamily->"Times New Roman",
        FontSlant->"Italic"], 
       StyleBox[
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox[
          RowBox[{"(", "\[NegativeThinSpace]", 
           FractionBox[
            RowBox[{"2", "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}], "h"}]}], "100"], 
           "\[NegativeThinSpace]", ")"}], "2"]}],
        FontFamily->"Courier New"]}],
      FontSize->12]}], 
    StyleBox[")",
     FontFamily->"Courier New",
     FontSize->12]}], 
   StyleBox["//",
    FontFamily->"Courier New"], 
   StyleBox["FullSimplify",
    FontFamily->"Courier New"]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", 
       RowBox[{"h", " ", 
        RowBox[{"(", 
         RowBox[{"3", "-", 
          RowBox[{"2", " ", "i"}]}], ")"}]}]}], ")"}], "2"], " ", 
    SubscriptBox["\[Theta]", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "i"}]]}], "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", "h", "-", 
       RowBox[{"2", " ", "h", " ", "i"}]}], ")"}], "2"], " ", 
    SubscriptBox["\[Theta]", 
     RowBox[{"1", "+", "i"}]]}]}], "\[Equal]", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"16", "+", 
     RowBox[{"h", " ", 
      RowBox[{"(", 
       RowBox[{"16", "+", 
        RowBox[{"5", " ", "h"}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "h"}], ")"}], " ", "i"}], "+", 
        RowBox[{"4", " ", "h", " ", 
         SuperscriptBox["i", "2"]}]}], ")"}]}]}], ")"}], " ", 
   SubscriptBox["\[Theta]", "i"]}]}]], "Output",
 CellChangeTimes->{3.44161163719*^9, 3.473680427966*^9, 3.473680464981*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"leq", "/.", 
  RowBox[{"i", "\[Rule]", "2"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "-", "h"}], ")"}], "2"], " ", 
    SubscriptBox["\[Theta]", "1"]}], "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "-", 
       RowBox[{"3", " ", "h"}]}], ")"}], "2"], " ", 
    SubscriptBox["\[Theta]", "3"]}]}], "\[Equal]", 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"16", "+", 
     RowBox[{"h", " ", 
      RowBox[{"(", 
       RowBox[{"16", "+", 
        RowBox[{"21", " ", "h"}], "-", 
        RowBox[{"16", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "h"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
   SubscriptBox["\[Theta]", "2"]}]}]], "Output",
 CellChangeTimes->{3.44161163729*^9, 3.473680535824*^9}]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
   "Now", " ", "we", " ", "can", " ", "set", " ", "up", " ", "a", " ", 
    "system", " ", "of", " ", "equations"}], ",", " ", 
   RowBox[{
    RowBox[{
    "in", " ", "which", " ", "we", " ", "substitute", " ", "values", " ", 
     "for", " ", 
     StyleBox["i",
      FontSlant->"Italic"], " ", "running", " ", "from", " ", "2", " ", "to", 
     " ", 
     StyleBox["N",
      FontSlant->"Italic"]}], "-", "1"}], ",", " ", 
   RowBox[{
   "as", " ", "well", " ", "as", " ", "the", " ", "known", " ", "values", " ",
     "of", " ", 
    SubscriptBox["\[Theta]", "1"], " ", "and", " ", 
    SubscriptBox["\[Theta]", 
     StyleBox["N",
      FontSlant->"Italic"]]}], ",", " ", 
   RowBox[{
    RowBox[{"and", " ", "solve", " ", "the", " ", 
     StyleBox["N",
      FontSlant->"Italic"]}], "-", 
    RowBox[{"2", " ", "equations", " ", "for", " ", "the", " ", 
     StyleBox["N",
      FontSlant->"Italic"]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"variables", ".", " ", "For"}], " ", "example"}]}], ",", " ", 
   RowBox[{
    RowBox[{"with", " ", 
     StyleBox["N",
      FontSlant->"Italic"]}], "=", "10"}]}],
  FontFamily->"Times New Roman"]], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nN", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"thsol", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"leq", "/.", 
          RowBox[{"h", "\[Rule]", 
           RowBox[{"1.", "/", 
            RowBox[{"(", 
             RowBox[{"nN", "-", "1"}], ")"}]}]}]}], "/.", 
         RowBox[{"i", "\[Rule]", "j"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "2", ",", 
          RowBox[{"nN", "-", "1"}]}], "}"}]}], "]"}], "/.", 
      RowBox[{
       SubscriptBox["\[Theta]", "1"], "\[Rule]", "500"}]}], "/.", 
     RowBox[{
      SubscriptBox["\[Theta]", "10"], "\[Rule]", "300"}]}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      SubscriptBox["\[Theta]", "i"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2", ",", 
        RowBox[{"nN", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Theta]", "2"], "\[Rule]", "488.2237963792128`"}], ",", 
    RowBox[{
     SubscriptBox["\[Theta]", "3"], "\[Rule]", "474.976919028006`"}], ",", 
    RowBox[{
     SubscriptBox["\[Theta]", "4"], "\[Rule]", "459.9656292928718`"}], ",", 
    RowBox[{
     SubscriptBox["\[Theta]", "5"], "\[Rule]", "442.8124195004057`"}], ",", 
    RowBox[{
     SubscriptBox["\[Theta]", "6"], "\[Rule]", "423.02387432144315`"}], ",", 
    RowBox[{
     SubscriptBox["\[Theta]", "7"], "\[Rule]", "399.94251522470114`"}], ",", 
    RowBox[{
     SubscriptBox["\[Theta]", "8"], "\[Rule]", "372.6724784846941`"}], ",", 
    RowBox[{
     SubscriptBox["\[Theta]", "9"], "\[Rule]", "339.9608017602869`"}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{3.441611637406*^9, 3.47368064194*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Prepend", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "i"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "2", ",", 
            RowBox[{"nN", "-", "1"}]}], "}"}]}], "]"}], "/.", 
        "\[InvisibleSpace]", 
        RowBox[{
        "thsol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
       ",", "500"}], "]"}], ",", "300"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], 
   LineBox[{{1., 500.}, {2., 488.2237963792128}, {3., 474.976919028006}, {4., 
    459.9656292928718}, {5., 442.8124195004057}, {6., 423.02387432144315`}, {
    7., 399.94251522470114`}, {8., 372.6724784846941}, {9., 
    339.9608017602869}, {10., 300.}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, Automatic},
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.441611637442*^9, 3.473680645826*^9}]
}, Open  ]],

Cell[TextData[{
 "If we think a bit more carefully about the structure of the equations, we \
can see that each equation links the value of \[Theta] at one step to the \
values on each side. This means that we could rewrite the problem as a matrix \
equation. If the series of equations is written as follows, with the \
subscripts (n,m) denoting (equation number, grid position) there are ",
 StyleBox["N",
  FontSlant->"Italic"],
 " grid positions, at 2 of which the temperature is known, so that there are ",
 StyleBox["N",
  FontSlant->"Italic"],
 "-2 equations which might be written as\n  ",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["c", 
       RowBox[{"1", ",", "1"}]], " ", 
      SubscriptBox["\[Theta]", 
       RowBox[{"1", " "}]]}], "+", 
     RowBox[{
      SubscriptBox["c", 
       RowBox[{"1", ",", "2"}]], " ", 
      SubscriptBox["\[Theta]", 
       RowBox[{"2", " "}]]}], "+", 
     RowBox[{
      SubscriptBox["c", 
       RowBox[{"1", ",", "3"}]], " ", 
      SubscriptBox["\[Theta]", 
       RowBox[{"3", " "}]]}]}], "=", "0"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["c", 
       RowBox[{"2", ",", "1"}]], " ", 
      SubscriptBox["\[Theta]", 
       RowBox[{"2", " "}]]}], " ", "+", 
     RowBox[{
      SubscriptBox["c", 
       RowBox[{"2", ",", "2"}]], " ", 
      SubscriptBox["\[Theta]", 
       RowBox[{"3", " "}]]}], " ", "+", 
     RowBox[{
      SubscriptBox["c", 
       RowBox[{"2", ",", "3"}]], " ", 
      SubscriptBox["\[Theta]", 
       RowBox[{"4", " "}]]}]}], "=", "0"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox["...", TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["c", 
       RowBox[{
        RowBox[{"N", "-", "2"}], ",", 
        RowBox[{"N", "-", "2"}]}]], " ", 
      SubscriptBox["\[Theta]", 
       RowBox[{"N", "-", "2", " "}]]}], " ", "+", 
     RowBox[{
      SubscriptBox["c", 
       RowBox[{
        RowBox[{"N", "-", "2"}], ",", 
        RowBox[{"N", "-", "1"}]}]], " ", 
      SubscriptBox["\[Theta]", 
       RowBox[{"N", "-", "1", " "}]]}], " ", "+", 
     RowBox[{
      SubscriptBox["c", 
       RowBox[{
        RowBox[{"N", "-", "2"}], ",", "N"}]], " ", 
      SubscriptBox["\[Theta]", "N"]}]}], "=", "0", " "}], TraditionalForm]}]],
 "\n  and we know ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "1"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "N"], TraditionalForm]]],
 ", so we can rearrange the equations as\n  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     StyleBox[GridBox[{
        {
         SubscriptBox["c", 
          RowBox[{"1", ",", "2"}]], 
         SubscriptBox["c", 
          RowBox[{"1", ",", "3"}]], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}]},
        {
         SubscriptBox["c", 
          RowBox[{"2", ",", "1"}]], 
         SubscriptBox["c", 
          RowBox[{"2", ",", "2"}]], 
         SubscriptBox["c", 
          RowBox[{"2", ",", "3"}]], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}]},
        {
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         SubscriptBox["c", 
          RowBox[{"3", ",", "1"}]], 
         SubscriptBox["c", 
          RowBox[{"3", ",", "2"}]], 
         SubscriptBox["c", 
          RowBox[{"3", ",", "3"}]], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}]},
        {
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox[".",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox[".",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox[".",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontSlant->"Plain",
          FontVariations->{"CompatibilityType"->0}], 
         StyleBox["0",
          FontSlant->"Plain",
          FontVariations->{"CompatibilityType"->0}], 
         StyleBox["0",
          FontSlant->"Plain",
          FontVariations->{"CompatibilityType"->0}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}]},
        {
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox[".",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox[".",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox[".",
          FontSlant->"Plain",
          FontVariations->{"CompatibilityType"->0}], 
         StyleBox["0",
          FontSlant->"Plain",
          FontVariations->{"CompatibilityType"->0}], 
         StyleBox["0",
          FontSlant->"Plain",
          FontVariations->{"CompatibilityType"->0}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}]},
        {
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontSlant->"Plain",
          FontVariations->{"CompatibilityType"->0}], 
         StyleBox["0",
          FontSlant->"Plain",
          FontVariations->{"CompatibilityType"->0}], 
         StyleBox["0",
          FontSlant->"Plain",
          FontVariations->{"CompatibilityType"->0}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}]},
        {
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontSlant->"Plain",
          FontVariations->{"CompatibilityType"->0}], 
         StyleBox["0",
          FontSlant->"Plain",
          FontVariations->{"CompatibilityType"->0}], 
         StyleBox["0",
          FontSlant->"Plain",
          FontVariations->{"CompatibilityType"->0}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}]},
        {
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontSlant->"Plain",
          FontVariations->{"CompatibilityType"->0}], 
         StyleBox["0",
          FontSlant->"Plain",
          FontVariations->{"CompatibilityType"->0}], 
         StyleBox[".",
          FontSlant->"Plain",
          FontVariations->{"CompatibilityType"->0}], 
         StyleBox[".",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox[".",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}]},
        {
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         SubscriptBox["c", 
          RowBox[{
           RowBox[{"N", "-", "3"}], ",", 
           RowBox[{"N", "-", "2"}]}]], 
         SubscriptBox["c", 
          RowBox[{
           RowBox[{"N", "-", "3"}], ",", 
           RowBox[{"N", "-", "2"}]}]], 
         SubscriptBox["c", 
          RowBox[{
           RowBox[{"N", "-", "3"}], ",", 
           RowBox[{"N", "-", "1"}]}]]},
        {
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}], 
         SubscriptBox["c", 
          RowBox[{
           RowBox[{"N", "-", "2"}], ",", 
           RowBox[{"N", "-", "2"}]}]], 
         SubscriptBox["c", 
          RowBox[{
           RowBox[{"N", "-", "2"}], ",", 
           RowBox[{"N", "-", "1"}]}]]}
       }],
      FontFamily->"Times New Roman",
      FontSlant->"Italic"], 
     StyleBox[")",
      FontFamily->"Times New Roman",
      FontSlant->"Italic"]}], 
    StyleBox[
     RowBox[{"(", GridBox[{
        {
         SubscriptBox["\[Theta]", 
          RowBox[{"2", " "}]]},
        {
         SubscriptBox["\[Theta]", "3"]},
        {
         SubscriptBox["\[Theta]", 
          RowBox[{"4", " "}]]},
        {"."},
        {"."},
        {"."},
        {"."},
        {"."},
        {
         SubscriptBox["\[Theta]", 
          RowBox[{"N", "-", "2"}]]},
        {
         SubscriptBox["\[Theta]", 
          RowBox[{"N", "-", "1", " "}]]}
       }], ")"}],
     FontFamily->"Times New Roman",
     FontSlant->"Italic"]}], 
   StyleBox["=",
    FontFamily->"Times New Roman",
    FontSlant->"Italic"], 
   RowBox[{
    RowBox[{
     StyleBox["(",
      FontFamily->"Times New Roman",
      FontSlant->"Italic"], 
     StyleBox[GridBox[{
        {
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["c", 
            RowBox[{"1", ",", "1"}]]}], " ", 
          SubscriptBox["\[Theta]", 
           RowBox[{"1", " "}]]}]},
        {
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}]},
        {
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}]},
        {
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}]},
        {
         StyleBox[".",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}]},
        {
         StyleBox[".",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}]},
        {
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}]},
        {
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}]},
        {
         StyleBox["0",
          FontWeight->"Plain",
          FontSlant->"Plain",
          FontTracking->"Plain",
          FontVariations->{"CompatibilityType"->0,
          "Masked"->False,
          "Outline"->False,
          "RotationAngle"->0,
          "Shadow"->False,
          "StrikeThrough"->False,
          "Underline"->False}]},
        {
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["c", 
            RowBox[{
             RowBox[{"N", "-", "2"}], ",", "N"}]]}], " ", 
          SubscriptBox["\[Theta]", "N"]}]}
       }],
      FontFamily->"Times New Roman",
      FontSlant->"Italic"], ")"}], "."}]}]]],
 "\n   \n  This form of matrix, a so-called tridiagonal matrix, is \
particularly easy to solve. Tridiagonal matrices crop up so frequently in \
numerical applications that there was a special add-on package in ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "(up to version 5.2), ",
 StyleBox["LinearAlgebra`Tridiagonal`",
  FontFamily->"Courier New"],
 ", to solve problems of this kind with great efficiency. It has now been \
superseded by the general purpose built-in function ",
 StyleBox["SparseArray.",
  FontFamily->"Courier"],
 " For any serious application, the sensible course would be to set up the \
problem in matrix form."
}], "Text",
 CellChangeTimes->{{3.5364184597175055`*^9, 3.5364184875590973`*^9}, {
  3.53641855176577*^9, 3.5364186552726903`*^9}, {3.5364187208184395`*^9, 
  3.536418768500167*^9}, {3.694160683731204*^9, 3.694160803232307*^9}, {
  3.694160853901162*^9, 3.6941608771215363`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving systems of equations", "Section"],

Cell[TextData[{
 "Problems involving several coupled equations are common in physics and \
other fields. Sometimes they occur naturally, as in electromagnetism where \
Maxwell's equations link electric and magnetic fields together, and sometimes \
they result from rewriting higher-order differential equations as coupled \
first-order equations. An example of the latter is the motion of a particle \
under the influence of a force. Instead of a second-order equation for the \
position ",
 StyleBox["x",
  FontSlant->"Italic"],
 " of the particle\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"m", " ", 
     OverscriptBox[
      RowBox[{"x", " "}], "\[DoubleDot]"]}], " ", "=", " ", "F", " "}], 
   TraditionalForm]]],
 ",\nwe can work in terms of position and velocity,\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"m", " ", 
     OverscriptBox["v", "."]}], "=", " ", "F"}], TraditionalForm]]],
 " ,\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "."], "=", " ", 
    RowBox[{"v", "."}]}], TraditionalForm]]],
 " \nThis has the advantage that first-order equations are often rather \
easier to solve. Of course, it does not make any difference to the number of \
boundary conditions we need to specify -- instead of a value and slope of ",
 StyleBox["x",
  FontSlant->"Italic"],
 " (or two values of ",
 StyleBox["x",
  FontSlant->"Italic"],
 "), we need to specify a value of ",
 StyleBox["x",
  FontSlant->"Italic"],
 " and a value o",
 StyleBox["f ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["v",
  FontSlant->"Italic",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[". \n  It is inevitable that dealing with systems of equations will \
require us to write our equations as lists, but apart from that there is \
little difference between this situation and the ones we have already met. In \
fact, the Runge-Kutta method we code above can be used with very little \
modification.\n    Let's take the trivial case of simple harmonic motion. \
Here",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["\n",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"m", " ", 
     OverscriptBox[
      RowBox[{"x", " "}], "\[DoubleDot]"]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"-", "k"}], " ", "x"}]}], TraditionalForm]]],
 " \nbecomes\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"m", " ", 
     OverscriptBox["v", "."]}], "=", " ", 
    RowBox[{
     RowBox[{"-", "k"}], " ", "x"}]}], TraditionalForm]]],
 " ,\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "."], "=", " ", 
    RowBox[{"v", "."}]}], TraditionalForm]]],
 " ,\nor in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " form using the forward Euler method"
}], "Text",
 CellChangeTimes->{3.441617951666*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ff", "[", 
   RowBox[{
   "k_", ",", "m_", ",", "\[CapitalDelta]t_", ",", "tmax_", ",", "v0_", ",", 
    "x0_"}], "]"}], ":=", 
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "+", "\[CapitalDelta]t"}], ",", 
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "-", 
        FractionBox[
         RowBox[{"k", " ", "\[CapitalDelta]t", " ", 
          RowBox[{
          "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         "m"]}], ",", 
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
        "+", 
        RowBox[{"\[CapitalDelta]t", " ", 
         RowBox[{
         "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}]}], 
      "}"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "v0", ",", "x0"}], "}"}], ",", 
    RowBox[{"Floor", "[", 
     FractionBox["tmax", "\[CapitalDelta]t"], "]"}]}], "]"}]}], "\n", 
 RowBox[{"pap", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"ff", "[", 
         RowBox[{
         "1.`", ",", "1.`", ",", "0.01`", ",", "10", ",", "0", ",", "1.`"}], 
         "]"}], "]"}], ",", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
6tvvoU8h/B/Tfgvf
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.4416116375109997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pex", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", "t", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"pap", ",", "pex"}], "]"}]}], "Input",
 CellChangeTimes->{{3.44161796774*^9, 3.441617972953*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
6tvvoU8h/B/Tfgvf
     "]]}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  DisplayFunction->Identity,
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.441611637634*^9}]
}, Open  ]],

Cell["\<\
That is not bad, but if we run on for many more time steps we may see \
problems.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ff", "[", 
   RowBox[{
   "k_", ",", "m_", ",", "\[CapitalDelta]t_", ",", "tmax_", ",", "v0_", ",", 
    "x0_"}], "]"}], ":=", 
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "+", "\[CapitalDelta]t"}], ",", 
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "-", 
        FractionBox[
         RowBox[{"k", " ", "\[CapitalDelta]t", " ", 
          RowBox[{
          "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
         "m"]}], ",", 
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
        "+", 
        RowBox[{"\[CapitalDelta]t", " ", 
         RowBox[{
         "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}]}], 
      "}"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "v0", ",", "x0"}], "}"}], ",", 
    RowBox[{"Floor", "[", 
     FractionBox["tmax", "\[CapitalDelta]t"], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"pap", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"ff", "[", 
          RowBox[{
          "1.`", ",", "1.`", ",", "0.01`", ",", "100", ",", "0", ",", "1.`"}],
           "]"}], "]"}], ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pex", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", "t", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"pap", ",", "pex"}], "]"}]}], "Input",
 CellChangeTimes->{{3.4416179821359997`*^9, 3.441617993752*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxc22VYVN/XgGFSQro7hg4DwY61VCzs7uZnYit2B4qtqNgKimAHNrpERWwa
kW4Yhpk5iCgiyDusP5/e+cI11zBn9t73fs6cIRznLBvzn4qSkpKhm5JSy9f/
f9tocntQ0YZd0PqV/vc1rPV+GD2x2y0Z/eQCFJ2NStJ7cqH18SvwWa9Gf+qG
K3TmdMstBub8sNEPCI+hp/z9t8E/6O/3+w9vU/XoliPcgzsji2u7i++1Pj8W
tKyOfO+8Npa0v0Uu7639GJ4e2jY9Tu0x8eFOP4X6yFfxcUefkvu0w6/r3OOg
4cSMoa52cfSYj/8SRl381q8y5iW1PPtb5CtI/tqvYd2ZVyTh14uH6pF7Jp0u
iCdfvr2BkHal5cOc37S+/lu4Fn9uzP4Fb+lNXcsrJMCzHU+HDruZQG15PIkQ
c7j/7hD5OxrLC/AerntseOjX6T2d5fF9gIVWWieHrv5AJRtaDvgRPNSh9M3D
j+TF4/0MKy/3n33i1yda1TK85V9AnDc89XGXL/Scx/8VasXflZyCv5IyKyRD
nHPBs6+xSXSV55MMovodCyevT6YhRS0vkAK7Hiw9UmKeQlKeXwqsX7/3lfKj
FDr6umUCqWBc/LXqzthU6szzTQNPYzXVKiGVvvMCpUHY5PfNNw6m0WaefzoM
vBubXeORTo4tw7HLgMt+a448TkinBF6PDBgRUuLwZ1YGLZzXcssEqYXj4ft/
M0iX1+cb1M2+V1RwIpPuDWoZ4DcwUg8Tbe7wjcbzemXBlJwZM/e8/0Z/GDAL
roonxvyelUXnef2+w+I+h02/1GdRX94A2bDicX2cypHvVMbrmQ1Xbu+OC3PN
pn0MmgOrD/bpvDUum9rx+uaCxsBpw16OzqGUzy23XIi4N9trRHkOreH1zoOz
aX5KXhtyybJluib50EGpW9Mo3Tx6weufD6fL50yOu5hHs1sON60A4jdPHbXQ
J5/+10ghlKYeEo17nU/jeD6FcPDpENP1Ywooin0KAaalrEwvKqB6nl8hnMrs
PcCnWyEFsFcR+ObMzdLfWkjneL5FMLP0mf2uhEKSsV8RbHqbFHCgbREhz78Y
ekgr9ruOLqJj7FkMi8bqWow+WUSlfLhiaEArN+2cIurCviXw1SShdqR9Me3l
9SkBN+HGc4e5xZTNPCUwcvQs2hBVTN68XqXQ/ezKftPExbSF/Uvhw77N+994
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
FvfhitllV9z2PRagjPtwxQ6zO0pK7gqwiPtwxZKBMxxSYgSQcx+K+SY9/zEq
QoDV3IcrXu545cjcMwL84T5ccecW8NI6JsAW7sMVe23e/qvvPgFUuQ9XNJrh
7qG3TYC93IcrWi9+3rgkWABd7sMVN1zad2t2kADHuA9XnOIbvUE8WwBz7sMV
H7Spuao+UYBz3Icr5ugqr340VABH7sMV/5zr4t0IAkRxH4rnX7tj8c1XAC/u
wxWfSQbtGeQmwF3uwxX36J16O9xKgM7chyt6RshcqnQEeMZ9uKKkx91/3f/J
AbgPV+y+zWX0lyI5vOU+XDHro6j+0Fs5DOE+XHF9qHBra5QcvnIfrjhpYOdO
l0LkMJb7cMWgLGFIzXw5ZHEfrjhv91paNUgO07kPxX6oCZrj7iqHYu5D4VH7
UsNATQ7zuQ9XbMZL+7yKZFDNfSjWq3lH4sYXMljBfbjiFk/jKOXTMvjFfSj2
R15H/ZerZLCR+3DFNcFVNfeGy0CJ+3BFtQvB/fJdZbCb+3BFqVP7hv7NUtDm
PlxRNX63eWmmFA5zH654LFbjAt2Sggn34YZvcfjJbzulcJr7cMP76vW67SZL
wY77cMMJPW+Yx7eTQiT34YbrP6p9ClOWgjv34YZZ/if9Y9Kr4Rb34YYRcXlX
m6OqoRP34Yb7NvYxPb2uGh5zH264+/SfF8FDqqEX9+GGB1e5Jp+2rIZ47sMN
Z6vc2KYqlsBA7sMNow39tB4+lsAn7sMNQye2i76zWwKjuA83bAx6eunnGAlk
cB9u+DMqpsduewlM4T7c8GHymtdzJFVQwH24YVCi775Dj6ogkPtww/G/D5Vq
ba8CMffhhmeeUfvMgCpYyn24oceZHe9+GldBLffhho+X6+vPzxXDOu5D8fhy
g+Xtr4ihiX8/oJi/1unxwxaLYQf34YaBT2w6vlZcH2lwH26Yfue/1UcV108H
uA83TAzaf/Z5XCUYch9uOM9TLOqnuP46yX24YWEPkwOuAyrBmvtwQ3f/1GmL
NCvhEvfhhk2z9O31P1WAC/fhhrtc02eZHayA69yHG9481DN2+4gK6MB9uOGF
xAV3xuhXQCz34YY7KzdVhyaVQ3fuQ+G5/4CW9+FyeMl9uOH5kSeiu44oh/7c
hxue67lq2R2dcnjPfbihsV6mxomPZTCc+3BDpWVd7KtCyiCV+3DDSdqf5t31
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
a/Co1fl/eWaeJvohrK+nsYvn1PAshvzQwJv7Z7et+MezXeSHBkbcrwquX6uS
DSM/NMBSKr7YC48bi3kcFsZT/17HJOH7P5AfGvDULJppITw+TH5o4PDCUaEx
1TybSH5ooCDuUPPGwuu3F/M4q4FOe1f4Z//i2SfyQwPLkp279fnBs/PkhwZW
+TSt6PaNZzPJDw0s+uL55zDHMzsxj2vC9Q+bP+2AkWcl5Icw3899ZK2LeRZC
fmjgrmf1Hrs8ni0lPzTQLFyx99knnsnJDw2gYfOYolSeVZEfwvpepjE//oFn
D8kPDRyzfvQsKY5nG8gPDcyZMv3Ryec860t+aCDy+ra25Y95ZmYm+qGB+h9X
W74J5dkL8kMDdZIDYpQ3eOZHfmjg4OE2G3td5NlQ8kMDhXcmzg05zrNGYh5x
GujfPCD6UQDPEsgPYX62cm/G7+BZIPkh7H/WwS82rePZBPJDA66v0zn5Ep61
E/NI1kCH7QeOec/gWRb5oQHudLy5ywSenSM/NDCW991y2ZVnM8gPDST8PeRx
sDfPuot5fNbAw4JHJitnnhWTHxqIWnZrTxsbnt0gPzSwI7f27rvNebaE/NDA
r3cql8zaPJORHxrIij/f6cg3jn0jP4Q+aHxWfcnnWDj5oYHXJ7kbj5I5tp78
EPZD9zyHHi841of80MCMNnae3UM5VquX6IcGZtWaevvBBY49Jz80cMXxR0Da
fo75kh8aEH70XRqwiWOu5IcGOk8eHJO6gGNWYh61tJCzt7T+g4kciyc/tJC8
/d19u4EcO0R+aOHD8UkujlKOjSc/tLBo0IM+r6051lbMo6EWmhvjOv6px7FM
8kML/bqsSfPNM7Gz5IcWqn9EzRj00MS8yA8t3Azex8n3mpgtfeBMCxZs0hm3
aSZWRH5oYf+kKv9zMhMLJj+0EFO1J6tLbRNbTH5oYaBlQNTHpAomJT+0YPb3
zhy8VMG+kh9aSK0oqPNlRQULIz+0cMJsTIqqXwVbR35oIWWyi3VM4wrWm/zQ
wrYW2nYBmeXsH/mhhSeNHrY/dLWcRZMfWsg7smBp4opytpP80IIzX7PQrU85
G0J+aMEyxm5BI4tyZinmodLCVM99rxomGNl78kMLVanvS12PG9lB8kML67os
1b2dZmTjyA8tvPuSYBNoZ2RtxDxAC8t7S1qfN5axDPJDC/lbd+77dreMnSE/
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
PiaRHzq4VWf28axl+XiU/NCBQ87aEP5pPk4mP3RQfHFN3NaGBdhBzCNaB7+P
qH/5TSjAL+SH8P3ffvave7EAL5IfwvpI2vjgu7EAZ5MfOmjwz2LGFE0h2ot5
vNVB3fBVHk4+hVhGfgj5u/eNWhZXiLfID2F/Mw8I6tyiCJeTH8L4jS5S3dQi
VJIfOrhf2tzn8cUi/EF+6GBnyJKoyyVF+Ij8EObT+KDdV+di3ER+CPO52/nJ
Ze9iBPJDBw/3tcsMf1SMtcU/2MjTQXydBzd7/SvGWPJDB0dSRi/9078E/ckP
HZiWTZlm71uCw8kPHdSbPu3Z7Vcl2ETMo0LoT1zXT/sblmIi+SGst4RLNbHD
SvEI+aGDQ0k9V4/dW4qTyA8dyM+OOq54W4rWYh4/dSBZ3jhytmUZfiY/dGBd
9WpgsWsZXiA/hOtpPCEgwq8MZ5Efejh5xNIs7UUZ9hDzMNdDoumVRX8zI5aS
H3oYu8+s+ffeRrxJfujh9uCXgZVrjLiM/NDD74vJddX3jKggP/RwkDtaEFlm
xO/khx4mjNU+2GNbjhHkhx66Xrn+56R7OW4kP/Tg0CdkYFlgOTLyQw/WxzK7
bIgrR/NToh96OJMR1t21VgXGkB96aDcguHysqgJ3kR96WDC3bduT8ytwGPmh
h8FeM13bn6nAxmIe3YTnT67qlRRfgR/IDz2sSRq28LmZCQ+TH3o4dfXP0xK5
CSeSH3qouyIyc+BME7YX83DSw5Xba7clHTLhJ/JDD1En+nsffmbC8+SHHkpn
LdvoazLhTPJDD7zTO/m4xhzaiXlo9dByRaLPRlsOS8gPPdS2mXXMoOcwhPzQ
Q5V0eO6BURwuJT+E8UjrJYvnscnJDz18qInO/rOWwyryQw+7Vyza0nQfhw/J
Dz3YlV/rGXGeww3khx4SPn2eWhXKYV/yQw+vZNojL2I5NHsh+qGHlHtXJtql
c/iC/NDDhbG5PdqXcehHfujh4/zV+8795XAo+aGHmo+Pmoc14rGRmMdkPVi0
yxro0YnHBPJDmO+Jn0IPO/EYSH7ooYHrqcqpfXmcQH7oYVXb+KP3RvDYTsxj
ph7eS5rpjrvzmEV+6OFXbuYqq4U8niM/9NBJEVDceB2PM8gPPawbsER1zpfH
7mIeS4TxFt/49ySQx2LyQ5jvJjMr5p7n8Qb5oYf6nc7eOBfC4xLyQw/7pJPy
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
mR0n/xAxYLvzx1cpyf/OX6orojbuxZiG7ilsMvmHiHrRY9oF2KaygeQfIjYY
7TE1Rf8Ta03+IaJhvy9WUz58YjVyHg1FPC8cz7bYn8YS6bwQEc1inh+bpUpn
z8k/RAzvXeWU9i2dnSP/EBEt9ePuPMpgW8g/RCxwn53HVmSymeQfIrYd/Kyy
Y9csNpz8Q8Tj7bwUz5Oz/n8+lYjv9+w3OXw0m/2Su1MDEcOq4hw/ds1hGXRe
Fb/+ob4bS1xy2BvyD/732vYhHok57Cr5h4in7m5pVdgvl+0i/xCx+5SK1uxA
LltA/iFidf60nb2yc5ma/EPEYtMV+l2G5jFT8g/+/w9fbL9+PI/pkX+IWL8k
6ohPYR4roPOuRNwc3K92hCL/3/ldJrx8D68+N+l0PrtF/sHL44xN16LifOZG
/iHinpgty34rCtgK8g8Rn00fNuzkqQI2hvxDxEGfMpZfKyxgFuQfIv79YRxh
PryQNSP/EPGteysb86OFrILOyxJxds34s5ezClmUnIe5iCOysvz2DihiD8g/
RGzus/xA2p4idoL8Q0TnLj3LrscX/TvfrI+IbrZ1ohJMi5kt+YeIk2ZfNnHc
UMysyD9E9G4wP3rz22LWhvxDRPupB5PyWpawz3Reo4hvflr3ezq3hCXJeQwU
sZH/poRCnxLmR/4h4syzth+3fith58k/RCxsnWm4SixlW8k/RDQYIrzzP17K
ZpF/8Pdvjc6f/6mUjSD/4PXN8+/eBd3L/p3/NlzEvKMnX/mvLmO/aXshEb3e
uHovfl7GMmm7ARFv64YvXlRbxgLJP0QccGCV4RNNObtG/iFi6TuxbPKRcrab
/EPELl3WNFbGlbOF5B8ilvVr5+XUvoIJ5B8i1gbUVn+xr2DdyT94+V90682u
VrD65B8ibp8ceDw6t4IVynn8J2KfD4sXm/ao/Hc+3igRP4b9qn6xtJLdJv8Q
8Yk6Zc/JW5XsIPmHiEmPuzjcLqpkK8k/RNzaM6/e755VbCz5h4hWozp6H11S
xfqQf4iYoXzzZIZnFWtO/sH/vib01OzsKlYp5zFZxNR2w3zPGVezaDo/TMRd
icM3NZpRzR6Sf/Dy/9ti/v1T1ewk+YeIKwstCvdFVP87P3CaiN8dPcT/5Of/
5B8i52ubpYs6a9kg8g8R581q79FuhJa1Jf8QMXP6mgHzp2nZFzkPexH3WZ5Y
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
zwtSt5hekFkf8ocW833qL37nLbNG5A8t+htMxD/XZFah9Mjm+6fT+Do3b8vs
o9Ijh88vOXtj9D2ZPSR/aHGYvfX2Rf4yO0n+4Pdf2u3fxicyW0P+0OIXr/9y
TYJkZk/+0GLcspKWdZ/JzIb8oUWr1jn79jyXWUvyB98/Hr3tsTlYZt/oH5jx
/elbsSGfv05SepTx673zIzWGv35K/uDra6ZVngV/fZ78ocVEs3EN/vD330L+
0OK26bOn6p7KbBb5g6/fPTrFNAmU2QjyhxanrHu8bvxjmbUjf/DnM/P+QpOH
MvtrofiDn68zu9+28pNZptKjSouPPe46JN+UWQj5g593u447WeUrMx/yB1/P
HrkuO35JZu7kD36+tO1pcsVTZgvJH1o80iN9V8+TMhtH/tCi8GF1wz6HZNaN
/KHFPzZj3t90l1lt8gc/D4W2M3ptkVmh0qO6DkfZqP0arJHZG6VHDR1u2LC2
v+wks9vkDx3+mPMmcNpcmR0if+hw3cTULQOmymwF+UOHneIfBB/SycyW/KFD
Tb3A4Nkgs77kDx1qG0WH3B4gs8bkDx3aqPuarrGQWaXSowF//0vHagS2ldkn
pUdDfj3n/qaubyQzf/KHDgsWGyX/fxI7Rf7Q4bQ49FlukNha8ocOd3TvOOpK
jsSmkD90GJHfpYd9nMQGkj90GHVgWMjuMImZkT90aN7i7nLrxxKrUnq01GGL
882Pz/WVWLLSo5UO99+ff67BSYk9I3/o8DP7Ig/aIbEL5A8dylPqm+U4S2wr
+UOH9eGDayMHic0mf+iwzkPNtmcqiY0kf+iwZEROYIG1xNqTP3S4JEbwOtte
Yv/+Kv7QYbtFcx5E1pNYltKjkw53/rVbv0U2stfkD/79XTZv8M8wMl/yhw7X
HFw1yvmNke0mf+hwnkfVrLv+RraI/KFD9bua81ddMDKB/KHDyk4BOU/djaw7
+UOHk1TjNx9YbmR1yB86nPLRJiRjkpEVKT1667DI3jj1xRAji1Z69NHh0dUW
aZ06GNkd8ocOnV8eqWpSy8gOkz902NSnfML+EgNzJn/oML9z1xMHPhrYePKH
Do9cMF1i+sTA+pE/dNhn0m333ucMrAn5Q4exjT6c/7DVwPRKj4E67o8VC/46
GthnpcdgHfqWLPAIHm1gj8gfOrQoPmCs3dXATpM/dLh3qM+g7FoGto78ocNz
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
YxPW8xbjztvg874S/gP3U0/raXNxPeyIx2aJ27jOSzfH9fIQ/kPiz+17ONvg
epoTD8wLDm68fwXXezst31bcz7fq99uDPLTCf0h8xtj7LeJLVTaLeGDe+jl2
9yHkGSf8h8S7mZVe8Ube/xGPHRJ/n+B8qy/uh2fCf0j8zqjy2G64X9oSj50S
36bNnXEc99NZ4T+wX51fdmoq7rdqKvkPiSfF3PU5cVdlG4jHbuxXWu6p4oD7
tUD4D5w/RgcnM9zPU+hx90h815b1O/x2quy98B8SN/+1bazHapUNIB6YH3Xb
fbl0rsq8hf/A/mKZGualUVlL4rFf4rqn9bsmDVHZMeKBuf3QuF4re6msQivy
H3j+mGnIhjYqW0k8MJv/+RtZ0kBlmcJ/4PNsatMjroLKZOJxUOJpR6aVti01
shDhPyR+uJ68oeCLkfUiHockvqRkwYgW4UZ2W/gPrLeWXmlvfYzMknhg3jk/
NSDRw8gOEI8jWH9nLJw/44CR/RD+Q+LX0qbMm7zKyNyIB+ZDT92Ghk01sq/C
f2D/YlFy4bazkY0mHsfxfjL/pP9pZ2Svhf/AfiT6flGwhZF1JR4nsB/9fKK5
2W8Duyr8h8Q/WPdv+zzTwOoRj5MSd2ifeyc9wsB2Eo9TEo9/N3XkrocGphP+
A/uN3oW+l04Z2BzicRrrp8fMc102GNgn4T8kPiCz5tU+0wxsCPHAPKKr947X
zMCeC/8hccOS7foAGwNrTzzOYf160sHHsYqBnRf+A++TfS83dc3TsxrE47zE
R7b1Mr8RoWebiAfm+5cS7E/d07Mi4T/w65/cHpkd1LNpxOOixD2OquPKF+lZ
tPAfuP5OmqwZI/TMiXhcknhOwqP+4zro2SPhPyRetnFd18CqetaaeGBOaj31
9NNsHTsh/Af2G81Gj+gUpGNmw8l/4HlwX2bX9qqOrSYemB1fNGl9a7OOZQv/
gf3owqgaDybqmIZ4XJP465o94hwddCxM+A/sl5PrzBttrmOOxOM68sz+70lB
fjm7K/wHft6aEXfrBZczK+JxQ+LGpMs86HI5O0g8bkpcmRa14t/acvZL+A+J
90ue1TNybDlbQjw8sX6vnuPeun05SxH+Q+IF8H5F1X9aNpZ4YJ4+ZHfp5s9a
BsJ/YP3InVxjl7eWdScedyT+dkCF91Z7tOy68B8S//6lAneeomUNiMddiZvt
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
G0wbPUHlscJ/YH83rQt0WKjyscQjBZ+nnVdK9maVPxf+Q2bOPU4PDjms8q7E
IxX7bZ2VgyyvqPyi8B+4P90YM/3WI5XXIB5pMuu037Gy3yeVuxKPdJk95MO/
VYpXebHwHzIb12aU9Zt8lc8nHhkyG+Pd+mnMb5V/F/4D982Nvrnja5j5COKB
ueeA6BnNmpv5Q+E/ZJYS/8PTrpuZtyMe2bgfuFewCx9s5qeF/5DZ7NnFZQ/s
zLxyG/IfWM9N52tKNGa+mXhg3vdA89t9oZnnCP+B+7tv9fPOjmY+g3jk4bzY
8iv2vbOZhwr/gfeVd0mrl7uZuQ3xyJeZeU1AjaVHzfyO8B8yu3Lv4fpXZ828
OfHA3CNu5axV3mZ+lHgUyqwK+B7c4Gvm/4T/wN//vvNThL+ZryUemN0fKz8P
PDHzVOE/8P7xNNnz3Eszn0o8SvB+cL1ezN+3Zh4k/IfMrroPX/ryo5n3JR5a
vA+GVO78PdTMbwj/gfeLflP/DAkz8/+IRyme/5TFIf/CzdydeOhktlgXsalx
pJmrwn/I7MhcN92BKDNfTjz0Mju+7HHvKT/MPF74D9zvOpg6rsE8nnhg5tE9
v6fj778U/gPnUzPPbv74et2Jh0lmE9qHDv3+3cwvCf+B9eN7zWrcNzOvRTxU
vB/8WHSj8Rcz30k8ME9serERCzZzrfAfMquVaL3tVZCZLyQeZTL782dh1onX
Zh4p/Aeev0UvNr8KNPORxOMXzo9RLaawB2b+WPgP3N/XvTnX5LaZdyAemF1W
dXKecM3Mzwr/IbNtm7u3jr5g5lXHk//A+5KzMejpCTN3Jh6Y53xWz2ndzTxP
+A/ct/OMCXu2m/ks4lFOYe1q/PviuN7Mvwj/obDLZ5fff+Bg5kOJh4XCbrrE
hE2aaeb3hP9Q2JBtvZxGTzTzlsSjvMI62l7RnwEzPy78h8IKXc5fHd7bzC02
kv9QWNzjkNjRbcx8PfGoqLDavVobbtY183ThPxT26cznGQvLm/l04oHZ50yP
1c5alX8Q/kNhjjOzzxckq7w/8aiisJ/5n+xfflW5j/AfCqvgHPU357nKGxGP
qgpTt7PWG3xUfoB4YG4UubL3LA+Vlwn/obBvl5PvXXFV+UriYamwWtbjm49Z
rvJE4T8Utv35zooTpql8IvGorrA1hetK7g9R+WvhP/Dv93dbt6m9ynsSD8ym
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
I5sGXw9P/oH/Xnz0Lg==
     "]]}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwcm3c81t/7xyVEJGVkj+yRvde5uLlJaJCEJqGMMtJUlKLxkZAGGSEjRUKF
nFCorLJJ9r7v+23v8bu/v7/ej/N4v891rnNd59yv5+uPW+L0+UNnGBkYGHhY
GRj+99z9aC01UbTceMet/3+WfWSVF/PxTEL93/rcFTyScPnld2lynrnoZa4i
t6hrLq5S9fNg8cTo+bVV6x47jGse/rGc82hAh6eiKeG7GvBkGMfI5ezfKNd5
S72p328cXJkrv5DchGyYP1yPPNSE42D+3cx/bUilwX7yC0sb/qF/+zPFowf1
a5qMC8v/w28MuW9o5fYiV7mwlvjeHjzV5ZYUmN2HvvigUe2aXnxDkLV/OnkA
mackhRR59eNvn49uVk8YRGOKHgKj2gN469E3Un5Ph5CKooztlbUB/PSprQfx
3wj6ostzcfXaEP6nnRyhfG8Uffm7YR2tMYylWqeyfMLG0H+n7r1qGBrGeTxP
KBNXJ9DmNaXzcXqjeP7D8DbFIApabDfjq+8cxUZ2uirn/KgI+LPesQWN4Z+P
u/xGPQjkvLkge/H5OI54FvcjRm0SydmeqzyzewIreSInjdxJNCx0xdIqbQI3
6IyO/1GaQj8d9GbuilGw/5bH1/yzpxCPLXnXegwF87bpceyUm0bffr3KitlE
xZ9e9ye8T59GjllXLPZ4UvG6uWbZZPIMSieVR7CL03AKb7dtlOgsIh8OGpb0
o2GzoTs9KgmzaPZsW/1IMQ2PFihfaBCYQwKO8zfM12j4QVgbw/mnc4h4u7ai
pEtgZfuQx5y886ggn21XlBeB/0jK734XPY9SMqMvnH5K4Iszv/NtuBaQXLDH
teclBOavvEqi/reAelV0byq1E7gkWrL5IfsiOm+X+4KHSuDjp2vdlO4tIiFZ
we/WywTepH5x7hfLEmrqT2z4vUHgtE2id73ClhDbBIP7qzUCW/yu4mNnXEYc
X6Y58QyBx5PPZ2TfXEbGIXOKCv0EjrzAr2u1towGSVWLIzUEVoPymrGrK2iM
4+j99QwCN28/d/Te4gq6NH2q7uJNAl/u2TkuF7SKnqZ6hx3ZT2Ch3JKrNTOr
KPjXLfPcXQQuu+HG7um3hjyGTl26307Dp2y3JWwh1tCkoont4mMaZhItUsrw
Xke/z8nVsJnRcAb1+Bfy+Dp6G9ue+ZtGxVZfttgOe2wgYQGLi27RVKy2cXqO
b3IDybVAsIwMFT8UP1EvacgA473f6zPfU3Dg6eKL9t8YwHc59VJg3gT23Oz5
w5t1EwTdMnvGIjWBXdJ4Re5YbwJPC/eQ8Ufj2Gz4wrfC5k1Qna19/uDBMawb
Lspfz88IZOuOROWMUawkV+s17MIIK7dP1e+YH8Hc52S5dw0xQvAr+9iCm8O4
n9p96vLcZkhx2VbqYjmAWyMfFEbpMYHc2kiStXc//qmix5YVzAQC2TEdzA/6
cL5fbF4HMzOwCa77ZAX04NA5qw19Pha4GJQq7lrThsXXPiasabNCYNG7V3r7
v2CexDOTvNdYoa//V1FlawFmRdxmypgVaGz3dRrzMjER4jtx3IINXBmpd8Pf
R6MyJmn9r0e2gnx/LNVnbyXKT//zX3v8Vrhae8bqybVq9Joc0jfZsxWYaTnn
d2X8QpERXRESnuwg5yw+Vzz9Gx3jiG67dZkDcq2P3HhKdKADb5FifCkHxAgy
hnV2dyEzW+qNDwzb4OGphmL9b91IKcpSZjBiG7zmy7B4WtKLxNXmr6zWboMq
ZCfgnNKHeP6k1vHs4ATxw7tzJW71o1XujUDz55yQKvJFvVhjEE0W5NQc6+YE
J4cw7x1MQ2jwsJNwkMR2uFcvKh1UP4R+PS2sfJ21HaycFz+GHRhBZbquuzB1
OyxIKR4q3zKKOrwjCif4ueCT2eatap9GUd02bTamY1zg6+rOO7h5HP3Zt/NZ
/XUuWJeTWPwaO47a79FknidwgdjbGgqn2AT6V/2z0LWUC6xZ8prevJpAg8wZ
Zsp/uaAZmjQuiVHQOOl20+IKF7z27TQ99ISCJkNPnK4U2gE/AvMpYkxUtLq2
K8TReQd86bhxVbaWihgNZzklr+2A4MXtTKrSNMR6tfEl9cUOuFDQfrMmiIY4
P+UofSqmj4u21f79SkPc8xEltzp3wDfztBSnzQTi1zxjZbO8A96VNj9TMyaQ
qL9Jxy7BnXDji8weOz8CSeWJePbr7YQYOZby/AQCKdCW5nOO7oRNUz3J5l8J
pKrUeufSlZ1gyl7FvPkvgbTP5fOYPt8Jag3Pdw0SBDLMjEzl+LwTwsxKaQMr
BDIdPqfe1r4TdhGkJxsbBLKUsihPWdwJWfUft2ivEsj2tOQBb35uaHDdrxUx
SSD75I1/2rrc4JH9cWORHv/ovy6fTY7csIP/mP5/5QQ6Lvxp9dclboj7pZ+1
L5FAbk6xD+KecsN5XZUNwwACnXt2QfDUR26gfmzt8gICXWi1zlJs44Yr4ZSa
QWYCBfHI687Pc8PdDnWdokoaun6IuforHw8klPZfnbxCQ7ei+g4/0OaBB5/T
qtPlaCii/svgYQcekJXlVhpvoKJIjhcB4kE8cGR/9cOm81QUaxXEOPGEB4iX
04lXWKkoqUpZPKSFB2YVBuJdpSgojYk912qOB3TCFep6MiZQtumIES8vLxR/
26pyT2oCFZUlOWfb88LLTPLPYbZxVLp6bTwwkBdsnB7hXv8xVKHveAXF8kKQ
D591TMsoqi/ietrcxAt/HwdSyiJG0NC70D/rh/iguebQltrsQTROOXbqhz8f
/OLetldoeABNKuhPxkTzQd6drLehwgNo9fX0Nvk/fMDeWrjhfI1+f5Jc99od
3AUSrqxcq9v+ItNH5l8z9vODyORRIT2hnyjEqiDrjy8/RNaXrPRaVKEyZsmY
tf/44eN8rjacr0D61xnc7Wr5IWjT4/tPXQuRxtkS9g1LAehPYbj4OiQVS5HU
jjiYCkLQeIHVbM1vfHo9CUJPCUKibs6fhvQmnPyZUyEnRBCSRnQfMd5owcKq
lNVNWBBCpiIn34l2YF6RjFdvDYQg7Xta34utvdi+nfdhu5MQrFY3y3r19uLo
mLCLm68KQdNDw279/D7MufW05dFPQsAcmxS5c+8AZlkQpjFpCYPkfBNvgPEw
Nst/0KZiLww/F0i3WYlhfMtn+atTgDAsX7iasefFCF4faIvJey8Ml0mV2+/2
jGLDJHJwV6Mw2Ol7KnlfGcNXnQrdWSbp79vMKi22jeOFxmg9F2URYFoJeGJP
5wPth5skw21EYPL6fhGz1AkcaHGBI99bBBZN2WrSRSg4n7Fn7u8DEYhan33k
8piCJ7/Y9Gx5IwKFY3uYbNYpWPlKaY36TxFgzefff8yNir01FfOPjYnAaudt
w4uVVJxNPI+PYBUFkDyDbgjReSCb9c4HWVEYjFK/5OpNwzLul3z/kUUhuqel
YEcRDbtJDB9hcxcFKym9m5cWafjVX3sTzTuiEBjtteuOBoF7n1YqnEgThXz3
Y9eVPAgsaqfOc79SFOp51H1PxRDYhTNlraBfFLgJWT+BTwR+8WP7SM8mMaiL
42nc10LgjrAbjVslxGAm8WLi1DidJ4D6WQvEIGGAp5h5icAOK86pJ0+IQao6
1IbReSG26OfDBzfE4NpKjJXPOp1P/PSCil6KgWqr4yU8R2CuPZkn+krF4PSv
gFPBQwS2HeXby/FXDBZOjg1k1xH4YeoddZ0VMZC+N5Nm847AZ1SWt6ltEwfb
N9k8PuEEtu4KT+cXFYfRdZHlWnsCa4bzGjGoiIMpU1WRrwCBhTVSm0eQOIRJ
JXedbqHzQY+qd8MBcSB44s6URtAw5X7Z5o+nxKHaR+1TlAYNN2lbxyf6i8Mp
nPp0oYWKX0V6/PSJFYfx9syaETrP3defO3U4XRxYWyfJOQ8o2G/41pJhkTj8
5Vh4cWUbBYNxohxHuzjskjjX8GVpHMuNK36dGRWHwpSF5FC3ccwV9/lI15I4
bCVx8I5Wj+EeavPdbCEJOLmG39tcGcVVz0+LRitJgMn8X93s6hH8znyy8IqR
BHjN+jK7bR/BN16yD1mekIC3zu5jZQ+GsLCNKWnklQSkyfsEiRn3Y6alhs76
DxKQsCJt736sD0+kHfMv+iYB5/HukuZLvbh49XLKnWEJOO0+Z29n3I2P5uRu
SCrshgj0bpWJfh/B0egpu8FuuDXoLBsb3ITlmH4pz+zbDdt+v9304dJvvOg8
fKzCZzc4P9ntVFXyE8exi5SefL8bWMvv4xTWAtx07v7ll7qSQLazP09Or0bF
fPxcd/ZKQmvsi6DtP36hVxXpGd5OknBwsDVl11AD8hcsbzW4Lgk2lT4NmQzN
iOvngmYnloTT7J8tbrZ0ocWLd2rLGyWhmTzKlPqpG/VIcLtl9UnCk4ETCddi
etC7K8oxlzdLQaKa2rDI0z5kI39mis9CCtpK23045wbR8oOLJd0OUpCDkrDh
+yGUSbtzJ81dCi7PXj0p7TmMmApeC6jflYIT+QpcF7+PoHy+jwOLT6TgJprS
DfcaRSeuVL/F6VLgfsZ+KYt9DBUbj5rYfJcCkXXzbeF648gzZZGdp0UKWlLm
GBerxhEvE1tr56AUsAsdHR62mUAV7gLJKbNS0GBJTKjXT6ALP+TPeTJJAzOH
6FCpBQWJKulrqvBIQ/K5KguPYgr6FWm1PicpDX9D/LX4ZKhIxt4r+jZJGvzE
7hYLjlJRc9E1Fys7aahs0VAwMaahUIGHMjtcpUE5fqR32380pHw9YbLNXxr+
ZZd+9Gmmob//cooTb0kDj3T94f08BLpv8iXsTLQ0HHb31Uy1JpBuWp2t0itp
GOKkvnIOJtAwyz/+mffSENYw/sP7NYFiztL6P5fT81PSf1dbTSCoXc8J+S0N
P8KsNQL6CERT3n7Joo/+faWCiNMMgRIei5lwTklDtfnSjuA1AlnNqrC3MMjA
4mOW+A46Dyw6QEs8lwz4p7hJn18mUPrnA0mnxWXgWhwHI6IS6JDwqbPyqjLQ
1fLwjHU7gRhu+mlMIhkQfGbikVBCoHd9oWtF+2Xg225+Bu2ndN9mFl0dfEIG
vs//Zd3tRSDWjFePzc7LgOoxXl0vHQIVsX1wZr8pA2fa3cREV2nIzbtS+k+k
DFwVuim39zMN7WhoIp4l0vMzz3i86ktDZWqDn0+8k4FOoy9nrURoyDt29rZM
mQw8E+l8QP5GRYILTLbUOhnQrr7+gsWNiqqP8vIXdMvAvRqL5ZRVCtotpp1j
siYDRvu2jjbyU1BjKDmIdZssyDF/aI5PmEA3Bh2gQVgW7H39KvIEJlBH1qVm
F0NZOH3gV6gewzi6yxGRKGktC9/YJEqnzo4hzfPPPMedZUE78uSn63WjKErz
8+qla7JwlRQZkXZrBJHxslRMsSy4pkn7lmUNolkJduLoT1l4QhqoDaPzQEqY
0GfxTlm4x8S5GChK54G9hjbvlmTp9Zy3iwvpQ/nNwRd/6MrB1AX2PcMyf1Hm
HbfT/XvlYPWioH2KTidK1N63f8VJDoYnNvJ7oR3df8YvvydYDkoMdgoooWbk
6vLhb1S5HGwWHdmtPV+NeAZHSY5W8vAmpMpCVL4Ab33SoOrnLA/Lx5LsQt6U
YgZykch9b3lQeHY6tyO6AlMybi+URMrDWTvZ+smVn/i7l+gbsSZ50BOOyhEv
aMGlwszPdAfl4XisqEnKhzacXzcRdnBOHnLysnqP5XTgRJXPx2/vUoB+sQPb
bMK7cdCM3c4RZwXIMuT7M3y2H3un6W9seCvAcdOVffPkAXz6sASF/4YCaJ0M
Eb8jOohtP9K+WyUrwELBthNKpUPYzLMl3/W9AhDpYkX1ocNYX6A06XoFfb7K
c1cmkxEse+3elXeDCrD85Pnhg29GsajSBffqOQUY2ZajsslhDPN0O9j1sijC
MajIvLg0hhmQ1J6d8oqQfpVzbkZ+As8TWwUV9RXB9/Bi9+uiCUxJnmIx26cI
xaXC2RcMKLidEfde9FEE2e+j8R+UqLj+Q3pd5A1F6Ej6PTDyjIq/uT0sznik
CKVYzCNrlYqLeQMyviYrgvPfIzldR2j4fdXR2I73ihBXeumNWzYNZ16C0OkK
Reh2d2tRmqXhRDlZX/ZmRbDNShUU06Lrc8c2Z6khRRDjPDEl50Pg+/dnLYzm
FWHznXdO+gkEDjHo0nTYogRbkfyIeQWBgyjlEuf5lUD9fEkx9BDY+2UmZ4S8
Etxqw4920/3/adtHK8n6SiABLp+H1gjsuHFx9PM+JehRFJcOp/OAbZ5Lyx8X
JeiwG3JmWSSw2SlSxYSPEghmT4WeGSGwwU6FXKabShDR4eSQRdf/+k1OP+oe
KYH7oPTVqDcEPjl1byAuWQmcOpMYy0MIPN37ee3EeyXw9Gb5SLYhcFjj2C75
CiX4WcJRrrKDwHxfBdSn/yiBctNc5sNaGs7K3WtdMqAEJGPWgxdu0ui8d8U9
bFYJeBhcJgl5Gq6PzAqxYd4DG4eZtknWUvHJGx0v+Pj2wJH+uIuS7lQ87cNW
2COzB+pYdupvW6TgXTZnx/ws90B3dJsyPxMFZxs+32xwdA8UhiUHX78xgQ2V
fogwndsDr6vaDh2YGscn2eUPxT3YA1uapRYGvo7h6WVH7xMJe0D25Y3wBZEx
HDYecVfu7R7ISqlk2x04irN+jBYX1+8Bo5A96Zc5RvB0eKZkzw5l4B022lM8
PYDDLrUbZe5WBu9UxjvMogOYz4PV0U9DGc4XsrpymvVjA7Lnw82HlUGuSnBm
b2gvDmOSm5N9pgykgRulTyI7MN/ske1TmcrgetjvRkFiG84cCJcv/qwMSWnH
0uwyW3Bdxcgx6y5luJGWm2iU/RvzhWZUXRBVASXbSZ+rkxU4a03m2ec0FWhM
fDKRtv0LMqQ65N8qVAHGphux83kVqP7v3dp9VSrQ7ZOvP99chaZLhhn+jaiA
sO6q7QprAxI1atIM5VWFx0zJ/3WGtKERzYnyIRFVuB4twyfp14HylDbvt5JR
BdXET++8nLqQqbDGWW4dVUhkcsoZ5O1BHivRL9MdVUE39X2w5I4BFGtLqbxy
UhUG+HccY2ofQF9TzMdtPFVhzoNDQvrFIOK3XNSev6QKm3JPp/hsH0Zm8QeP
/bypCj/Grm4yrBhGF2jZtxPDVeH7v22pT8+PoJrYY43kp6rgHWDMeOjzKJod
KZoXTFIF/m0tjacOjyFxAy4R4rUqLOR/4T01MYYu91WcfVqkCuPHxLqTmCZQ
mqZwlFeZKhiE1bAnhE+gxvCLRahKFS5sNxXYxERB8spym0dbVEHo2w7bqFEK
cggNlS/tVgWzINey2weo6FZz5/6oIVUoqHyS4/+eit7Jaga5UVXhvbXmoDk7
DXVe/S9Bd04V/v49OzhyjIZY6ocrONZUYUNXZsgsi4bUJWCsl0kNyj07u6yo
NHQ88Pn2Qg412Or08+aYPJ0Hqqe17vGoQUDLtM3OE3S9FLR2OSasBo3Ntx5+
ekigfp/0W2pSarDhPmLzO59AnOXrmcxKaqDlfjbA7jeB9HkcGzo01OD+SZdc
nVECuXu8n3troAYDSv/uXl4gUHTxVuFbJDVQLpex20nX/7JtbqYO+9TgwpKH
6Wb6eOLkF08FOzWQETRy3Ef/nr+A79G6kxqgmSwfygiBzLZcKPxzWg2oqVmq
4410f+/0o+v1OTU4IGgjaUXPJ+HtbsZr/mrAf+fsC256vjUM1+X2X1WDli1t
JfuPE2jWrsVW8pYaPBKB62z0/YpnKF9cuKcGrSq3EmwoNGS9HB7/67EaMGxO
fq2QSUOXbfrKk56rwZd88nieCw2lJeuPBqSoAfAMX55mo6HGmRhOyyw1sPM5
JrE5j4pWyVRN4fdqcOKekdeiLRXJvSA7T35SA7b9KY/HhinInpoU+u2rGpjv
TAwmLlHQ25hD9d6NaiDY6vsw/c4E6hx+MwvtarAkkpP7iHECsegzC/H2qsGu
U/4PGK+Mo+O9Hz2+EGqwrvgpY4vdGOLcI7KJc7s6CO05rByOh5F+SJBsP586
eP5TKEzlGEbuTQ02RaLqcKPEfv6y/RAqu3LrxXFl+pj/iv5G8wA6XzWikWuj
Dvxvb3Y+TexFXyHHS8lBHQSDhTT3e/YgrpILqVnH1cHY5GrY0/vdKC93aWfa
eXWIExFrKCvqQNPP2KefPVaHrf8JCGeW/kZBXip5t1rUYU/F1UNS9Y9Q1dDM
yEa3Oqxsafp0Zls03nXyk1jwsDok1Tq7uq1n4U/2Jo8uLajDWddv9eFjX/CS
kZ2vt4AGsJ9lI8mkNuDrXJeUHI5pwMKh319Jd3tw7X0Dt6YzGpAs9cXY8m0v
FmFmSDjgqwH7VnuHSqP7cNlSBPu+mxrwmvuvQJTtAOYMtCHVhGuAnr7uZz+p
QXyCtuOaeZQGrOY8HcuYHcQMAy/GUYoG/FW8oyt/exgfOHZi95csDbhmZaX4
P31PaZN00s/XAJUK7kt2iyPYtDbnh2alBvxsexp/69AYjib7bcr/pQEddz8x
bpobw/1ftfRUmjXA6fiuFdWocXy7sCxTfkgDgvuHNxZzJ3Czyu3e11QNuCCw
hx00KVgq24Jfal4DJlLlS+PyKDhQiuNAyroGhFsrcXdK0fU9sTFcdIsm2GWc
dxiLomIegSc4frsmlBrtF3o9S8VnYo4u8PNrwimHNtvZ/TRctE1UJU5cE1qJ
N0bFr2iYJaLfnVteE7QLzeJ7KTTswJiRGKWmCRwD1yIOKRM447pX6zZ9TfhD
8n2+5k7gxXkVzgemmjCekN35O47Aln6z5qz7NOEmX25L+RcCP5v4FHzHThNi
nT7EVnQReOxMcCGjiyYoOZWl/5oksH6vCfWmmya4dbKItK3S+cGJRXrNWxPE
RRPj+uh6b6zKMT8WqAmHu45pPF0m8BTzzurW65qgId97PZBK4LSuXc8qwzTB
p48n53o7nRfei5zNe6hJ9wMNQwUlBGYPl9R/GasJbRFhelJPCVzmIs9+P4Ge
P/ovqekcgf3VVf4GpWmCoMbcfJ02gaVZtd665mjCzu0NjOIrNNzerX/jQIEm
yBtwe7R/pOGHH2C/UakmkDxY07f40DC6RxZX+KYJSZt0dn0VpOHp49ZTfLWa
wBszSuEtp+LXmocqNjdrgoSIprTYSSo+utUxZrJLE7zynt2bWaDgr4WuWj8n
NKGLhOrO7KT388FZlo8zmmBo1bFq8GQCy54635a6ogkBtV4TNjsmcCTHtSvB
7FpgayInnEk/Pyb9IVbnuLWAaO+a0To+hmc/3hU6IqQFs9r30u5/HcXOrtFf
VBW1YPpc7nepgBHMqfcsUkRDC9r27mIorRzGFZyJJ7YaaIFDBDnmC+cwlivO
2jRopQW1DOn5+bGDeJ6r3PzpOS3wPXNV6/GZPpw9XMUX5q8FOWcr019G9uJj
pbUjF65qQcKy+ENNjx78zaP9ntV9LfjEcnDw0mAXflxG1K1lacEH/5WugKhm
rOQt6uA2pgUzwaniAocKcK+JlOzBKS04a8/Pv6UpE8fsUlg0WtKCIVpix72F
x3i5QuvFLjZtUOfaG3258DWqEbD591NOG7QoZK5wn+/Itfqau5qnNjya37wj
t7MDuRnK2M6f14ZAnSbRc4ldyP19o1bJJW2QPWxi+Mq5G3nGSzObh2vDuTOk
woCTvcj3fEOq42ttaHj3Yn/XkwF0YfDKA5F39Hg7SiPEHQeR31GpgP5CbUjc
bNz7nHcIBZKumHp/14bwt+c9LoUOo6u7JPtuDmpD+xl9AQv+MXT9YV2NGUUb
OvgPdkXmjqHgTZfz2Ga1wV9A3bEGxlHIRO3NmM06YHk7Y/O9AxPo1slLHo7s
OrC48UC8ke7vb7dI7Bfh1oFb7XMDEWQKuouDRDN268CewhNsvRJUFKEpweKt
oAOlNmyFVneo6F7WL6qqug6U3Cl9jfuo6L5oUMucng4gFb2d8jo09DBG/Eux
iQ5s0wxo9r9DQ5Gsv9Ju7tWBmzMHL9+vpaFHwRcfmh3Ugd+mWw1OcBAoalos
kO2oDkyz7uTqN6Prr8dP5/qTOkAKz0ljDiJQ7N9AUoynDjhf4XQtSyLQk4Ni
io4XdEDNVuAiYwWB4qp+7BS5rAN1LTlVP/4S6JlB4HLfTR040Ra5hXOSQC/y
RPtfh+sAo8hozs8VAsVL//jh9YgeP95hepWu5wkvAt6rPtWB4oDYztRVAiVu
F30+l6gDx998UPk6RaDksJqQ4tc6EHGXdsu+h0ApS/6eN9/pQMcTDqUz3wn0
ylfkgFmRDgQ/c7FcTCVQ2kC1DluZDnzyI33mvUag147+YvXfdSAv4uTuaisC
ZdQJb4mpo9eb0XJkFzeBMk2raUdadKDpRJMcbzMNZX/0axXu1gEOcbaKuv9o
KEdJuKxvUAeYpRPMDgENvU2pSn9Nodcje/NcwQSdr/j8/vOa1QG9UqUqtigq
ynsgdFF1lV5ftSp79z1UlM9Q5TK3WRe0LeT6+yop6MPFC2bF7LowwNZh+8SO
gopOfOc2E9KFpJRo2H5iAn1qPr/CKqkLicH9Xtu7xtHnvYIDdQq6UJ9yqbD4
wDgq1Tiff0RfF1aPd/8XJz+GyrcIHPQ6qgs3OnI7bZ8Mo+FUZauOU7rART00
xN80hDjAjGRxTheKND6YNW8dQo6Xz2tJXtMFh8nZuXXPAUSMfhfoStCF/4xf
SGjX9SCRn/79Vr26QAnoyBM3bkSm7hFdn0Z1oUbrcCvZrRZ5MiY2y0zpwtFz
N5m9zGpQgf6PKkZGPRBG/OR9AxjteyP2plhSD7IeuQWfmLuGrzysDVDw0IMQ
Gd9LPHy/6X6y3/vZeT1IjX3UcVeoCX/7tnCG5bIeFP4ofPlGqAVzre127I/Q
gxpNBacWtg6c4XPF8EW2HszVilmQLXpxLdsjLdYPevCu5HC91p4+PJ2ephxU
ogdb2C6NneTsx8b/GsQP1erBrx4Pc7/yAdxiK8O8laYHPCM+WxgGh/HyuMH6
pXk9MMx+X2X5cgSLhx9cGFrXgybHztzNB0axN74+Vr5dHwqmFAPYU+j67Rzd
r8KvD4ck2yuWjcfxp4WMrpfi+iC7xd0kpWUcb1Ztqruipg9bGVISfCkTWK52
tGpETx9Khhj5Lb0p2NZzHR821YdUXgVe40H67z0Tz+dKK33Y1PPeUsWeil8k
y+er2elDCtdM8moJFX81RG+SnPUBXUq1vSdEw8Pt9mnb3PTBq7W5ttifhjku
nnt5zVsffkgeHL1cTsNqO0LixgL1IWvpYNXbLQQuZm2Tq76uD1Mtc4teJgQ2
ZVAuSQvTh+WZHZkJAQT+tRBmc+uhPiRINuZrJBLYnujqORGrDy4XbtXLlBP4
77C6v1GCPiT/FLvn85fAZ/7dYxJK04cjV233baLrN62lN27xjT40/V052r1C
9/d1OvKtH/Qhmj20bZ2u3xvfIks+lOjDupT9Nze6vkeUDtk8rqTnz0He2D5F
YK4Cw17fX/pwItrafPM/Aj9/E+Nv3aQPEjs7VEmVBN6dOs6k0KUPz96W6LYm
Ezj7hcnTLQP6oOgd8+5bEIE1op/JD43rg+bLX6X85gQuvUeUVEzrw+dlGbd/
7AQ2DyXbJi/rw4Rkx2XJX3R/fvllbzCjAShJqiQt3KLzzYVZf+etBmBUX23h
rUHDPR77mPV2GoDuuMub2L9U7Hni1VM+QQOI5hetunODiicdluRnJQyg/k3i
IQcBKmYkZ9jmqhmA2mqZyZIeBT8wWu99qGcAvdrzLzd9ncA8WocDzpkYgHgH
16HDaAJLS21+Jn3QALRdOj65KIzjd0JOCpuPGkDOAZejdnFjWJv7fWnvSQMI
DQERodVRbMl4oi/+ggFsUnzzpKBwBP9eKgy4ctkAjunUybewjWCnKQ6WIyEG
oOp5+T83x2Hs1VussDPKABZT1GOvDw3iyDK+wIhcA2B9z8Ea/a0PN1+tZ7lI
MwCZPCkLprAWfMxf+vmheQP4pDveeSajCQ+fva6oum4Am1ckXm6p+o0XHBUO
TGwzhPYpvfUS6i8sqHP3+ak9hpDVci9QvuETPjFjpGTrbQil34PzKhcqEMdO
hsbmQEPAep7vpJSqUbFqRYBzsCEgAVPXqaO/EI8vucQz0hBmeF/GRdT/RjWj
tla38wwhUig+xKOxA13csoPG9tkQPM5ca5jBXWi3TNPjqHJDcNgXIp6U0Y2u
ux7pePnHEGR7JLKfvOtFqv9OeH6aNYQnE0ysVvKDqHtVggOtGYIcLWvQZHkQ
3RcazP3ObAS9pe0M5t+H0KCj58IfPiMYlwqSj7AcQY8vKcQfFTMCl+5qEyeG
UWQcRzHulTUCsbiURuf3o+hZ04W7VF0jMGfrspRZH0Pm0+oKgSZGoFF7rDDq
+Tia5pqrW95rBMOBtz777JlASSof/UIPGcG0X9fRmM8TyNr2Ci+rsxGMSbf/
6jCioCVvg8+RrkYQLr4jVKiYgl4/WHPh9TaCU4NTalrKVGSXjRkSAo1ASv3L
CPMLKmL4EZq2O9gIDDeNMZ9fo6K3IyTLrDtGkBPccMjekYacWFgoKpFGcDAm
fyM+m4a2SNc8KoozAuGv2/OUZ2mogHRfwyjJCF7zm4YsaBLo1GnrtsoMI9j0
8gL7oDfdj4dyXrPKM4KPytUXBuMJVJLUKPr7kxEcyFk8MlFOIM+y6Ioj5UZQ
Ps46R/1HIN5ue/d/P4xg35Vj7IPTBKpY4dt65o8RbDvIM1m9RqDzgh1vJzqN
wLQq6UEcXc+F9eIP+g8YgRo5w2n/IoF+HDk2tzhhBJyvlHxn6f48KEjs+c1Z
I1D4O3fufj2BJJ/0GbKsGYHgK4MI/hwCNX5I7X3IbAxvmhL+ywwhUPCfM2Hc
nMZw782RRrI1gRSmZOVe8BnDJbsfKozbCdS2ffyXuJgxhPdr7qDU0FCYcs75
DFljcFr848R/lYbUbHy5lVWNwdZF0fflbhr656X6sUDXGOwMiiViK6hIN6tg
vXyvMVjeUeszH6OgoeqgV5aHjEHhKZFkfIGCood1yQ1OxnBjcKudFDGBKJJf
/vvrZQwn1/iC9rWMo+emN9VcA42Bi7yN8tdwHJFPmbSMXTeGTLMP+1YSxlBy
4nfhhf+MQT3honecxSiKd1FqOxxnDBu8fY+bnoygOMGYxwWJxnA87dj9hO5h
9DDuJIt/rjGcdftq/dJpCF2OXCEojcawu89Lm8zVjwKsT2fv6zCGojeBpHLV
PuS79Ydbdp8xnE86Jhhh3Yvc7sZ1eEwbQyPnqsMo9S86eEOtsp8bAUNnBVO1
YQuyNnwWbCKMwDebspoCTchyeV0nWQrBbekb1rroNzIOqs05poXg35Ejp2OP
/UQKvh5x7Q4IpD+dPf064QNiPP7ybP1zBHGBZ/bmhFfjNSEmqT2vEAR+HrM/
kfILL3ac+/cgG4Euq3nrrQ8NmHZY125vCQIvtqUg+39NuMumyfDbXwSPXUIe
zaR04VZ2/YXdQwiKuA6Fk0K78Z8fye9DqQjsBZnSQhx7cI25rwxaRyCqXu19
MqgPdyYysXZvB1gW12L0aRjE7Ws6Zzh4AOJtOrMZnw3hFhevCgN+AJOGmoxc
p2HcKPjn+gtxgANek1rX60Zw/RXmzh9SAE4n0AHt4FH8q11XZ0kOwGtHNcVQ
ZgxXxSVNHVED0PD98vCy6zj+NvfHNlwLwJ0zpdxhYRyX27PkFOkBkEmeM023
J3DZBz22YSOA946v836wUnDpTh93XlMAPknnp9x3KbjYL7nSjAywLXPk+KMV
Cv7Y2CQeaAXgWnK+T/gsFReobLmRagtQvZ4ulVhPxfmR+l1/DgHc79o4taBI
w6fiOZmLHQBcfu6jPrlGw1yZ/copTgBHPy5qzlTSMC4ocow4DmDWurKxxkRg
3/L7t86fBthT4dX02pjAIvXHcxzcAUTeqMz3XCBwbad6q9E5ALuLpMCX8QS+
NsLCIO0LsMgYJdFSRmCF2U55Dn+AXSsOCTc6CdzBkGs3c5Fej6tq+2NodD3f
dju48woAl0aKPydd/3UEj2SUBwNIJGtwUun6Pyyj+DszFMCBQWdpzxqBn2hs
LD+6A6A5y9D1e5rAZtAkdekegHd2lUJXL4FnrDNsj/8HcDadRcW2msCvjl67
bP4YINYobFX1NYEPuu9/pfQE4KBoS+CDYAIzBEjWcj8HGOMNNfOwIXDuzYW5
5QSAmOyC3gZeAh9/+EusPxmAdVN42J9WGt72PGnvjzSA7OKmPTeiaLg0PSAg
LxNA+kHW8wFTGvbKt3j5NAdg6rgt8NKoWBALVd/IA/Bj7jwgG03FP34Rk2cK
AILOeeaoqFDx5fZKQZtPABO3B3vNv1Nw65SXr9BX+vk5cdiKsXsC31lHzxi/
0fs78rWq5/gE1mTnqRirBjBO7Hmp1zmOo6VKeT81AMyPzcr3f6H7ebUolNQE
cKTp9INA+vmbNHI7e7cNwP/wkait90ax7RGOL/Y9AJncYd/aDUfw1vsublM0
gCwTlqPeroP4c5xqZPs0wNWYKZ6Q5AHsmcr0Cc8DXLx0eHmkvR9XleawR64D
HB594RBg2IdvEav5Cpwm8O3NAYvWjC6sttr4d8dOE9DsTsvj7e/AvazpLEu8
JiCr9YBXia8dG++2caoWMYH4NhWWJz7NeNn+5Sa3PSYgGuPBY/LrBw4oNjrw
0toElkNZJuMY0lGBUzVjxwETeMyzJsswm4/mlw8U8hw2AR2Lr2fdT5egywZu
gg+PmUDhiYs2lJ1V6Hrp/cGrviYQ0Drx74pJE/riwvO0yN8E8mv9X/uQWtD6
6su900EmsH2z+Tkf1IZCjd6/O3vTBMJkPvw+KtmF7pa1XXaMMoGPw51RY+Z9
qPr4KcXYWBNY9GR9HCbbj1g3xrsbnplAnDfl9FamAXQfrZtapJhAs43y5r6c
QfSrJ3zuVroJHG9i6y2+TPdLITsyy7Lo+9UerH1sPIwefZXapp1vAuxXG5id
P46gxpPvsF+RCbhd8W0eODuKdm7S9X9bbAJ1p9+3xPGOoViTfW1SlSbAM/pE
9MuRcdTS13zvZLUJVKV/0WyljiO+W8cNE36ZgDtDq8aZ6xPoWYVfCnezCThu
H/axuEVBHadX7Pa3m8De/1ocDi5RkODmOywP/prAuIPSc2NPKnJJ5fxc1WsC
XFJ+MpP1VPSS9MyLccgElorMjPfuoevbgISo8ZgJMEX7BqncpiHxsDeNV6gm
wKllWnG/kYZOSWndLpwygejfTlfMeen++VuZ1tScCZjHvDlmfZBAA26Wo0rL
9Px+9CdHhhFIivnPC891E3hxXnRs7R2BzqQ726QxmkLpt0n7yEa6vzYf2uhh
MYX0hg83tMcINDLkmy/EbgovBhRuEnT9l7u76HZkuyl89/AjCuh8cE7m1q4Y
blOQPaI9HkbnhzdV7D/rd5lCnbgZx0k6X1Dcn1zfKmwK/BX2gXvp/KG8RUyF
LG4Kl2TVK8h0PjmfkdkXKmUKNjsleU/S+SXPQj32i5wpBM+msSXT+WZqpIS8
pGQKO84EFHFrEUg9wnxJU80UUhj/Zf6k81GAXMObC1qmIPfTp7f1DZ2XahyP
5+iZgp9g1w9rJxqa8+znGjUyBcW6w3okBhrSZvOulDSl72dD3K3pJRVdzpq7
eIJM3499WAe/BpXuz2/KxVuZwrs3PNfUvlLQ8hhrV6utKXD6OQQamVOQ4f3o
/3bamQLHcInaiYoJVPYzffqesykIf6IWXE4fR3n8jX7BJ0xhWiY7XpdvHKW6
L09ecDWFbl3e+PiQMRTBuJ844mUKiZK/Tv4zHUV2+osT0tdMIa1J60h+6BAi
R+z2ErhpCgdED8h1VQ4i3VbrcY7bphClHXh8hmEQifqnjM7cNwUHcXe79979
aDTLaqj8hSkwH5V/+0XsH+paCHQrTDQFr2ymiPFjf1G9edJA5itTkIjNElZ6
0ok+9M30Pco2BTbPmIycyVZ0Q+Dlv2PFpvBwre3UycZ6xH2PaFvqMAVJ3rRd
Cg7nMUubwBFqtyn840/jDapIwYtSZq29fabQeSna+sX3PPzv67Pm6jFT+O+T
dwI3fMWZiya/nyzRBVNgZ0VQZQOOJ3sfuLdmCnMmkYHpP37jyNi4huubSMDD
971V920TDlCdqHNlI0HXoY6hsDNt2Ngz9qeaAAkii0fDhCL/YdWisr3SIiTQ
OrjhfFSyF0syjdXwS5Bg1yNl88KVXsyabFS9IUeC4i1dU7+S+vEK1YM8o0QC
/cD9xuJeA5hmEP19WJUEpqn2zJ/UBnFT23BlnS4JWNTLAqdyh3CV9A5SuSEJ
Tv3z6NfyGMafAgwqCoAE963HvTYLjODE7VFf4y1JwHSc+fN/XqM46lgxemRN
n097NrbAPoZvvxksu3WAPlYWkyK/HsOeFnpfzjqS4PMfs/dL1eOYKifw/b0L
Cfwf3L3A5zSB/bcu1S6dJIEmJ3X82OAEnp9obzY5Q4Ii8aK7me4UfK3u0997
Z0lwNqh0prGXghlynw3+9iFBubGsdsEhKg6LukwR8KePCd88tVIqZvN3nD0V
RILNPgVKiiI0HGmnu5p1lQTV3R5DYRdpmFuLn2n6BgkiPhv+J/2dhp/xLbLr
3ybBvQpPh3m6vxZZbOO+FU6P16W41L+XrtcdH4V+PiCBelfi544bBJYteSq5
M4oEc++qvX9lEzgn4ZKiUyy9Pyenrr+pI7DqjSMar56RQPQTmXp+hMCFJ3QM
xhNIsP/SO5cdiwTWN9lFUk8hwcrR0S0P6DxRtnvB6mo6CThNx3920nmCxNR2
qCKLBFYKwRKbZghcM1TktPUdCWQ+CMhu6iGwTXXc6UP5JOi2Y4rrLSfwn8yg
cy+K6PEuZH3PoPPOkfsO/v3FJIhr1Ms85U3gv17aVxUwCVyFIqqFNAl8yobv
ln8lCa4ckDMZnqbhYeX5e8XVJJi3+FPelEnD57haHzPWkmDLU9aQpcM0TEwV
PrdqJME/F2bt88tUHNj0JCW6mQR7PtIE98dR8WLBxazOdhKM1tt3FcpTMeNl
rc/n+kgQMjv9OU6HgsOP8pbnD5HgcNW6skP+BOYwmKtZHiNBmpOdgKz0BOZd
L2i/P02CUP5k05SZMfyiJ7b3zzwJpnc+Z3i1fwyLlgeOCq6Q4HlNHb9r2iiW
C9NczN5sBr5HxsMpuiP47RkehpktZnBnIm1O+MowVreY3WLAYQaO4X513flD
2GBrwa5fPGZAeZMYP8c9iG2jNHQmpOnvmdO+icX04iY/bqShYAb3WgwPNFr3
YEe7GfI1ZTPYkmZ5/Ny5bnyK74MDu44ZXOhtPDT0sAMHJqgHKVqaQdqjeGrK
jd84PlOt0OucGSS5vfLs33IbV3W41iT5mkHOHO+JbcLP0PTWuK4mfzPYmLLi
ye/MQVY+y5sMr5nB1e/d1uWKGC2rVdpyPKS/P3fo9Ff2RiTjOncKosxA6xpH
xb6df9ChWNmLgbFmYHxPi6OTuxllzT+I/5tgBsIBD1t/MLcjxxL70Zy3ZvBd
496L7ic9KIxyd6X3vRl49hTczM3vRXkinzl5i8yAs/m4UvOTPsQaIqIVXGYG
XZbDK/ttBpDm+/2W7yvMQOaEQN0eiUF0sj/UeajKDN58fccXTAyij2bDoTYN
ZjBauvr3v6vDqP8i/5PQJjPIPbtpX7/2COLMsMosbDODtgAh9XrKCHJny60X
6TWDZs0fx9LNxlC0fl/fwUEzCNDM/Kg2PIbKvLjn7ozS1//m3vA0hM4L9ZeE
aJNmwJG28NUyaQKZbmQp754zg89LX4LMJCnIV/WvicMSPf57qU/XkijoxSnO
w/fXzOAwlcmglpuKvkeDZ9kmc7i259kAbwgVTVb6X5tmNofProfr9AepSHgu
LVJmqzkMnFOzEwMaspRpS3HiNIeTqbArO4aGAo+wFUbuNAeLpx/Zvv2joeQI
g5oKPnNoKbI87yhBoNrPPl3zguaAvbqH7Z0JtDieRFMQM4cxWqZv1kM6Pwj/
2XRC0hwoV2I8LQsJdMCGiTdG1hyUElZfyrQQ6PoNbblqRXNozWoyNaAQKDPX
02BFxRwYzzEv3lwmUFPvC1sVTXM452hcN0nnh/Uddadcdc3BZZ3B9OEqgRRI
G4FPDc2BmY+LbDdJIIdAtYhfYA5LTkp6e7sIdCvdNX7DzBxYBGXGA74Q6F3r
k3cae83BtML0SVccgTq31JR72JjDs9H5vvseBGLRW26OP2gOt4/P9USq0Pnh
nNJow2H6/hRjNy/QaOh4/PGVzU70fM9GSLSk09D92ihO3ePmMKK8fNbInoaK
1iokvE/T4w1MnSYvU1Gf8pxmsrs5cEeK97M+oyKOk7KWzefMYa2GiSV5DxXp
Pj7qzHreHHL2+SrLl1BQ1MyX0AuXzOHuhVMS0WUTyOdP1CmXa+bA18okqmk8
gazeu5pY3jSHBc72B1YfxxHzebZN4uHmYMB8j3Ikbgz12/ztZX9gDqmfhq1i
V0fRV6XcrwuR5rDjv6reBpdRdHXcPqQhjr5e1KW0HvYR5PhD9mTJC3MYunv2
O5PzMNLKXEYZiebQ5JMz+TNtCE2eSd648doc9p189m1cbhCd6Zu4oVxkTvf3
POGRi73I9GvZccFic/i083Z5jUQvEk96bMxSRu+vVtlz88h/qNNFZ737uzmw
hkW828nZhQ603wr+r8Uc1N0VE2Urm5B+g8B1yqw5/DP9mb0v/j3if0dxbl80
h9pw/syNh6lo7iE2+LZqDq8zT6rlzN1AeVZnVuKZyJAjKyE5eP0Nlq7Ku7qP
hww82xOcC/2qMGP6bScdfjJ4/Y1t2bPvJ+697aAvKUyGs5rfJQ+L1uMXJqtL
y5Jk4ExpCGFs+4O5vlhcydYgQ79kkXOzUiemxgsejdMhw9a8Fw2vZ7rwz6tU
3VsGZDC0/idc8aEb39GNWTxKIsPaz4NK3I968fKHf5fY7MhQ77OhI1czgNuj
3x+ZcyDDpaUoLuYHg7jQL0ynz4kMfw7Y+0xbDuELKgoLn06TwedEjufewmE8
lH0xyNOfDMHlI4H6+8awvcj6v8wgMnT0JRrZ0Mbwt0d3LcaukuGx5q692+6P
Yw3G7XnyN8nAWzfzwlZ0Ar8KfMp/7jYZImaK7EeyJ/DOEbHQ7HAyuO95Up6r
QsGhRzPHxh+QwXPkzalbORR80vhzsVcsGa4d8rld8h8VN+aZSOY8I0MeD8O5
/ikqRpI/H1ASyNDHHH0i1oaG3z05NKuUQgaRY7U3PibTsChrl4tPOhn2POGy
0Zyg88NV1+9vs8hQOSRQPqdE4DXKxB7aWzIkStAsx84Q2PtEYJxyPhnK9wk3
rD+h6+3v1XXfIno/PC2w3BcCW5vd8cgtJsM7k1U2ly4ClxRtayTKyPB262/Z
qEkCK8jH6apWkmH7Rp0QXiXwi3jRlAvV9PocEL04ROeDrZwZbO9/0fs9znqA
cZnAV0JU/KcayOBapuqwa4LAo9MfO9Wa6f2MES6TayKw4xkg+beT4bIXi5VR
Pp0f2mre5P+l92Nw2vx4BIF1rA7yzPSSoYRzx52nhwn8urTjusYQff4d1+ML
AgTmUzk9FDBGhg/vPmRGttDw3ZRxmwIqGU7ZNxZeiKDhOe6AotkpMqx289t8
UKdht7srolrzZAj45pDu20zFzYu3wy8ukyFwdvjYFx8qNvPimCxcJ4MNl9al
0nUK/tAd6zjPaAFMefetHoRTcHRFuvwldgsoa2BklwidwIxaytEft1vAew4x
HvXpceyXUbS8wG0B4Gy5/Np5HB94WP3rsrAFCMomhXvyj+Gv6/s1P4tbQOlc
5GUu71Gs4teesCRlAc6PLL/++TSCOR3GfK7usYBJUfTB33gY14qxc103toC5
j3MeIgwD2DA65nKpqQWIpxZphO/ux2+YhPtWyRYg098x8Bv14ftjSvnB+y1g
bE9KK1/7P2z5wdb+5kkL2OzNVv1Nqg1XkqOf3bplAVo/ln6/SS/Gg+4ldVfv
WoCQhwD3kS/5mCl8kDHgvgUwf/J78DM5HZOrtX1coy1Amza4T8g4Fv206DIx
e2VBv+9Ohp6OFWjCg+mS4WsL2C9ZaFhAqkIcEXtyNLMtoFHbZ8sd+Z/ItuYm
n3S+BRyX51o5P9mI/lhKTTBXWMBUJW2Jxb8dzXjaiK9/t4Dvk5rRd8w6Ec+9
oMPzPywgU1wo8yHXX+TwowYP/7aA5ZyFlQsxPahzr09sdZ8FGF85u/uA8ABa
ORv3Aw9ZgKGGvOKHoQEkfB+vfxyzAJfoABXV7EF0/OeOs5lTFvD6TT/loySd
B6yKjO5tsoS4p7PKzM2jaLNXj38osyXc/Z78V9tvDEk9YM28wmYJm7fc3CbN
Oo7cfzntPLfDEuyb3SdSd0+g8InbFqd5LeFVJ4mDSJ9AmexvrzsJWEK8qECW
124KGt+3MWwlYQnU0L2BISxUxO4tJ0yStoSPj8au9fpQkdLDgwcN5C2hL+Uf
3lRPRTY5V+9q7LEE9QPxT2plaMi3NrVEUc0S3v/HLKF4mYYeUWonJbUs4YdL
+1G2ChrK45iXFtazhBsO0VyHmQjUqCTmzGNkCTV1xPSaMd1vW1tGcZhYgs1F
4tGcH4F2+vh9ZzK3BMd7J51VXtL1878Xy6uWliCYtJSX/JVAdm8rVeasLaHn
8EIr/CVQYB3FjXqAnp+ZKQMbXb+fUHlfDNlbAneSkO3sCoGKtqGGbkd6frsP
/P7f/wPb9ngytbpYwmm2qfsKdP1ftHmsV3/SEuBXtPdF+nwB32LfKjf6+uk7
HAfo8fUjB1LLPC3h0HSX6JVyAjm/4+go8raEidCKEKNEOn/Ua3HmXrCEbfr7
FfQCCPSSdpyUEWgJeude5QcBgco4Iy4nXbaE1iNtzxhZCNSj/P7t0+uW8C1j
EiYqaYhhf2f/oxBLYPKwmYSrNFRTdlgyMMwS9goaa35VoKEo5d+ujhGWUNZb
JCncTEWOidZphg8tYaGp3/hsEBWJc9YMikdZgsizgPdfdlDRaDBJmjnWEkLP
nLZRe01BedSyM2NPLUFI1uZOtwYFQV3h8PskS6CUkKJtDCYQq5GabFyqJbz0
fKtjXTiOGnNyPK5mWMKYzCD7ktw4OvkwddQ01xK+tn8KH1gbRSH7Ho83lVmC
Na8CbeHUMLIs4VD8VGEJGuYuvkffDiEuxQivhCpLaI+z6X4+M4iSt96kuNVb
QmZtRqin3wD6+sObNtdtCQ6vJjntdHoRg6Xl9K41SxCo9I55ofoH1XysVF9l
2Avmd2qUpg40oihZFNDLtBcSijL7WjtrkfgW7dlMjr0gyDbaoqD3HUGV5Lye
8F5oVT+icn1zBgox21hyNtgLDodfnFbU/oEtC67qA9oLUlXlSd8312Euqfmr
UqS9kJKvo2ByphEnb6auUKz2QuEAaWNUrBl/rehcC3baC06cHu6vHLtwhLqD
8enje+FDkcmr97u68YFXv2+QT++FolsDif8a/uHe0JoNzv+r6MrjofresPb6
hixFJEmSSsoShTpvKrLPPlOhTZSSvUVECClCUihStoqsEeFYQlF2siX7OjM3
kRTld39/vp977znv8pz7PM/MfLAzhN/c2uu/V/fiechd8PSaIfhkmtiu2DeA
jx0arm7zNISy2ZnkaysHcY7B2ghRH0Ngu8slCzUP4nNm7oq+QYaQ/MJDsZw2
jMuor4h3IYaAC0fE3ZePYBlm19upcEOgATfPK28E1x/fb2wTYwjlfVLSuQJj
eNsJh9VxcYYgX6m8/U70GPY7/fTrl+eGcE5qV9Yv5XHcfbYhSSTFELrefBhp
zBvHe84vdDRMNYTedkmFaW2SHy6q7/XJMATPN17fdHO5mOtgvfBdjiEsKayt
9CP9ZvzlygjlIrKf2pqTUb94eO7aL8uzpYZgvmG6eQeNj1meSltiKwxhSHF4
OyWBjzO8j35v/WgIfTvr1o7x+Pg/v6D8VbWGEEqWMqxCYOuAdz5HGg1hK69G
drct6c+DuMY3Ww0ha0zE6X0kgdeGrF9T0GEI606saQkg+d05zKz7R7chOOCr
Xq4kv3+K8Ere3m8Iwn+npH1Ifld8lOFoPWwINfczql+S/O4d07v3yTiZ7/We
7eMkv3fEii1qJQyhMCCfpUfyu8azg5+Epwwh5mdGdybJ7yGJrg8MZgxhj4hg
475mku9TEq285wwhVgS/5WYT+GBq65Z8ASNg+8eEVwURODZ92cTEYiMIrqlt
bucQeCZrT8G2FUbwXTPTRlWWwLTc875nhIyghz/0pLuDj1Pzo00eixrBAeem
vVMhfLy0qGZNyxojqJU+ZRWgzccnS+a6haSNYL+QbEj6Vx5eXWXl5CVvBFyD
Z9VKK3n4UvU97beKRrCQdedKzgMu/vC5ZNHENiOQHLx/wmgtF3s0y0eeVjcC
yv49pfJLx3HrF/qJGC0juM0gwjOdxvCuTj+lZh0jWCNYoN3fMooHe4cKDh8y
AqODqtHdgSMYBiX9bhwxAg3nA8JL2oZx9MgR0zwTI9CKPZoXIDeMzYiX35SY
RuA4GdPqEDuIc+cuLRa0MQL3BpfsOnofFhF4+vmQnREcbX9cX+vSi+0WNUR6
XjICBbSyciKkB8v+p76VuGwEhk7p3/QdvuIAyV+mjQFGcEIk9fB0dgsO//Ch
v+yOEeQefsr819qEY69FX8u+ZwT18a/SNX824NzOfYkRD43AgH6fJmX0CQ/E
+c2xko0gsfjEncOe+fiAktirzkoj6M3c8vdaehkyae+HT9VG4G8U5NcSXok4
QW9aC2uNoI059yTPsRo5cjkLY1uNIEJcy15JsAHFZsQdPTlkBKsWC+zxudGG
Xp5yIihjRiCuqNJlYdqB3ogdvHWAbwRu3kmRrWu60CfXoQz5aSOw3WOgxA/7
hmb37Fg+uMQYvH/c/+W1ph8tHfv3pGWFMVy7uScp+Gs/EoupV68UMoadBdnL
qp8OoG1/XU4krzGGK8fic8XWDiHN14d/PpQyhsZeuwXva4bQgROSdwLXG8Na
r5pV/GukvyotyD2/2RgYYqeGFleMIGvnuybHthpDa3PymfhTo8hhk1Wf0Q5j
kBaVl5eYGUX+txYIK+82hg7HyulfouMoXLPpucxeY5ikjGfIPRhHscMJe4X2
GUP6ms+Lo0S56I3hkbP8Q8YgXhp9esE0F5X8kZrtPmIMqwSPLi+w5KFPr8ZD
60yM4WfX8F16MQ+1WRQpllCMwSha2jdXko8GhO4VZjCM4dvU/X2fz/PR9+KT
tHiOMQSlL2v2zeGjWQe1kTALYzAOEFb68IuPlm5cfMPnpDE5/zujt9VJvm9s
EXexNoaPl2OjC0j/LOub/OLMOWPQ3qF83zSCQFs1riHGRWPQyxhftCefQBqD
Ri2HHI2BH7vst2MrgSBS5sJuV2MQ8De0mBgnkIkBX0DxqjEc/NIwnf2bQJwZ
HCnhYQwaz447vyH53/pFmPIyb2M4i1cem/r/7w+OnSn75WsMF3RrpJ2mCCQY
N9ajG2gMvBCdhFO9BHrZ7zR/8y65377V5vsqCHRE6ff6qlBjQEfvbxB8SqCh
i966gg+MIa75R1obqV/8Mpcdp0YZA338zKYMbQLJT4dci3xiDJlW5prP/vBR
ibbEo854Y1gQ37m5NJOPrLye5MolGYOYekHOxpN8NFeu0HL2pTHEp+/b1LmE
j6KXp06+fG0MVeoFSsuek37fVF3se5YxXF6mxi3V4qGWsIJdu/OMwfIxZW7r
ey5ybj1g7v7OGNy25+qfPMJFIus+2mNM5n8xUjjw/TgySfjy0vAD2Z/fQeGH
EsfQ2IjVx5BPZD+a92/a/t8YCtwxNNxUbww5KyzLk2xHUXnulIJVuzE026U4
rBUaQdofReOcx4xhY8rnANdlg6hNKKooj28MTKcT1r6aA+gyTa5r7ocxcMu5
2vUn+lFmp4pUwKwxhGltF5R+1ouU+Mb3YwRN4FBBx9PZtk5UqdaU2SNiAq7v
lwkLjLYj6yvH6jevMYEuhfN/n018QXEC54Uy1puA+Z+avkVEE5IQ9w94r2IC
Bh1+U88ZVWjxnpLrPIoJ/Ai6PiJ14g1+5mEQrcY0gZJn7RF63UUYSmvfXjlq
AoLanfdct5Xj60Zffy44bQKvHMpEA+7V4B8WfxwkXExALttJdvnvFhwafzPk
+BUTKOUyJTb/+oJVhpanPb1uAkPlNqcv8dvxeQfJsW1+JqAxlxRlVPmV5H8N
a/TABHJ75A8t9u/DmyWEQxyjTCAo4U6LhlU/tns5nBf/xAQmhddJrlYdwJON
0SsXJ5nAs8es6JmKQbzH1nX37pcm4L/ONTMkYAh7zJqesHltAtLX5PR+6g3j
pQoLsj/kmsCuyV+ltkkj2PhtR9fvAhNQkeZLiZmN4lCTnKXbMbl+QPOXj6Tf
l3azPRZcZQJWGk9nsqTH8YkVB/yKa0yg+9CnReGJ4zjhifRros4E7nwR7WpX
4uIdlZ8X0NrI/i7bPbRmLQ87H0ve7ttF3h8vdv6DLw/n8r2ZOT0mkGkrZn9y
mIdnfY55DQ6YwHIFiegyPT4GSY0XEqMmoPxLrL3lAR/feiXUZMAzAfmWqWO+
PXxcjYbnrk6YwK/XvbG58gRe1Vyi+PKnCWy813HF0oLAjHPRlM7fJiCxPl/0
XDCBo+Zc3AX/mYDL1sCfH94QuDvUNGHfQlNQF9UUcmshsPzmLbWXlprCmqm4
pDNcAtvmC8zE/WcKF0em3EJIfk817djYIGwKyn6ODydI/v/em228UNwUdupd
DL1D6oPdl4Pd1CVN4dDVKnNLUj+4/2cbZ73OFOJLE3fYkfoCx8LHBxtMoYDw
Hcsj9cdidenJyk2mMF/6PM3sIYGPVE3KzGwxheCm2oV7zxE4+Phn/a3KpjB6
3OmL7y4CNxJJjsd2mcJEiNCV/d/5WMLPO/qOhim8ilge4J7Mx8fXHntfuMcU
jkLjAhMWHz9NVefzdE1Buuuc6sc5Hh4EobUbDpiCxW3tF//F8PC2lqEDlMOm
sGvwLNquSuqB8yUXbhqagn/18SVHMOn3/0Y9yDI1hVitAeR9mItnwlxwP9UU
dtwOtPpZPo51FU1HV7NM4a312R/V2uO40kxg3xUrU2ixnNi2S2wMr+xvt0k5
bQr10X/2i7qMYsqV7NB2G1OQaYkI/flpBLfH2QzoOJiCWlKLlvfFYcz9/umO
gDe5/nNfB6GTA1j1VtIbVT9TEPmbd8kupB9flvL+djrQFOaEo3rP5fVhAT11
9YpQsn6/uldaf3qw+P2ojtvx5Ponqls+3+/A/7WINzgnmoIw878/5z+2YQHJ
kKrjL0xBd928q/TvVsyN9snZkWkKQpt3W7odacKVzy6ENJSYQtpw7fQC2yp8
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
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  DisplayFunction->Identity,
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{
  3.441611637917*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
sCfkl9J5xRJf4hdb/SfkHCfKahG9pHQ8E+kORjMCIQaAch3Oh6NNIJAc3npE
IIpE+C8icqQLsnQr2iTwrHS0xSRrUrmJ9qTk0/olzBXaxPfO7m01SLmJRBCI
RCWyJ+z8aBNJVjraXYJFK3f2ciUq2UueFJtoNu/RRHMrQ9CrEfn14sn/KP7i
m7j4iyrLNz0Rgbfm9WwbFtBxcIFtD2O1OYMn7Py96d3aPA34eVTe3Y/iXsSH
NW0tiAkCk0ADItsMbjQ2CtWCxBDk6U3CIfJ6SC5TPst/z35DOdagfMYT9hIn
c52Rgf8ka6H8Q0hJTg++5IzMFS3+I3CU8hmP9JS5cN7x0r2iVYlyCCULTOlY
csQdj/DyIZV/uHeI5lE6nE13nk/pCHC4cRqeApW8eP8Ere+cclMOIfovvoHS
uQ/osD8v31DpCGmKZab9ESOWuU/maPgFjp2h2pLogMyB0jGRRCzRF3Dm/yjq
g7pPXkV9oBy/CT02Lr5LQOuTHQfv9HsUR+2DuYpYFTitm2nTuv3w/quDREm+
6OC3navt087aZ4BrzLcsJ4IKfEJYZdM1pt5tyeKTicqwjNQyLDTYJD6e23s7
kQOWyrA0nAQ/VUYkViphD2VEuiqyzSodlLQTBFM6VrqQbUwZlm6DKDLfFyyq
MhiBC3F1lI7JZpJCkeMFTKyMyCPh7nQECIRz9NjPW/DcsJKXC6PLAmAgMazE
g3KSQODvKHhxZtf07b3Z7Uo4SXhKt0WxawFNtT+oQWdcZUQYnA7YktWbOaGE
Sceqa1iXVzBsSvv93zCe8PUXJne17NC2M3stuJUkyrgZNL7pk/3DUNPpdIdB
W/0fxL6YQbVoHCIARD+gOXHomF4NPR643hTJPR0d9INMKJk+VgsPfUmlAmXU
ger5W5O6hYxK1EhsRGXAUoouSfxQGXDJwAFiEcxznZBS62IWTo4k5Pzbk48d
OvFOL/krSkd7UNqUsbBbos2dEQV7EW1SvU7peNJSGEYZ0MsPfklEmPk/CKKQ
sRjxckeEkXKWGP1CXi3oBGFUOpx5QRuSYxxGtZbQuTcR+iVYQDZvoYHGJgMy
a13s5KzOGPecd0vmvbsI6qKM+r8s26UMndzE3L24pj+aO7YeuidE6i7ZXOBb
LvLq9LhubVqHBHT5Pf2FcPMSXv5xi71NPtGaUqIJE534w6TQlNvZ2TkQyWxg
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
k1YORMto6Jn+Oi1PWqJMpMmFib244SCuU0fQnvphCSNor0o6jxCmVz+bjdC3
97uMioMHdSH//Pl33vnOirC95QE1jrP2CnLS8jn8lg6xoMVUE48otQ1FiFfL
Z98SfS1aPiNEDNHQ8tlcIPZQNf3ViI76Cm55pg+JRRZCcYzi8DWe6+BSoduH
Z8FJDsxV29/yhQGXuXZ3I9QECBkkH8SIlsqmMwJT0WLLm64gLZVzTohilU3/
eXGbwalC9Ffq1dLAXL2aNSdqWXq1X++6Y3CBnRzq53gy6ukazxobYST1c2p5
HMG3RGU0eOmWKgdgCvQRQHDQ9am/SsdPSxMMWiA48Jn5KxnOKuo4WienVFGY
aJ0cxslQ0az0d6WQUD+cRBFskJXivgiQ1vsbrqCjK8t7EQofZIq4n4EmRipo
nezDpXTY3zo9HPL81MYNo2S/2Y898pFkmn1r1De0RFCLpCVazWBkjVYHRzFW
mjust7YDldBXzJUXRemoH1YhaiubYqTQSgvse/XziQWrJwZV03pEOVmvjnMP
4llU8eplpV0dyyP8AUASJIygHfC9w8/4E7U0DjKNh59BnUcRcn4SgaV5I2IK
dHSq6ZUdGEtTR/0cEMTYYfVzEhZlTJbl3czfQi2vc6Tl+fiJByyl1UEo3dKw
FgPUGkI5UnjB9BjnKpWapckWg8ptdlXYsYPqC9ZAsguiNLJ6gj9rOIxbODZd
/hBmy4jYo42tpTCKddP0aSu9FMYY6MjNqKZChEpLYYSSR8n+liKMZczx73ql
5+ucl/lyem17USGPzlscVqub9fijH+u1HWZiBTUN+ctIronj0catY/feRBUa
uvbq5WvfI6IHQ/i1fQrS/+Z8iYfDwstNPvlofmlf245Vh6LcD4RVr21UF9tj
uATKdGy3Q7Pie+KMzmshQqXXxv+jjakkem3HYjGGUa9t5wGxPb22lQaCqnpt
p8XTdtdrW8VlBkMpX9vqI/6ws7ilza9tEwUHtaMFkZKh156j8tZU6YIW8123
Xm9GGnVailTZ9F1k/oBe27l88fiXl2MVUPcFr8ZvEfkT8yEM4c+GXeXbK18N
Flg6G5w84YncZ6YdU7CZ9J5pBU6DFsd89esSyCG9ZxpWr/e0FxjeR79nmtWh
93QZOco6vaeVCcrEjCAuZoPsb3sVkwqFhiArPul1Hx4zhusPcMPZQQD69LrW
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
G4MqxVw=\
\>"]]
}, Open  ]],

Cell["\<\
Clearly our algorithm does not conserve energy with this time step, though \
with a timestep of 0.001 things are much better. We shall briefly return to \
this point about conserved quantities in the next lecture.\
\>", "Text"],

Cell["\<\
Similarly, any of the other algorithms we have discussed can be applied to \
systems of equations as well as to single equations.\
\>", "Text",
 CellChangeTimes->{{3.631265290457129*^9, 3.631265290596766*^9}}],

Cell[CellGroupData[{

Cell["Stiff systems", "Subsection"],

Cell[TextData[{
 "Sometimes apparently quite innocent equations can give problems. Consider \
the pair of equations\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", "u"}], 
     RowBox[{"\[DifferentialD]", "t"}]], "=", " ", 
    RowBox[{
     RowBox[{"998", " ", "u"}], " ", "+", 
     RowBox[{"1998", " ", "v"}]}]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[DifferentialD]", "v"}], 
     RowBox[{"\[DifferentialD]", "t"}]], "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "999"}], " ", "u"}], " ", "-", 
     RowBox[{"1999", " ", "v"}]}]}], TraditionalForm]}]],
 "\nwith boundary conditions ",
 StyleBox["u",
  FontSlant->"Italic"],
 "(0)=2 and ",
 StyleBox["v",
  FontSlant->"Italic"],
 "(0)=-1, and try to solve the equations using our explicit Euler scheme. \
First, let's see what the analytic result is:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"u", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"998", " ", 
        RowBox[{"u", "[", "t", "]"}]}], "+", 
       RowBox[{"1998", " ", 
        RowBox[{"v", "[", "t", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"v", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "999"}], " ", 
        RowBox[{"u", "[", "t", "]"}]}], "-", 
       RowBox[{"1999", " ", 
        RowBox[{"v", "[", "t", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"u", "[", "0", "]"}], "\[Equal]", "2"}], ",", 
     RowBox[{
      RowBox[{"v", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"-", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", "[", "t", "]"}], ",", 
     RowBox[{"v", "[", "t", "]"}]}], "}"}], ",", "t"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"u", "[", "t", "]"}], "\[Rule]", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "t"}]]}]}], ",", 
    RowBox[{
     RowBox[{"v", "[", "t", "]"}], "\[Rule]", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "t"}]]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.441611638317*^9, 3.4736832075*^9}]
}, Open  ]],

Cell[TextData[{
 "That seems fairly simple, so let's try a timestep of 0.01, and solve up to ",
 StyleBox["t",
  FontSlant->"Italic"],
 "=1."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fst", "[", 
   RowBox[{"\[CapitalDelta]t_", ",", "tmax_", ",", "u0_", ",", "v0_"}], "]"}],
   ":=", 
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "+", "\[CapitalDelta]t"}], ",", 
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "+", 
        RowBox[{"998", " ", "\[CapitalDelta]t", " ", 
         RowBox[{
         "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "+", 
        RowBox[{"1998", " ", "\[CapitalDelta]t", " ", 
         RowBox[{
         "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}], 
       ",", 
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
        "-", 
        RowBox[{"999", " ", "\[CapitalDelta]t", " ", 
         RowBox[{
         "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "-", 
        RowBox[{"1999", " ", "\[CapitalDelta]t", " ", 
         RowBox[{
         "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}]}], 
      "}"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "u0", ",", "v0"}], "}"}], ",", 
    RowBox[{"Floor", "[", 
     FractionBox["tmax", "\[CapitalDelta]t"], "]"}]}], "]"}]}], "\n", 
 RowBox[{"pap", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"fst", "[", 
         RowBox[{"0.01`", ",", "1", ",", "2.`", ",", 
          RowBox[{"-", "1.`"}]}], "]"}], "]"}], ",", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxdlHs0lHkYx6faSkaWmlrrbC7dSNF1y9GpL5P7LbWlraZNilPOVFobmyja
anWTpC0WbSu3TonoSBsxGMO4S4qJYQaDwUSW3Gabp91/9jnnnTnvmXmf3/P9
fJ4ZQ8/j272mMhgMr0+X6v1/ZXmalWbXGnge6Z9eWWlKfL6Pglj29uEoR4ln
ehd6tj2Lx6ou9eB0jf8+vw+P/sGGtbmTiIlWVSoYSw4+PndsEjn0/TQouoJG
YwwmId+m6pABt9S+rMC6iX+fz0JEXny7/q8TUG9I8N2kno2QDSMHwjZOgNpF
5yB9Xm5/pmIcxpzrvCHjF2D8qM+6kTSObOqfB9+JfcLUfeNQPd2QkA9xYOFc
be1x9NB5BVAIVqjP6h3DWqpCMObVy5YfHP33/CK8+rs+LPj5VMvCIdUJxWDM
F84ts9DKZ9I8JVCmmxp3P3K0/I4ACBBptpIrHgnK/53mK0W7b/bEWU66pSRQ
1bAM509FzJ7u3Za/nOYth5Ztp9eMTJaVn2o83wrEdZ9ftd/BruAvmr8SAd4O
rKtrAq2mkIZq8G2PBrz7+VFBIuWpxh98vVvjN8VWDiotdjV4ybpgFJQ0h9dL
+WowuSP4odOYNfsGTxWgFj9oaix8GhPA+5by1kEtzYXPDH/AfkuA6qDj8RUq
Wt7xgin/KzguDfaTVGhtMVSNo1cPTaG89W4nu7CYeNTj5CGT5pvWJ7cc8VbV
a6hl9O9e2ptcOJv4NGBFsukSYXfjlgzamwZoceouLbbXLNpJvN5AKLl4LUrN
yvojCXwD+/wN+snL/IriiN9buD3TmyYKT7S2ogVoxP7r537JtnxT1E48G+Ha
OuBXac+0uURCm+C/6QRblrG52JT4inD7yf7EOdYnbGrKVSWCPIU5GsVNKD5J
vN9BQ88l2qix3uZrVVxWM2oL/K9yb6nxc4l/M+bETNfTTdloe0DVjtMCdxf+
gQULjvM//0bECL2ivOgRcs92B+UR431Qy21ueh0/ifyIcYPbZBK4dIbdCOUT
w6hxva9Dj3mJI/lqxbGnm+KfqHHtYilvK+Zzpw8ILt0t6SN/rajVWKQWmltj
Z0n52+BzzGjZ6qFpgkjy2QYLjrNrg996eym1a0NJ5zzz7ewjgvXkV4K8+zpn
Y31i7cOIjwR7csY0FcNVgkbSI4HNnaNqAWNTHFYQLyncnE53tVusKz1D/qV4
nvUgic3zdqgmflLsZIaMXY6JLl1I+9AOnoZij6ii3OEn4tmOlTONBoVrGWV8
2o92zJddOWFjscZRh/h2wNArVz889FCZD+1LB/jaTyUvtW87viDeHZiStVw8
PFhapkn704mLJqtF/msmHD2Ifyf6kpuaPLmrhE9onzqh+GbXhv5Tnk5fkA8Z
bjLYeqalUUJ38iFDiqU6b7tniVMK+ZCBF+akG+c6KhwlHzKIPkbl+t4xdXYm
H124Wp7g8zLRozyefHTBwHZkV8DzSGcF+eiCxHWYzdcuLmeTj26UmLszlZnD
zlHkoxttynz5mQcmFR3koxtS/d1llcp9LubkoweDhrXbpC0RFZc//wFhnbeG
SDzGcxGRjx6MD1wb5uwdqjAjH3JwMs7+Jphh7BpCPuQIS96aem/m3spa8iFH
UOyp5luHw10Xk49eMA8vdnmlW1DpTz568eWQ4LXZ5kFXAfnoRebcPzM+JC6p
0iUffTBzf22Xuef7rVzy0YcPBjXps7yvVOWRjz7o2PR0lNXmbdUiH/1odpca
Rrq/r/IkH/3IaTXwPhS6yC2LfPRjaEI6EPF+Z/U08qFATpyVduHjMLd/AObf
Kec=
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.441611638375*^9, 3.4736833055439997`*^9}]
}, Open  ]],

Cell["\<\
This is clearly a total disaster. Why? To answer that, consider the general \
analytic solution:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"u", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"998", " ", 
         RowBox[{"u", "[", "t", "]"}]}], "+", 
        RowBox[{"1998", " ", 
         RowBox[{"v", "[", "t", "]"}]}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"v", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "999"}], " ", 
         RowBox[{"u", "[", "t", "]"}]}], "-", 
        RowBox[{"1999", " ", 
         RowBox[{"v", "[", "t", "]"}]}]}]}], ",", 
      RowBox[{
       RowBox[{"u", "[", "0", "]"}], "\[Equal]", "u0"}], ",", 
      RowBox[{
       RowBox[{"v", "[", "0", "]"}], "\[Equal]", "v0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "[", "t", "]"}], ",", 
      RowBox[{"v", "[", "t", "]"}]}], "}"}], ",", "t"}], "]"}], "//", 
  "FullSimplify"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"u", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "t"}]], " ", 
       RowBox[{"(", 
        RowBox[{"u0", "+", "v0"}], ")"}]}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "1000"}], " ", "t"}]], " ", 
       RowBox[{"(", 
        RowBox[{"u0", "+", 
         RowBox[{"2", " ", "v0"}]}], ")"}]}]}]}], ",", 
    RowBox[{
     RowBox[{"v", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "t"}]]}], " ", 
       RowBox[{"(", 
        RowBox[{"u0", "+", "v0"}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "1000"}], " ", "t"}]], " ", 
       RowBox[{"(", 
        RowBox[{"u0", "+", 
         RowBox[{"2", " ", "v0"}]}], ")"}]}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.441611639278*^9, 3.473683355433*^9}]
}, Open  ]],

Cell["\<\
What this shows us is that the general solution contains two components, one \
of which varies much more rapidly than the solution of the problem which we \
are actually interested in. Let's see if we can cure the problem by \
decreasing the time step further.\
\>", "Text",
 CellChangeTimes->{{3.6941609977274733`*^9, 3.694160998807035*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fst", "[", 
   RowBox[{"\[CapitalDelta]t_", ",", "tmax_", ",", "u0_", ",", "v0_"}], "]"}],
   ":=", 
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "+", "\[CapitalDelta]t"}], ",", 
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "+", 
        RowBox[{"998", " ", "\[CapitalDelta]t", " ", 
         RowBox[{
         "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "+", 
        RowBox[{"1998", " ", "\[CapitalDelta]t", " ", 
         RowBox[{
         "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}], 
       ",", 
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
        "-", 
        RowBox[{"999", " ", "\[CapitalDelta]t", " ", 
         RowBox[{
         "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "-", 
        RowBox[{"1999", " ", "\[CapitalDelta]t", " ", 
         RowBox[{
         "#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}]}], 
      "}"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "u0", ",", "v0"}], "}"}], ",", 
    RowBox[{"Floor", "[", 
     FractionBox["tmax", "\[CapitalDelta]t"], "]"}]}], "]"}]}], "\n", 
 RowBox[{"pap", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"fst", "[", 
         RowBox[{"0.001`", ",", "1", ",", "2.`", ",", 
          RowBox[{"-", "1.`"}]}], "]"}], "]"}], ",", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxdm2VYVN3bxVFBxcLCxMIOFOzCZWEhj4qKiIXdASo2ogh2g4qKmDzYhSKg
lISUdPcww3QXM0O8Z/az/1/e+eLFJWefs/fZe/3ue61h0JaDzttbmpiY8FuZ
mBj//X+f2Q2v5blOW5Zj9MUeJX+1zfjvZ3fsadkhPUTaDL33np9H7u7CphZr
Cjy5//v/Q6iZfEC7sKoZp7p/WFhz8ggqj/+xHVD0v98/joNx5T71f5txgj/M
ru270wgfac3NS/7f9T6oVVps/RzTjJlVy67fP3Aek871U9363ozTZLwLKHJJ
CPL80Iyfizu0HH3RH1wrr5Uuocz1ZPxL2Pfk08CZT5jrw/94xYRcgUMq32TI
PeZ6cr9rmPAhSNnxBnN9fz/hih838MNnar3OrxlN5P630Of+rE68M814kjjw
k+eu29izZ8ik4qPNmEWe5w7W3tuyL21/Myp15IaYX+LxNWZ7M7zJ8wVgXPd0
828bmtF/XMWQ1ucCEb6Ee+D96mbEkOe9B/lzsP51asbGbTOMIyJou9PWlw7M
/clwD5DbeFn+3J65fxD5YJruwLUXk5j7k/k8RE4brwmhNsz9/2pX1r56hDYN
vereDGXuT+b3GC/Scl587sfc39Slk82XYHy60mdflCVzfzLfJ7h6dP+spI7M
/aeRAVFYN79Prlkzmsn8n2Lz+r7N1Y1NWDbl8hx3zlMM9dorkqubEELW4xkW
az7WmEqaIF3xgxnxGTrGb63sXdcEkPV5jsTyFizbyibc3Mc1vGYmm+lhJlpc
2IQqsl4v4J/GN2z724RxZF+9wIKVo7qcT27CWbJ+L7H+4dzRz2KakPXM4buy
8SXUyz4sTvjehAFkPV9h+AL+Xs6HJhxkVquXaSiKDh283e7fJsSS9Q1FNOdn
pF1IEyyKXhyyb/cvlpQ7sd3uN2ETWe9/8fP9k87+N5vw0TjdzmFoyh896+vF
JjST9Q/DK4nHPtZZZv7G4Xq8Rt0P8cNux5n5k9fxGg+6WaUuOMTM37jcVm9g
ZXJSc2oXM3+ynG+w7dkF66/uzPyZ1cu2fovSGZFLRa7M/Mn7eosdkwKPDF/B
zH/9zQT1iHdws7wXtG0xM3/y/t7B48K06BdzmPkzo/UZ9x7xSxuL2dOY+ZP3
+R7Razcpho9n5n9bfBqTPqD/j4rW+0cx8yfv9wOqAjWW4dbM/N9ZuW2b8RFz
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
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.441611639349*^9, 3.473683419877*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"est", "=", 
   RowBox[{"fst", "[", 
    RowBox[{".001", ",", "1", ",", "2.0", ",", 
     RowBox[{"-", "1.0"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diff", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "-", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], ",", "est"}], 
    "]"}]}], ";", 
  RowBox[{"ListPlot", "[", "diff", "]"}]}]}], "Input"],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
PkmB1qznNN7yGQfXKhJfRU5rYRu6ToEC1nP6Hv1dq25UJN5K6/XbfnizAqtY
z+n7fOk7aKsi8ddnON+KSukdCrRkPUfO3tl4Y6oi8VhkrduIZrsVeMN6TuV7
Mu7sUSQ++4zsbY9x+xVYyXqOHA+O9gcVidcip5/5nnhYgeas59TfFGfvY4rE
b5Hbbhu1z6ZAPus5ckH8h+BTisRzn9Hvg3afOaPActZz5LwVm9plKBLffUb5
6itZWQpYWc+fUT7c0u6CIvFe5Jyat09fUuAl6zm1v3ig6RVF4r/IkRWv7rmm
wFLWcyqv6u95U5F4MHKGy38rbilQ/HvUZxQ/WG93V5H4MPLKEFvEfQXyWM+J
37jcylUkXkzrW5gR/FiBJaznyLpR+9Y9VSR+TOUZL0rkKRDEeo5cdGfIwJeK
xJORw574H8pX4BnrOXKtelant4rEl5G9TqwdWqhAPOs58rDyHQ69VyTejGyv
tHb4pEBj1vPnuJ7oxb2KFIk/IztWDVj/VYEnrOfI6Wq9l98ViUcjW1zCAn8p
sJD1HDm+bNGYEqrEp5F1rs92l1LBwnpO9VN839qpEq9+TvGKTG97FR6xniNr
Lp8Y5KBK/Jr6e1BtRQUV5rOeU3396cxKqsSzn5N/n/3FUQWF9Rw5dGyQZ1VV
4tvIKZllu1VXIZf1HFlrNkXXVCXeTet9fvLf2irMZT1Htlbbd9JZlfg3cnZ+
+cf1VDCxntN6NmRotKrEw5Ftw/KdXVUo/v0xctvwSJO7KvFxWu+TUe09VIhj
Paf5fr3Q30uVeDmy/cPEcB8VDKznyGlnr0z2UyV+TuW3o+ICVLjLeo4c2S5+
sU6VeDpyTvOaKw0qzOLl0v68r5xkUiW+jhwSN2mNooKO9Rw5z79vkkWVeHse
7pdj2srGKtxmPUfW9Z20JEiV+Hse/T7g2JxgFWayniPH34iaalUlHo/ctt+u
iOYqBLCeI6d/GBjWUpX4PPKwzPmdWquQw3qObC2lWtqqEq9HLsoaqG2vwj+s
58gZbe3LdFQlfo8ctlH/opMKfqzneZSfvZfZRZV4PrVfXD6lqwo3WM9pvDHH
ZnRXJb6fR7///NTvNxViWM+Rc4/vM/ZSJd6PbIv6Xra3Cj6s58gFzudv9VEl
/k/lWQ239lPhGus5jb/NYeIAVfIByCn3JlnDVCj+vTlyRFy0/e+q5AeQHS+U
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
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.4416116394639997`*^9}]
}, Open  ]],

Cell["\<\
The message, then, is that if our problem contains elements with very \
different time scales, if we try to solve explicitly we have to set the \
time-step to follow the most rapidly varying part of the problem. Problems \
with very different time scales are known as stiff problems. This case, in \
which the scales differ by a factor of 1000, is relatively mild: enormously \
stiff problems occur in cases in which diffusion and drift (motion of a \
charged particle in an electric field) occur together.\
\>", "Text"],

Cell["\<\
 In this situation, as in many others, we can restore stability by using an \
implicit scheme - that is, one in which we have an equation to solve for the \
updated value rather than obtaining an explicit form. Implict schemes will be \
explored in the next lecture and in one of the exercises in the homework.\
\>", "Text"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summary", "Section"],

Cell[TextData[{
 "  Of course this brief discussion has had to leave a lot out. In any `black \
box' implementation of a numerical solver there is usually an algorithm for \
altering the step size automatically. For nice smooth functions the step size \
can then grow to quite large values -- and then one has to build in \
algorithms to recognise when something has changed suddenly (in a heat flow \
problem something might have melted and suddenly changed its thermal \
conductivity or specific heat).  Another refinement is to recognise that for \
a sufficiently smooth function the true function is probably approached in \
some smooth way as the step size is reduced -- so-called Bulirsch-Stoer \
methods use this idea to fit the function being evaluated to a function of \
the step size, and then evaluate it at a step size of zero. General-purpose \
codes may have a variety of methods at their disposal (have a look at the \
documentation of the methods in the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ",
 StyleBox["NDSolve",
  FontFamily->"Courier New"],
 " routine, for example: in 1996 it said there that the code for ",
 StyleBox["NDSolve",
  FontFamily->"Courier New"],
 " was 500 pages long, and by 2009 it had grown to 1400 pages long!)."
}], "Text",
 CellChangeTimes->{{3.5048536005873938`*^9, 3.504853654379471*^9}, {
  3.631265632966597*^9, 3.631265633526576*^9}}],

Cell["\<\

A.H. Harker
Physics and Astronomy, UCL
September 2005, updated January 2009, January 2011, January 2012.
Amended by Patrick Guio, Physics and Astronomy, UCL, January 2015 and January \
2017.\
\>", "Text",
 CellChangeTimes->{{3.441611635677*^9, 3.4416116518129997`*^9}, 
   3.441618033677*^9, {3.504853680606971*^9, 3.504853684643202*^9}, {
   3.5364188035831733`*^9, 3.5364188103845625`*^9}, {3.631265644164619*^9, 
   3.631265686270453*^9}, {3.63126572605929*^9, 3.631265762363988*^9}, {
   3.631863595372965*^9, 3.631863602004204*^9}, {3.694161015491679*^9, 
   3.694161021307721*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1136},
WindowMargins->{{-1, Automatic}, {Automatic, -1}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
ShowSelection->True,
Magnification:>1.5 Inherited,
FrontEndVersion->"10.4 for Linux x86 (64-bit) (April 11, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "Modify the definitions below to change the default appearance of all \
cells in a given style.  Make modifications to any definition using commands \
in the Format menu.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Subsection"], 
         Cell[
          StyleData[All, "Working"], 
          CellBracketOptions -> {"Color" -> RGBColor[0, 0.2, 1]}, 
          ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Subsection"], 
         Cell[
         "  The options defined for the style below will be used at the \
Notebook level.  ", "Text"], 
         Cell[
          StyleData["Notebook"], PageHeaders -> {{
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"], None, 
             Cell[
              TextData[{
                OptionValueBox["FileName"]}], "Header"]}, {
             Cell[
              TextData[{
                OptionValueBox["FileName"]}], "Header"], None, 
             Cell[
              TextData[{
                CounterBox["Page"]}], "PageNumber"]}}, 
          PrintingOptions -> {
           "FacingPages" -> False, "FirstPageHeader" -> False, 
            "PageHeaderMargins" -> {43, 43}, "PageSize" -> {611.688, 792}}, 
          CellFrameLabelMargins -> 6, StyleMenuListing -> None]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Headings", "Subsection", 
          HyphenationOptions -> {"HyphenationMinLengths" -> {Inherited, 7}}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{0, 0}, {15, 0}}, 
             CellMargins -> {{10, 0}, {0, 4}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, 
             CellFrameMargins -> {{0, 0}, {-8, 0}}, CellFrameColor -> 
             RGBColor[0.400015, 0, 0.600015], TextAlignment -> Right, 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, 
             LineSpacing -> {1, 0}, CounterIncrements -> "Title", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Subtitle", 0}}, FontFamily -> "Arial", 
             FontSize -> 72, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.400015, 0, 0.600015]], 
            Cell[
             StyleData["Title", "Printout"], CellFrame -> {{0, 0}, {6, 0}}, 
             CellMargins -> {{10, 0}, {0, 6}}, 
             CellFrameMargins -> {{0, 0}, {-7, 0}}, CellFrameColor -> 
             GrayLevel[0.6], 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, FontFamily -> 
             "Arial", FontSize -> 38, FontWeight -> "Bold", FontColor -> 
             GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], CellMargins -> {{10, -0.75}, {20, 7}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, CounterIncrements -> 
             "Subtitle", 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}, {"Subsubtitle", 0}}, FontFamily -> "Arial", 
             FontSize -> 32, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.400015, 0, 0.600015]], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{10, -0.75}, {20, 8}}, 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, FontFamily -> 
             "Arial", FontSize -> 21, FontWeight -> "Bold", FontColor -> 
             GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], CellMargins -> {{50, 10}, {10, 2}}, 
             TextAlignment -> Right, Hyphenation -> True, 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, 
             LineSpacing -> {1, 2}, CounterIncrements -> "SmallText", 
             FontFamily -> "Times", FontSize -> 12, FontSlant -> "Italic"], 
            Cell[
             StyleData["SmallText", "Printout"], PageWidth -> PaperWidth, 
             CellMargins -> {{50, 2}, {10, 4}}, 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, 
             LineSpacing -> {1, 2}, FontFamily -> "Palatino", FontSize -> 9]},
            Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellFrame -> {{6, 0}, {0, 1.5}}, 
             CellMargins -> {{10, 0}, {12, 18}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 18}, 
             CellGroupingRules -> {"SectionGrouping", 30}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.530007, 0, 0], 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, CounterIncrements -> 
             "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
               "NumberedEquation", 0}}, FontFamily -> "Arial", FontSize -> 22,
              FontWeight -> "Bold", FontColor -> RGBColor[0.530007, 0, 0]], 
            Cell[
             StyleData["Section", "Printout"], 
             CellFrame -> {{0, 0}, {2.5, 0}}, 
             CellMargins -> {{10, 0}, {14, 18}}, PageBreakBelow -> False, 
             CellFrameMargins -> {{10, 0}, {0, 7}}, CellFrameColor -> 
             GrayLevel[0.500008], 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, FontFamily -> 
             "Arial", FontSize -> 14, FontWeight -> "Bold", FontColor -> 
             GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellFrame -> {{6, 0}, {0, 1.5}}, 
             CellMargins -> {{10, 0}, {11, 16}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
             CellGroupingRules -> {"SectionGrouping", 40}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.100008, 0.0899977, 0.659998], 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, CounterIncrements -> 
             "Subsection", CounterAssignments -> {{"Subsubsection", 0}}, 
             FontFamily -> "Arial", FontSize -> 18, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.100008, 0.0899977, 0.659998]], 
            Cell[
             StyleData["Subsection", "Printout"], CellFrame -> False, 
             CellDingbat -> None, CellMargins -> {{10, 0}, {9, 14}}, 
             PageBreakBelow -> False, 
             CellFrameMargins -> {{10, 0}, {0.6875, 6}}, CellFrameColor -> 
             GrayLevel[0.6], 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, FontFamily -> 
             "Arial", FontSize -> 12, FontWeight -> "Bold", FontColor -> 
             GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellFrame -> {{6, 0}, {0, 1.5}}, 
             CellDingbat -> None, CellMargins -> {{10, 0}, {6, 12}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
             CellGroupingRules -> {"SectionGrouping", 50}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.110002, 0.429999, 0.110002], 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, CounterIncrements -> 
             "Subsubsection", FontFamily -> "Arial", FontSize -> 14, 
             FontWeight -> "Bold", FontColor -> 
             RGBColor[0.110002, 0.429999, 0.110002]], 
            Cell[
             StyleData["Subsubsection", "Printout"], CellFrame -> False, 
             CellDingbat -> "\[FilledSquare]", 
             CellMargins -> {{21, 0}, {6, 9}}, PageBreakBelow -> False, 
             CellFrameColor -> GrayLevel[0.6], 
             HyphenationOptions -> {
              "HyphenationMinLengths" -> {Inherited, 7}}, 
             LineSpacing -> {1, 2}, FontFamily -> "Arial", FontSize -> 10, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0]]}, Open]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Text", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], CellMargins -> {{10, 0}, {2, 2}}, 
             InputAutoReplacements -> {
              "mma" -> "Mathematica", "Mma" -> "Mathematica", "MMA" -> 
               "Mathematica", Inherited}, Hyphenation -> True, 
             LineSpacing -> {1, 4}, ParagraphSpacing -> {0, 0}, TabSpacings -> 
             1.8, CounterIncrements -> "Text", FontFamily -> "Times", 
             FontSize -> 12], 
            Cell[
             StyleData["Text", "Printout"], PageWidth -> PaperWidth, 
             CellMargins -> {{10, 0}, {0, 0}}, TextJustification -> 1, 
             LineSpacing -> {1, 2}, ParagraphSpacing -> {0, 0}, TabSpacings -> 
             1.5, FontFamily -> "Palatino", FontSize -> 10]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["EmphasizedText"], CellFrame -> {{1, 0}, {0, 0}}, 
             CellMargins -> {{10, 0}, {3, 3}}, 
             CellFrameMargins -> {{10, Inherited}, {Inherited, Inherited}}, 
             CellFrameColor -> RGBColor[0.829999, 0, 0.0500038], 
             InputAutoReplacements -> {
              "mma" -> "Mathematica", "Mma" -> "Mathematica", "MMA" -> 
               "Mathematica", Inherited}, Hyphenation -> True, 
             LineSpacing -> {1, 4}, ParagraphIndent -> -14, TabSpacings -> 
             1.8, CounterIncrements -> "Text", FontFamily -> "Times", 
             FontSize -> 12, Background -> RGBColor[1, 0.994522, 0.910979]], 
            Cell[
             StyleData["EmphasizedText", "Printout"], PageWidth -> PaperWidth,
              CellFrame -> False, CellMargins -> {{23, 0}, {5, 5}}, 
             CellFrameMargins -> {{7, Inherited}, {Inherited, Inherited}}, 
             CellFrameColor -> GrayLevel[0], TextJustification -> 1, 
             LineSpacing -> {1, 2}, ParagraphIndent -> -8.6875, TabSpacings -> 
             1.5, FontFamily -> "Palatino", FontSize -> 10, Background -> 
             GrayLevel[1]]}, Open]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Input/Output", "Subsection"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.    ", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellMargins -> {{40, 10}, {4, 4}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             CellLabelAutoDelete -> True, 
             CellLabelMargins -> {{11, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             LineSpacing -> {1, 4}, AutoItalicWords -> {}, LanguageCategory -> 
             "Mathematica", FormatType -> StandardForm, ShowStringCharacters -> 
             True, NumberMarks -> True, 
             LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, CounterIncrements -> 
             "Input", FontFamily -> "Courier", FontSize -> 12, FontWeight -> 
             "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellMargins -> {{28, 0}, {4, 4}},
              LineSpacing -> {1, 1}, 
             LinebreakAdjustments -> {0.85, 2, 10, 1, 1}, FontSize -> 9]}, 
           Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], CellMargins -> {{40, 10}, {4, 2}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, 
             CellLabelAutoDelete -> True, 
             CellLabelMargins -> {{11, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, LanguageCategory -> None, FormatType -> 
             StandardForm, CounterIncrements -> "Output", FontFamily -> 
             "Courier", FontSize -> 12], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{28, 0}, {4, 0}}, FontSize -> 9]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], CellMargins -> {{28, Inherited}, {2, 1}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, LanguageCategory -> None, FormatType -> 
             InputForm, CounterIncrements -> "Message", StyleMenuListing -> 
             None, FontFamily -> "Courier", FontSize -> 12, FontColor -> 
             RGBColor[0, 0.2, 1]], 
            Cell[
             StyleData["Message", "Printout"], ShowCellBracket -> False, 
             FontSize -> 9]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], CellMargins -> {{40, Inherited}, {2, 1}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, 
             HyphenationOptions -> {
              "HyphenationCharacter" -> "\[Continuation]"}, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             CounterIncrements -> "Print", StyleMenuListing -> None, 
             FontFamily -> "Courier", FontSize -> 12], 
            Cell[
             StyleData["Print", "Printout"], ShowCellBracket -> False, 
             CellMargins -> {{28, Inherited}, {2, 1}}, FontSize -> 9]}, 
           Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{25, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, CounterIncrements -> "Graphics", 
             ImageMargins -> {{43, Inherited}, {Inherited, 0}}, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
             ImageSize -> {110, 110}, 
             ImageMargins -> {{18, Inherited}, {Inherited, 0}}, FontSize -> 
             9]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Arial", FontSize -> 12, FontColor -> RGBColor[0, 0.2, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontSize -> 9, FontSlant -> 
             "Oblique", FontColor -> GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["FrameLabel"], LanguageCategory -> None, 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 12], 
            Cell[
             StyleData["FrameLabel", "Printout"], FontFamily -> "Palatino", 
             FontSize -> 10, FontColor -> GrayLevel[0]]}, Open]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Variations for Headings", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SectionZeroAbove"], CellFrame -> {{6, 0}, {0, 1.5}}, 
             CellMargins -> {{10, 0}, {12, 18}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 18}, 
             CellGroupingRules -> {"SectionGrouping", 30}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.530007, 0, 0], CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
               "NumberedEquation", 0}}, FontFamily -> "Arial", FontSize -> 22,
              FontWeight -> "Bold", FontColor -> RGBColor[0.530007, 0, 0]], 
            Cell[
             StyleData["SectionZeroAbove", "Printout"], 
             CellFrame -> {{0, 0}, {2.5, 0}}, 
             CellMargins -> {{10, 0}, {14, 0}}, PageBreakBelow -> False, 
             CellFrameMargins -> {{10, 0}, {0, 7}}, CellFrameColor -> 
             GrayLevel[0.500008], FontFamily -> "Arial", FontSize -> 14, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubsectionZeroAbove"], 
             CellFrame -> {{6, 0}, {0, 1.5}}, 
             CellMargins -> {{10, 0}, {11, 5}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
             CellGroupingRules -> {"SectionGrouping", 40}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.100008, 0.0899977, 0.659998], CounterIncrements -> 
             "Subsection", CounterAssignments -> {{"Subsubsection", 0}}, 
             FontFamily -> "Arial", FontSize -> 18, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.100008, 0.0899977, 0.659998]], 
            Cell[
             StyleData["SubsectionZeroAbove", "Printout"], CellFrame -> False,
              CellDingbat -> None, CellMargins -> {{10, 0}, {9, 0}}, 
             PageBreakBelow -> False, 
             CellFrameMargins -> {{10, 0}, {0.6875, 6}}, CellFrameColor -> 
             GrayLevel[0.6], FontFamily -> "Arial", FontSize -> 12, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubsectionZeroBelow"], 
             CellFrame -> {{6, 0}, {0, 1.5}}, 
             CellMargins -> {{10, 0}, {8, 16}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
             CellGroupingRules -> {"SectionGrouping", 40}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.100008, 0.0899977, 0.659998], CounterIncrements -> 
             "Subsection", CounterAssignments -> {{"Subsubsection", 0}}, 
             FontFamily -> "Arial", FontSize -> 18, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.100008, 0.0899977, 0.659998]], 
            Cell[
             StyleData["SubsectionZeroBelow", "Printout"], CellFrame -> False,
              CellDingbat -> None, CellMargins -> {{10, 0}, {4, 14}}, 
             PageBreakBelow -> False, 
             CellFrameMargins -> {{10, 0}, {0.6875, 6}}, CellFrameColor -> 
             GrayLevel[0.6], FontFamily -> "Arial", FontSize -> 12, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubsectionZeroAboveBelow"], 
             CellFrame -> {{6, 0}, {0, 1.5}}, 
             CellMargins -> {{10, 0}, {8, 5}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
             CellGroupingRules -> {"SectionGrouping", 40}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.100008, 0.0899977, 0.659998], CounterIncrements -> 
             "Subsection", CounterAssignments -> {{"Subsubsection", 0}}, 
             FontFamily -> "Arial", FontSize -> 18, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.100008, 0.0899977, 0.659998]], 
            Cell[
             StyleData["SubsectionZeroAboveBelow", "Printout"], CellFrame -> 
             False, CellDingbat -> None, CellMargins -> {{10, 0}, {4, 0}}, 
             PageBreakBelow -> False, 
             CellFrameMargins -> {{10, 0}, {0.6875, 6}}, CellFrameColor -> 
             GrayLevel[0.6], FontFamily -> "Arial", FontSize -> 12, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubsubsectionZeroAbove"], 
             CellFrame -> {{6, 0}, {0, 1.5}}, CellDingbat -> None, 
             CellMargins -> {{10, 0}, {6, 7}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
             CellGroupingRules -> {"SectionGrouping", 50}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.110002, 0.429999, 0.110002], CounterIncrements -> 
             "Subsubsection", FontFamily -> "Arial", FontSize -> 14, 
             FontWeight -> "Bold", FontColor -> 
             RGBColor[0.110002, 0.429999, 0.110002]], 
            Cell[
             StyleData["SubsubsectionZeroAbove", "Printout"], CellFrame -> 
             False, CellDingbat -> "\[FilledSquare]", 
             CellMargins -> {{21, 0}, {6, 0}}, PageBreakBelow -> False, 
             CellFrameColor -> GrayLevel[0.6], LineSpacing -> {1, 2}, 
             FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Bold", 
             FontColor -> GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubsubsectionZeroBelow"], 
             CellFrame -> {{6, 0}, {0, 1.5}}, CellDingbat -> None, 
             CellMargins -> {{10, 0}, {3, 12}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
             CellGroupingRules -> {"SectionGrouping", 50}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.110002, 0.429999, 0.110002], CounterIncrements -> 
             "Subsubsection", FontFamily -> "Arial", FontSize -> 14, 
             FontWeight -> "Bold", FontColor -> 
             RGBColor[0.110002, 0.429999, 0.110002]], 
            Cell[
             StyleData["SubsubsectionZeroBelow", "Printout"], CellFrame -> 
             False, CellDingbat -> "\[FilledSquare]", 
             CellMargins -> {{21, 0}, {1, 9}}, PageBreakBelow -> False, 
             CellFrameColor -> GrayLevel[0.6], LineSpacing -> {1, 2}, 
             FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Bold", 
             FontColor -> GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SubsubsectionZeroAboveBelow"], 
             CellFrame -> {{6, 0}, {0, 1.5}}, CellDingbat -> None, 
             CellMargins -> {{10, 0}, {3, 7}}, 
             CellElementSpacings -> {"ClosedGroupTopMargin" -> 12}, 
             CellGroupingRules -> {"SectionGrouping", 50}, 
             CellFrameMargins -> {{12, 0}, {2, 4}}, CellFrameColor -> 
             RGBColor[0.110002, 0.429999, 0.110002], CounterIncrements -> 
             "Subsubsection", FontFamily -> "Arial", FontSize -> 14, 
             FontWeight -> "Bold", FontColor -> 
             RGBColor[0.110002, 0.429999, 0.110002]], 
            Cell[
             StyleData["SubsubsectionZeroAboveBelow", "Printout"], CellFrame -> 
             False, CellDingbat -> "\[FilledSquare]", 
             CellMargins -> {{21, 0}, {1, 0}}, PageBreakBelow -> False, 
             CellFrameColor -> GrayLevel[0.6], LineSpacing -> {1, 2}, 
             FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Bold", 
             FontColor -> GrayLevel[0]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ChapterContents1"], CellMargins -> {{10, 0}, {2, 2}}, 
             Hyphenation -> True, LineSpacing -> {1, 4}, FontFamily -> 
             "Times", FontSize -> 13, FontWeight -> "Bold"], 
            Cell[
             StyleData["ChapterContents1", "Printout"], PageWidth -> 
             PaperWidth, CellMargins -> {{10, 0}, {1, 1}}, FontFamily -> 
             "Palatino", FontSize -> 9]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ChapterContents2"], CellMargins -> {{32, 0}, {2, 2}}, 
             Hyphenation -> True, LineSpacing -> {1, 5}, 
             ParagraphIndent -> -30, FontFamily -> "Times", FontSize -> 12], 
            Cell[
             StyleData["ChapterContents2", "Printout"], PageWidth -> 
             PaperWidth, CellMargins -> {{27, 0}, {0, 0}}, 
             LineSpacing -> {1, 4}, FontFamily -> "Palatino", FontSize -> 9]},
            Open]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Variations for Text", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BoxedText"], CellFrame -> {{1.5, 0.25}, {0.25, 1.5}}, 
             CellMargins -> {{10, 0}, {6, 6}}, 
             CellFrameMargins -> {{14, 4}, {6, 6}}, CellFrameColor -> 
             RGBColor[0, 0.00999466, 0.549996], Hyphenation -> True, 
             LineSpacing -> {1, 4}, ParagraphSpacing -> {0, 0}, 
             ParagraphIndent -> -15, TabSpacings -> 1.5, CounterIncrements -> 
             "Text", FontFamily -> "Times", FontSize -> 12, Background -> 
             RGBColor[0.930007, 0.949996, 1]], 
            Cell[
             StyleData["BoxedText", "Printout"], PageWidth -> PaperWidth, 
             CellFrame -> True, CellMargins -> {{10, 0}, {6, 6}}, 
             PageBreakWithin -> True, CellFrameMargins -> {{9, 3}, {4, 4}}, 
             CellFrameColor -> GrayLevel[0], LineSpacing -> {1, 2}, 
             ParagraphSpacing -> {0, 0}, ParagraphIndent -> -8.875, 
             TabSpacings -> 1.1, FontFamily -> "Palatino", FontSize -> 10, 
             Background -> GrayLevel[1]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BoxedProgram"], 
             CellFrame -> {{1.5, 0.25}, {0.25, 1.5}}, 
             CellMargins -> {{10, 0}, {6, 6}}, Evaluatable -> True, 
             CellFrameMargins -> {{14, 6}, {6, 6}}, CellFrameColor -> 
             RGBColor[0, 0.349996, 0], DefaultFormatType -> 
             DefaultInputFormatType, Hyphenation -> True, 
             LineSpacing -> {1, 2}, FormatType -> StandardForm, 
             ShowStringCharacters -> True, CounterIncrements -> "Text", 
             FontFamily -> "Courier", FontSize -> 12, FontWeight -> "Bold", 
             Background -> RGBColor[0.919997, 0.940002, 0.910079]], 
            Cell[
             StyleData["BoxedProgram", "Printout"], PageWidth -> PaperWidth, 
             CellFrame -> True, CellFrameMargins -> {{12, 3}, {4, 4}}, 
             CellFrameColor -> GrayLevel[0], ParagraphIndent -> -15, 
             FontFamily -> "Courier", FontSize -> 9, Background -> 
             GrayLevel[1]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Files"], FontFamily -> "Arial", FontSize -> 11, 
             FontWeight -> "Bold"], 
            Cell[
             StyleData["Files", "Printout"], PageWidth -> PaperWidth, 
             FontFamily -> "Arial", FontSize -> 9]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["DisplayEquation"], CellMargins -> {{10, 0}, {7, 7}}, 
             InputAutoReplacements -> {
              "mma" -> "Mathematica", "Mma" -> "Mathematica", "MMA" -> 
               "Mathematica", Inherited}, Hyphenation -> True, 
             LineSpacing -> {1, 4}, TabSpacings -> 1.8, CounterIncrements -> 
             "Text", FontFamily -> "Times", FontSize -> 12], 
            Cell[
             StyleData["DisplayEquation", "Printout"], PageWidth -> 
             PaperWidth, CellMargins -> {{10, 0}, {4, 4}}, CellFrameColor -> 
             GrayLevel[0], TextJustification -> 1, LineSpacing -> {1, 2}, 
             TabSpacings -> 1.5, FontFamily -> "Palatino", FontSize -> 10, 
             Background -> GrayLevel[1]]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], CellMargins -> {{10, 0}, {7, 7}}, 
             CellFrameLabels -> {{None, 
                Cell[
                 TextData[{"(", 
                   CounterBox["NumberedEquation"], ")"}]]}, {None, None}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             LineSpacing -> {1, 4}, TabSpacings -> 1.8, CounterIncrements -> 
             "NumberedEquation", FormatTypeAutoConvert -> False], 
            Cell[
             StyleData["NumberedEquation", "Printout"], 
             CellMargins -> {{10, 0}, {4, 4}}, LineSpacing -> {1, 2}, 
             TabSpacings -> 1.5, FontSize -> 10]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["DotNumberedEquation"], 
             CellMargins -> {{10, 0}, {7, 7}}, CellFrameLabels -> {{None, 
                Cell[
                 TextData[{"(", 
                   CounterBox["Section"], ".", 
                   CounterBox["NumberedEquation"], ")"}]]}, {None, None}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             LineSpacing -> {1, 4}, TabSpacings -> 1.8, CounterIncrements -> 
             "NumberedEquation", FormatTypeAutoConvert -> False], 
            Cell[
             StyleData["DotNumberedEquation", "Printout"], 
             CellMargins -> {{10, 0}, {4, 4}}, LineSpacing -> {1, 2}, 
             TabSpacings -> 1.5, FontSize -> 10]}, Open]], 
         Cell[
          StyleData["PictureGroup"], CellMargins -> {{41, 4}, {0, 4}}, 
          CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
          True, StyleMenuListing -> None]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Format Types", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellExpression"], PageWidth -> Infinity, 
             CellMargins -> {{28, 10}, {4, 4}}, ShowCellLabel -> False, 
             ShowSpecialCharacters -> False, AllowInlineCells -> False, 
             AutoItalicWords -> {}, StyleMenuListing -> None, FontFamily -> 
             "Courier", FontSize -> 12, Background -> GrayLevel[1]], 
            Cell[
             StyleData["CellExpression", "Printout"], PageWidth -> PaperWidth,
              CellMargins -> {{28, 0}, {4, 4}}, ShowCellLabel -> False, 
             ShowSpecialCharacters -> False, AllowInlineCells -> False, 
             AutoItalicWords -> {}, StyleMenuListing -> None, FontFamily -> 
             "Courier", FontSize -> 9, Background -> GrayLevel[1]]}, Open]], 
         Cell[
          StyleData["InputForm"], InputAutoReplacements -> {}, 
          AllowInlineCells -> False, Hyphenation -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {0.6, 1}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], 
          InputAutoReplacements -> {
           "->" -> "\[Rule]", ":>" -> "\[RuleDelayed]", "<=" -> 
            "\[LessEqual]", ">=" -> "\[GreaterEqual]", "!=" -> "\[NotEqual]", 
            "==" -> "\[Equal]", Inherited}, 
          "TwoByteSyntaxCharacterAutoReplacement" -> True, 
          LineSpacing -> {1.25, 0}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TraditionalForm"], 
             InputAutoReplacements -> {
              "->" -> "\[Rule]", ":>" -> "\[RuleDelayed]", "<=" -> 
               "\[LessEqual]", ">=" -> "\[GreaterEqual]", "!=" -> 
               "\[NotEqual]", "==" -> "\[Equal]", Inherited}, 
             "TwoByteSyntaxCharacterAutoReplacement" -> True, 
             LineSpacing -> {1.25, 0}, SingleLetterItalics -> True, 
             TraditionalFunctionNotation -> True, DelimiterMatching -> None, 
             StyleMenuListing -> None, FontFamily -> "Times"], 
            Cell[
             StyleData["TraditionalForm", "Printout"], 
             InputAutoReplacements -> {
              "->" -> "\[Rule]", ":>" -> "\[RuleDelayed]", "<=" -> 
               "\[LessEqual]", ">=" -> "\[GreaterEqual]", "!=" -> 
               "\[NotEqual]", "==" -> "\[Equal]", Inherited}, 
             "TwoByteSyntaxCharacterAutoReplacement" -> True, 
             LineSpacing -> {1.25, 0}, SingleLetterItalics -> True, 
             TraditionalFunctionNotation -> True, DelimiterMatching -> None, 
             StyleMenuListing -> None, FontFamily -> "Palatino", FontSize -> 
             10]}, Open]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Headers and Footers", "Subsection"], 
         Cell[
          StyleData["Header"], CellMargins -> {{10, 0}, {0, 0}}, 
          DefaultNewInlineCellStyle -> "None", LanguageCategory -> 
          "NaturalLanguage", StyleMenuListing -> None, FontFamily -> "Arial", 
          FontSize -> 9, FontWeight -> "Bold"], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          DefaultNewInlineCellStyle -> "None", LanguageCategory -> 
          "NaturalLanguage", StyleMenuListing -> None, FontSize -> 9, 
          FontSlant -> "Italic"], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{10, 0}, {0, 0}}, 
          StyleMenuListing -> None, FontFamily -> "Palatino", FontSize -> 12, 
          FontSlant -> "Italic"]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Subsection"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               ButtonData}], 
            Cell[
             StyleData["Hyperlink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
         "The following styles are for linking automatically to the on-line \
help system.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MainBookLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["MainBook", #]}]& )}], 
            Cell[
             StyleData["MainBookLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["AddOnsLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["AddOns", #]}]& )}], 
            Cell[
             StyleData["AddOnsLink", "Printout"], FontFamily -> "Palatino", 
             FontSize -> 10, FontVariations -> {"Underline" -> False}, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuide", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], FontSize -> 10, 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Subsection"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]]}, Open]]}, 
  Visible -> False, FrontEndVersion -> 
  "10.4 for Linux x86 (64-bit) (April 11, 2016)", StyleDefinitions -> 
  "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 18, 0, 137, "Title"],
Cell[588, 24, 100, 3, 148, "Subtitle"],
Cell[691, 29, 849, 14, 116, "Text"],
Cell[CellGroupData[{
Cell[1565, 47, 62, 0, 91, "Section"],
Cell[1630, 49, 7800, 265, 773, "Text"],
Cell[CellGroupData[{
Cell[9455, 318, 2974, 90, 351, "Input"],
Cell[12432, 410, 4529, 83, 341, "Output"]
}, Open  ]],
Cell[16976, 496, 183, 8, 29, "Text"],
Cell[CellGroupData[{
Cell[17184, 508, 2784, 84, 323, "Input"],
Cell[19971, 594, 25849, 431, 325, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45869, 1031, 53, 0, 91, "Section"],
Cell[CellGroupData[{
Cell[45947, 1035, 36, 0, 78, "Subsection"],
Cell[45986, 1037, 9177, 302, 267, "Text"],
Cell[CellGroupData[{
Cell[55188, 1343, 1392, 42, 152, "Input"],
Cell[56583, 1387, 2111, 39, 349, "Output"]
}, Open  ]],
Cell[58709, 1429, 461, 14, 31, "Text"],
Cell[59173, 1445, 661, 12, 58, "Text"],
Cell[CellGroupData[{
Cell[59859, 1461, 1584, 44, 182, "Input"],
Cell[61446, 1507, 2311, 42, 333, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[63806, 1555, 54, 0, 79, "Subsection"],
Cell[63863, 1557, 3863, 124, 485, "Text"],
Cell[CellGroupData[{
Cell[67751, 1685, 1642, 49, 152, "Input"],
Cell[69396, 1736, 2052, 38, 349, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71497, 1780, 44, 0, 79, "Subsection"],
Cell[71544, 1782, 3259, 122, 339, "Text"],
Cell[CellGroupData[{
Cell[74828, 1908, 978, 32, 210, "Input"],
Cell[75809, 1942, 308, 9, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76154, 1956, 1659, 49, 156, "Input"],
Cell[77816, 2007, 2100, 39, 349, "Output"]
}, Open  ]],
Cell[79931, 2049, 161, 3, 29, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80129, 2057, 53, 0, 79, "Subsection"],
Cell[80185, 2059, 1107, 34, 178, "Text"],
Cell[CellGroupData[{
Cell[81317, 2097, 347, 11, 68, "Input"],
Cell[81667, 2110, 3730, 69, 80, "Output"]
}, Open  ]],
Cell[85412, 2182, 542, 10, 87, "Text"],
Cell[CellGroupData[{
Cell[85979, 2196, 44, 0, 59, "Subsubsection"],
Cell[86026, 2198, 1452, 36, 173, "Text"],
Cell[87481, 2236, 1044, 32, 37, "Input"],
Cell[CellGroupData[{
Cell[88550, 2272, 92, 2, 34, "Input"],
Cell[88645, 2276, 88, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88770, 2282, 264, 8, 34, "Input"],
Cell[89037, 2292, 138, 3, 31, "Output"]
}, Open  ]],
Cell[89190, 2298, 85, 2, 29, "Text"],
Cell[CellGroupData[{
Cell[89300, 2304, 1269, 36, 92, "Input"],
Cell[90572, 2342, 566, 11, 343, "Output"]
}, Open  ]],
Cell[91153, 2356, 153, 3, 29, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91343, 2364, 51, 0, 59, "Subsubsection"],
Cell[91397, 2366, 3563, 111, 116, "Text"],
Cell[94963, 2479, 5268, 191, 166, "Text"],
Cell[CellGroupData[{
Cell[100256, 2674, 4133, 138, 70, "Input"],
Cell[104392, 2814, 1078, 34, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105507, 2853, 81, 2, 34, "Input"],
Cell[105591, 2857, 759, 25, 34, "Output"]
}, Open  ]],
Cell[106365, 2885, 1208, 35, 28, "Text"],
Cell[CellGroupData[{
Cell[107598, 2924, 961, 29, 63, "Input"],
Cell[108562, 2955, 859, 21, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109458, 2981, 614, 18, 34, "Input"],
Cell[110075, 3001, 536, 12, 344, "Output"]
}, Open  ]],
Cell[110626, 3016, 35799, 1141, 630, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[146486, 4164, 47, 0, 91, "Section"],
Cell[146536, 4166, 2792, 83, 486, "Text"],
Cell[CellGroupData[{
Cell[149353, 4253, 1566, 45, 101, "Input"],
Cell[150922, 4300, 16696, 278, 325, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167655, 4583, 501, 14, 63, "Input"],
Cell[168159, 4599, 28506, 473, 325, "Output"]
}, Open  ]],
Cell[196680, 5075, 105, 3, 29, "Text"],
Cell[CellGroupData[{
Cell[196810, 5082, 2087, 60, 157, "Input"],
Cell[198900, 5144, 341260, 5602, 386, 212138, 3483, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[540175, 10749, 237, 4, 29, "Text"],
Cell[540415, 10755, 219, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[540659, 10763, 35, 0, 79, "Subsection"],
Cell[540697, 10765, 932, 29, 144, "Text"],
Cell[CellGroupData[{
Cell[541654, 10798, 936, 30, 34, "Input"],
Cell[542593, 10830, 454, 14, 33, "Output"]
}, Open  ]],
Cell[543062, 10847, 153, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[543240, 10856, 1809, 48, 99, "Input"],
Cell[545052, 10906, 2124, 39, 303, "Output"]
}, Open  ]],
Cell[547191, 10948, 120, 3, 29, "Text"],
Cell[CellGroupData[{
Cell[547336, 10955, 982, 31, 34, "Input"],
Cell[548321, 10988, 1104, 35, 34, "Output"]
}, Open  ]],
Cell[549440, 11026, 352, 6, 58, "Text"],
Cell[CellGroupData[{
Cell[549817, 11036, 1810, 48, 99, "Input"],
Cell[551630, 11086, 16262, 270, 331, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[567929, 11361, 754, 24, 63, "Input"],
Cell[568686, 11387, 14285, 238, 321, "Output"]
}, Open  ]],
Cell[582986, 11628, 530, 8, 87, "Text"],
Cell[583519, 11638, 334, 5, 58, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[583902, 11649, 26, 0, 91, "Section"],
Cell[583931, 11651, 1397, 25, 174, "Text"],
Cell[585331, 11678, 598, 13, 143, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

